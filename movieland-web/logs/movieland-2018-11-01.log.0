01-11-2018 10:24:02.069 [main] INFO     o.s.t.c.w.WebTestContextBootstrapper.getDefaultTestExecutionListenerClassNames - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
01-11-2018 10:24:02.102 [main] INFO     o.s.t.c.w.WebTestContextBootstrapper.getTestExecutionListeners - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@290dbf45, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@12028586, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@17776a8, org.springframework.test.context.support.DirtiesContextTestExecutionListener@69a10787, org.springframework.test.context.transaction.TransactionalTestExecutionListener@2d127a61, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@2bbaf4f0]
01-11-2018 10:24:02.110 [main] INFO     o.s.t.c.w.WebTestContextBootstrapper.getDefaultTestExecutionListenerClassNames - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
01-11-2018 10:24:02.111 [main] INFO     o.s.t.c.w.WebTestContextBootstrapper.getTestExecutionListeners - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@70beb599, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@4e41089d, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@32a068d1, org.springframework.test.context.support.DirtiesContextTestExecutionListener@33cb5951, org.springframework.test.context.transaction.TransactionalTestExecutionListener@365c30cc, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@701fc37a]
01-11-2018 10:24:02.672 [main] INFO     o.s.b.f.xml.XmlBeanDefinitionReader.loadBeanDefinitions - Loading XML bean definitions from class path resource [spring/test-context.xml]
01-11-2018 10:24:03.010 [main] INFO     o.s.b.f.xml.XmlBeanDefinitionReader.loadBeanDefinitions - Loading XML bean definitions from class path resource [spring/test-db-context.xml]
01-11-2018 10:24:03.468 [main] INFO     o.s.w.c.s.GenericWebApplicationContext.prepareRefresh - Refreshing org.springframework.web.context.support.GenericWebApplicationContext@1dac5ef: startup date [Thu Nov 01 10:24:03 EET 2018]; root of context hierarchy
01-11-2018 10:24:03.689 [main] INFO     o.s.c.a.ConfigurationClassBeanDefinitionReader.isOverriddenByExistingDefinition - Skipping bean definition for [BeanMethod:name=jdbcTemplate,declaringClass=com.gordeev.movieland.configuration.JdbcConfig]: a definition for bean 'jdbcTemplate' already exists. This top-level bean definition is considered as an override.
01-11-2018 10:24:03.690 [main] INFO     o.s.c.a.ConfigurationClassBeanDefinitionReader.isOverriddenByExistingDefinition - Skipping bean definition for [BeanMethod:name=namedJdbcTemplate,declaringClass=com.gordeev.movieland.configuration.JdbcConfig]: a definition for bean 'namedJdbcTemplate' already exists. This top-level bean definition is considered as an override.
01-11-2018 10:24:04.054 [main] INFO     o.s.j.d.e.EmbeddedDatabaseFactory.initDatabase - Starting embedded database: url='jdbc:h2:mem:dataSource;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=false', username='sa'
01-11-2018 10:24:04.296 [main] INFO     o.s.jdbc.datasource.init.ScriptUtils.executeSqlScript - Executing SQL script from class path resource [db/schema.sql]
01-11-2018 10:24:04.335 [main] INFO     o.s.jdbc.datasource.init.ScriptUtils.executeSqlScript - Executed SQL script from class path resource [db/schema.sql] in 38 ms.
01-11-2018 10:24:04.336 [main] INFO     o.s.jdbc.datasource.init.ScriptUtils.executeSqlScript - Executing SQL script from class path resource [db/data.sql]
01-11-2018 10:24:04.570 [main] INFO     o.s.jdbc.datasource.init.ScriptUtils.executeSqlScript - Executed SQL script from class path resource [db/data.sql] in 233 ms.
01-11-2018 10:24:04.650 [main] INFO     c.g.movieland.dao.jdbc.JdbcGenreDao.getAll - Start processing query to get all genres
01-11-2018 10:24:04.662 [main] INFO     c.g.movieland.dao.jdbc.JdbcGenreDao.getAll - Finish processing query to get all genres. It took 11 ms
01-11-2018 10:24:04.664 [main] INFO     c.g.movieland.dao.cache.GenreCache.invalidate - Update all genres in cache from dao
01-11-2018 10:24:04.941 [main] INFO     o.s.w.s.m.m.a.RequestMappingHandlerMapping.register - Mapped "{[/genre],methods=[GET]}" onto protected java.util.List<com.gordeev.movieland.entity.Genre> com.gordeev.movieland.controller.GenreController.getAllGenre()
01-11-2018 10:24:04.946 [main] INFO     o.s.w.s.m.m.a.RequestMappingHandlerMapping.register - Mapped "{[/movie],methods=[GET]}" onto protected java.util.List<com.gordeev.movieland.entity.Movie> com.gordeev.movieland.controller.MovieController.getAllMovie(com.gordeev.movieland.vo.SortDirection,com.gordeev.movieland.vo.SortDirection)
01-11-2018 10:24:04.947 [main] INFO     o.s.w.s.m.m.a.RequestMappingHandlerMapping.register - Mapped "{[/movie/random],methods=[GET]}" onto protected java.util.List<com.gordeev.movieland.entity.Movie> com.gordeev.movieland.controller.MovieController.getThreeRandomMovie()
01-11-2018 10:24:04.948 [main] INFO     o.s.w.s.m.m.a.RequestMappingHandlerMapping.register - Mapped "{[/movie/genre/{genreId}],methods=[GET]}" onto protected java.util.List<com.gordeev.movieland.entity.Movie> com.gordeev.movieland.controller.MovieController.getMoviesByGenreId(int)
01-11-2018 10:24:04.949 [main] INFO     o.s.w.s.m.m.a.RequestMappingHandlerMapping.register - Mapped "{[/movie/{movieId}],methods=[GET]}" onto protected com.gordeev.movieland.entity.Movie com.gordeev.movieland.controller.MovieController.getMovieById(int)
01-11-2018 10:24:05.207 [main] INFO     o.s.w.s.m.m.a.RequestMappingHandlerAdapter.initControllerAdviceCache - Looking for @ControllerAdvice: org.springframework.web.context.support.GenericWebApplicationContext@1dac5ef: startup date [Thu Nov 01 10:24:03 EET 2018]; root of context hierarchy
01-11-2018 10:24:05.521 [main] INFO     o.s.w.s.m.m.a.RequestMappingHandlerMapping.register - Mapped "{[/genre],methods=[GET]}" onto protected java.util.List<com.gordeev.movieland.entity.Genre> com.gordeev.movieland.controller.GenreController.getAllGenre()
01-11-2018 10:24:05.530 [main] INFO     o.s.w.s.m.m.a.RequestMappingHandlerAdapter.initControllerAdviceCache - Looking for @ControllerAdvice: org.springframework.test.web.servlet.setup.StubWebApplicationContext@7b44b63d
01-11-2018 10:24:05.545 [main] INFO     o.s.mock.web.MockServletContext.log - Initializing Spring FrameworkServlet ''
01-11-2018 10:24:05.545 [main] INFO     o.s.t.w.s.TestDispatcherServlet.initServletBean - FrameworkServlet '': initialization started
01-11-2018 10:24:05.547 [main] INFO     o.s.t.w.s.TestDispatcherServlet.initServletBean - FrameworkServlet '': initialization completed in 1 ms
01-11-2018 10:24:05.577 [main] INFO     o.s.w.s.m.m.a.RequestMappingHandlerMapping.register - Mapped "{[/movie],methods=[GET]}" onto protected java.util.List<com.gordeev.movieland.entity.Movie> com.gordeev.movieland.controller.MovieController.getAllMovie(com.gordeev.movieland.vo.SortDirection,com.gordeev.movieland.vo.SortDirection)
01-11-2018 10:24:05.578 [main] INFO     o.s.w.s.m.m.a.RequestMappingHandlerMapping.register - Mapped "{[/movie/random],methods=[GET]}" onto protected java.util.List<com.gordeev.movieland.entity.Movie> com.gordeev.movieland.controller.MovieController.getThreeRandomMovie()
01-11-2018 10:24:05.579 [main] INFO     o.s.w.s.m.m.a.RequestMappingHandlerMapping.register - Mapped "{[/movie/genre/{genreId}],methods=[GET]}" onto protected java.util.List<com.gordeev.movieland.entity.Movie> com.gordeev.movieland.controller.MovieController.getMoviesByGenreId(int)
01-11-2018 10:24:05.580 [main] INFO     o.s.w.s.m.m.a.RequestMappingHandlerMapping.register - Mapped "{[/movie/{movieId}],methods=[GET]}" onto protected com.gordeev.movieland.entity.Movie com.gordeev.movieland.controller.MovieController.getMovieById(int)
01-11-2018 10:24:05.589 [main] INFO     o.s.w.s.m.m.a.RequestMappingHandlerAdapter.initControllerAdviceCache - Looking for @ControllerAdvice: org.springframework.test.web.servlet.setup.StubWebApplicationContext@69cac930
01-11-2018 10:24:05.597 [main] INFO     o.s.mock.web.MockServletContext.log - Initializing Spring FrameworkServlet ''
01-11-2018 10:24:05.598 [main] INFO     o.s.t.w.s.TestDispatcherServlet.initServletBean - FrameworkServlet '': initialization started
01-11-2018 10:24:05.599 [main] INFO     o.s.t.w.s.TestDispatcherServlet.initServletBean - FrameworkServlet '': initialization completed in 0 ms
01-11-2018 10:24:05.747 [main] INFO     c.g.movieland.dao.jdbc.JdbcMovieDao.getAll - Start processing query to get all movies
01-11-2018 10:24:05.756 [main] INFO     c.g.movieland.dao.jdbc.JdbcMovieDao.getAll - Finish processing query to get all movies. It took 9 ms
01-11-2018 10:24:05.757 [main] INFO     c.g.movieland.dao.jdbc.JdbcGenreDao.getGenresForMovies - Start processing query to get genres for movies with moviesIds: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25]
01-11-2018 10:24:05.777 [main] INFO     c.g.movieland.dao.jdbc.JdbcGenreDao.getGenresForMovies - Finish processing query to get genres for movies with moviesIds: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25]. It took 20 ms
01-11-2018 10:24:05.778 [main] INFO     c.g.m.dao.jdbc.JdbcCountryDao.getCountriesForMovies - Start processing query to get countries for movies with moviesIds: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25]
01-11-2018 10:24:05.783 [main] INFO     c.g.m.dao.jdbc.JdbcCountryDao.getCountriesForMovies - Finish processing query to get countries for movies with moviesIds: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25]. It took 4 ms
01-11-2018 10:24:06.174 [main] INFO     o.s.w.s.m.m.a.RequestMappingHandlerMapping.register - Mapped "{[/movie],methods=[GET]}" onto protected java.util.List<com.gordeev.movieland.entity.Movie> com.gordeev.movieland.controller.MovieController.getAllMovie(com.gordeev.movieland.vo.SortDirection,com.gordeev.movieland.vo.SortDirection)
01-11-2018 10:24:06.175 [main] INFO     o.s.w.s.m.m.a.RequestMappingHandlerMapping.register - Mapped "{[/movie/random],methods=[GET]}" onto protected java.util.List<com.gordeev.movieland.entity.Movie> com.gordeev.movieland.controller.MovieController.getThreeRandomMovie()
01-11-2018 10:24:06.176 [main] INFO     o.s.w.s.m.m.a.RequestMappingHandlerMapping.register - Mapped "{[/movie/genre/{genreId}],methods=[GET]}" onto protected java.util.List<com.gordeev.movieland.entity.Movie> com.gordeev.movieland.controller.MovieController.getMoviesByGenreId(int)
01-11-2018 10:24:06.177 [main] INFO     o.s.w.s.m.m.a.RequestMappingHandlerMapping.register - Mapped "{[/movie/{movieId}],methods=[GET]}" onto protected com.gordeev.movieland.entity.Movie com.gordeev.movieland.controller.MovieController.getMovieById(int)
01-11-2018 10:24:06.185 [main] INFO     o.s.w.s.m.m.a.RequestMappingHandlerAdapter.initControllerAdviceCache - Looking for @ControllerAdvice: org.springframework.test.web.servlet.setup.StubWebApplicationContext@280e8a1a
01-11-2018 10:24:06.188 [main] INFO     o.s.mock.web.MockServletContext.log - Initializing Spring FrameworkServlet ''
01-11-2018 10:24:06.189 [main] INFO     o.s.t.w.s.TestDispatcherServlet.initServletBean - FrameworkServlet '': initialization started
01-11-2018 10:24:06.189 [main] INFO     o.s.t.w.s.TestDispatcherServlet.initServletBean - FrameworkServlet '': initialization completed in 0 ms
01-11-2018 10:24:06.191 [main] INFO     c.g.movieland.dao.jdbc.JdbcMovieDao.getThreeRandomMovie - Start processing query to get 3 random movies
01-11-2018 10:24:06.206 [main] INFO     c.g.movieland.dao.jdbc.JdbcMovieDao.getThreeRandomMovie - Finish processing query to get 3 random movies. It took 14 ms
01-11-2018 10:24:06.206 [main] INFO     c.g.movieland.dao.jdbc.JdbcGenreDao.getGenresForMovies - Start processing query to get genres for movies with moviesIds: [20, 12, 19]
01-11-2018 10:24:06.209 [main] INFO     c.g.movieland.dao.jdbc.JdbcGenreDao.getGenresForMovies - Finish processing query to get genres for movies with moviesIds: [20, 12, 19]. It took 2 ms
01-11-2018 10:24:06.209 [main] INFO     c.g.m.dao.jdbc.JdbcCountryDao.getCountriesForMovies - Start processing query to get countries for movies with moviesIds: [20, 12, 19]
01-11-2018 10:24:06.211 [main] INFO     c.g.m.dao.jdbc.JdbcCountryDao.getCountriesForMovies - Finish processing query to get countries for movies with moviesIds: [20, 12, 19]. It took 2 ms
01-11-2018 10:24:06.229 [main] INFO     o.s.w.s.m.m.a.RequestMappingHandlerMapping.register - Mapped "{[/movie],methods=[GET]}" onto protected java.util.List<com.gordeev.movieland.entity.Movie> com.gordeev.movieland.controller.MovieController.getAllMovie(com.gordeev.movieland.vo.SortDirection,com.gordeev.movieland.vo.SortDirection)
01-11-2018 10:24:06.230 [main] INFO     o.s.w.s.m.m.a.RequestMappingHandlerMapping.register - Mapped "{[/movie/random],methods=[GET]}" onto protected java.util.List<com.gordeev.movieland.entity.Movie> com.gordeev.movieland.controller.MovieController.getThreeRandomMovie()
01-11-2018 10:24:06.231 [main] INFO     o.s.w.s.m.m.a.RequestMappingHandlerMapping.register - Mapped "{[/movie/genre/{genreId}],methods=[GET]}" onto protected java.util.List<com.gordeev.movieland.entity.Movie> com.gordeev.movieland.controller.MovieController.getMoviesByGenreId(int)
01-11-2018 10:24:06.232 [main] INFO     o.s.w.s.m.m.a.RequestMappingHandlerMapping.register - Mapped "{[/movie/{movieId}],methods=[GET]}" onto protected com.gordeev.movieland.entity.Movie com.gordeev.movieland.controller.MovieController.getMovieById(int)
01-11-2018 10:24:06.239 [main] INFO     o.s.w.s.m.m.a.RequestMappingHandlerAdapter.initControllerAdviceCache - Looking for @ControllerAdvice: org.springframework.test.web.servlet.setup.StubWebApplicationContext@1fcf9739
01-11-2018 10:24:06.243 [main] INFO     o.s.mock.web.MockServletContext.log - Initializing Spring FrameworkServlet ''
01-11-2018 10:24:06.243 [main] INFO     o.s.t.w.s.TestDispatcherServlet.initServletBean - FrameworkServlet '': initialization started
01-11-2018 10:24:06.244 [main] INFO     o.s.t.w.s.TestDispatcherServlet.initServletBean - FrameworkServlet '': initialization completed in 0 ms
01-11-2018 10:24:06.253 [main] INFO     c.g.movieland.dao.jdbc.JdbcGenreDao.getMoviesIdsByGenreId - Start processing query to get movieIds by genreId
01-11-2018 10:24:06.260 [main] INFO     c.g.movieland.dao.jdbc.JdbcGenreDao.getMoviesIdsByGenreId - Finish processing query to get movieIds by genreId. It took 6 ms
01-11-2018 10:24:06.261 [main] INFO     c.g.movieland.dao.jdbc.JdbcMovieDao.getMoviesByIds - Start processing query to get movies with moviesIds: [1, 2, 3, 4, 5, 6, 7, 8, 12, 13, 15, 17, 19, 20, 24, 25]
01-11-2018 10:24:06.267 [main] INFO     c.g.movieland.dao.jdbc.JdbcMovieDao.getMoviesByIds - Finish processing query to get movies with moviesIds: [1, 2, 3, 4, 5, 6, 7, 8, 12, 13, 15, 17, 19, 20, 24, 25]. It took 5 ms
01-11-2018 10:24:06.267 [main] INFO     c.g.movieland.dao.jdbc.JdbcGenreDao.getGenresForMovies - Start processing query to get genres for movies with moviesIds: [1, 2, 3, 4, 5, 6, 7, 8, 12, 13, 15, 17, 19, 20, 24, 25]
01-11-2018 10:24:06.271 [main] INFO     c.g.movieland.dao.jdbc.JdbcGenreDao.getGenresForMovies - Finish processing query to get genres for movies with moviesIds: [1, 2, 3, 4, 5, 6, 7, 8, 12, 13, 15, 17, 19, 20, 24, 25]. It took 3 ms
01-11-2018 10:24:06.272 [main] INFO     c.g.m.dao.jdbc.JdbcCountryDao.getCountriesForMovies - Start processing query to get countries for movies with moviesIds: [1, 2, 3, 4, 5, 6, 7, 8, 12, 13, 15, 17, 19, 20, 24, 25]
01-11-2018 10:24:06.288 [main] INFO     c.g.m.dao.jdbc.JdbcCountryDao.getCountriesForMovies - Finish processing query to get countries for movies with moviesIds: [1, 2, 3, 4, 5, 6, 7, 8, 12, 13, 15, 17, 19, 20, 24, 25]. It took 16 ms
01-11-2018 10:24:06.348 [Thread-1] INFO     o.s.w.c.s.GenericWebApplicationContext.doClose - Closing org.springframework.web.context.support.GenericWebApplicationContext@1dac5ef: startup date [Thu Nov 01 10:24:03 EET 2018]; root of context hierarchy
01-11-2018 10:24:06.359 [Thread-1] INFO     o.s.j.d.e.EmbeddedDatabaseFactory.shutdownDatabase - Shutting down embedded database: url='jdbc:h2:mem:dataSource;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=false'
01-11-2018 10:24:47.374 [main] INFO     o.s.t.c.w.WebTestContextBootstrapper.getDefaultTestExecutionListenerClassNames - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
01-11-2018 10:24:47.403 [main] INFO     o.s.t.c.w.WebTestContextBootstrapper.getTestExecutionListeners - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@1efee8e7, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@1ee807c6, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@76a4d6c, org.springframework.test.context.support.DirtiesContextTestExecutionListener@517cd4b, org.springframework.test.context.transaction.TransactionalTestExecutionListener@6cc7b4de, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@32cf48b7]
01-11-2018 10:24:48.046 [main] INFO     o.s.b.f.xml.XmlBeanDefinitionReader.loadBeanDefinitions - Loading XML bean definitions from class path resource [spring/test-context.xml]
01-11-2018 10:24:48.286 [main] INFO     o.s.b.f.xml.XmlBeanDefinitionReader.loadBeanDefinitions - Loading XML bean definitions from class path resource [spring/test-db-context.xml]
01-11-2018 10:24:48.683 [main] INFO     o.s.w.c.s.GenericWebApplicationContext.prepareRefresh - Refreshing org.springframework.web.context.support.GenericWebApplicationContext@5b94b04d: startup date [Thu Nov 01 10:24:48 EET 2018]; root of context hierarchy
01-11-2018 10:24:48.913 [main] INFO     o.s.c.a.ConfigurationClassBeanDefinitionReader.isOverriddenByExistingDefinition - Skipping bean definition for [BeanMethod:name=jdbcTemplate,declaringClass=com.gordeev.movieland.configuration.JdbcConfig]: a definition for bean 'jdbcTemplate' already exists. This top-level bean definition is considered as an override.
01-11-2018 10:24:48.914 [main] INFO     o.s.c.a.ConfigurationClassBeanDefinitionReader.isOverriddenByExistingDefinition - Skipping bean definition for [BeanMethod:name=namedJdbcTemplate,declaringClass=com.gordeev.movieland.configuration.JdbcConfig]: a definition for bean 'namedJdbcTemplate' already exists. This top-level bean definition is considered as an override.
01-11-2018 10:24:49.430 [main] INFO     o.s.j.d.e.EmbeddedDatabaseFactory.initDatabase - Starting embedded database: url='jdbc:h2:mem:dataSource;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=false', username='sa'
01-11-2018 10:24:49.703 [main] INFO     o.s.jdbc.datasource.init.ScriptUtils.executeSqlScript - Executing SQL script from class path resource [db/schema.sql]
01-11-2018 10:24:49.748 [main] INFO     o.s.jdbc.datasource.init.ScriptUtils.executeSqlScript - Executed SQL script from class path resource [db/schema.sql] in 44 ms.
01-11-2018 10:24:49.749 [main] INFO     o.s.jdbc.datasource.init.ScriptUtils.executeSqlScript - Executing SQL script from class path resource [db/data.sql]
01-11-2018 10:24:50.161 [main] INFO     o.s.jdbc.datasource.init.ScriptUtils.executeSqlScript - Executed SQL script from class path resource [db/data.sql] in 412 ms.
01-11-2018 10:24:50.242 [main] INFO     c.g.movieland.dao.jdbc.JdbcGenreDao.getAll - Start processing query to get all genres
01-11-2018 10:24:50.257 [main] INFO     c.g.movieland.dao.jdbc.JdbcGenreDao.getAll - Finish processing query to get all genres. It took 15 ms
01-11-2018 10:24:50.259 [main] INFO     c.g.movieland.dao.cache.GenreCache.invalidate - Update all genres in cache from dao
01-11-2018 10:24:50.527 [main] INFO     o.s.w.s.m.m.a.RequestMappingHandlerMapping.register - Mapped "{[/genre],methods=[GET]}" onto protected java.util.List<com.gordeev.movieland.entity.Genre> com.gordeev.movieland.controller.GenreController.getAllGenre()
01-11-2018 10:24:50.530 [main] INFO     o.s.w.s.m.m.a.RequestMappingHandlerMapping.register - Mapped "{[/movie],methods=[GET]}" onto protected java.util.List<com.gordeev.movieland.entity.Movie> com.gordeev.movieland.controller.MovieController.getAllMovie(com.gordeev.movieland.vo.SortDirection,com.gordeev.movieland.vo.SortDirection)
01-11-2018 10:24:50.532 [main] INFO     o.s.w.s.m.m.a.RequestMappingHandlerMapping.register - Mapped "{[/movie/random],methods=[GET]}" onto protected java.util.List<com.gordeev.movieland.entity.Movie> com.gordeev.movieland.controller.MovieController.getThreeRandomMovie()
01-11-2018 10:24:50.533 [main] INFO     o.s.w.s.m.m.a.RequestMappingHandlerMapping.register - Mapped "{[/movie/genre/{genreId}],methods=[GET]}" onto protected java.util.List<com.gordeev.movieland.entity.Movie> com.gordeev.movieland.controller.MovieController.getMoviesByGenreId(int)
01-11-2018 10:24:50.534 [main] INFO     o.s.w.s.m.m.a.RequestMappingHandlerMapping.register - Mapped "{[/movie/{movieId}],methods=[GET]}" onto protected com.gordeev.movieland.entity.Movie com.gordeev.movieland.controller.MovieController.getMovieById(int)
01-11-2018 10:24:50.825 [main] INFO     o.s.w.s.m.m.a.RequestMappingHandlerAdapter.initControllerAdviceCache - Looking for @ControllerAdvice: org.springframework.web.context.support.GenericWebApplicationContext@5b94b04d: startup date [Thu Nov 01 10:24:48 EET 2018]; root of context hierarchy
01-11-2018 10:24:51.214 [main] INFO     o.s.w.s.m.m.a.RequestMappingHandlerMapping.register - Mapped "{[/genre],methods=[GET]}" onto protected java.util.List<com.gordeev.movieland.entity.Genre> com.gordeev.movieland.controller.GenreController.getAllGenre()
01-11-2018 10:24:51.224 [main] INFO     o.s.w.s.m.m.a.RequestMappingHandlerAdapter.initControllerAdviceCache - Looking for @ControllerAdvice: org.springframework.test.web.servlet.setup.StubWebApplicationContext@6f6962ba
01-11-2018 10:24:51.242 [main] INFO     o.s.mock.web.MockServletContext.log - Initializing Spring FrameworkServlet ''
01-11-2018 10:24:51.243 [main] INFO     o.s.t.w.s.TestDispatcherServlet.initServletBean - FrameworkServlet '': initialization started
01-11-2018 10:24:51.244 [main] INFO     o.s.t.w.s.TestDispatcherServlet.initServletBean - FrameworkServlet '': initialization completed in 1 ms
01-11-2018 10:24:51.322 [main] INFO     c.g.movieland.dao.cache.GenreCache.getAll - Get all genres from cache
01-11-2018 10:24:51.560 [Thread-1] INFO     o.s.w.c.s.GenericWebApplicationContext.doClose - Closing org.springframework.web.context.support.GenericWebApplicationContext@5b94b04d: startup date [Thu Nov 01 10:24:48 EET 2018]; root of context hierarchy
01-11-2018 10:24:51.566 [Thread-1] INFO     o.s.j.d.e.EmbeddedDatabaseFactory.shutdownDatabase - Shutting down embedded database: url='jdbc:h2:mem:dataSource;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=false'
01-11-2018 13:49:31.758 [main] INFO     o.s.t.c.w.WebTestContextBootstrapper.getDefaultTestExecutionListenerClassNames - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
01-11-2018 13:49:31.785 [main] INFO     o.s.t.c.w.WebTestContextBootstrapper.getTestExecutionListeners - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@11c20519, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@70beb599, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@4e41089d, org.springframework.test.context.support.DirtiesContextTestExecutionListener@32a068d1, org.springframework.test.context.transaction.TransactionalTestExecutionListener@33cb5951, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@365c30cc]
01-11-2018 13:49:32.491 [main] INFO     o.s.b.f.xml.XmlBeanDefinitionReader.loadBeanDefinitions - Loading XML bean definitions from class path resource [spring/test-context.xml]
01-11-2018 13:49:32.830 [main] INFO     o.s.b.f.xml.XmlBeanDefinitionReader.loadBeanDefinitions - Loading XML bean definitions from class path resource [spring/test-db-context.xml]
01-11-2018 13:49:33.267 [main] INFO     o.s.w.c.s.GenericWebApplicationContext.prepareRefresh - Refreshing org.springframework.web.context.support.GenericWebApplicationContext@757277dc: startup date [Thu Nov 01 13:49:33 EET 2018]; root of context hierarchy
01-11-2018 13:49:33.463 [main] INFO     o.s.c.a.ConfigurationClassBeanDefinitionReader.isOverriddenByExistingDefinition - Skipping bean definition for [BeanMethod:name=jdbcTemplate,declaringClass=com.gordeev.movieland.configuration.JdbcConfig]: a definition for bean 'jdbcTemplate' already exists. This top-level bean definition is considered as an override.
01-11-2018 13:49:33.464 [main] INFO     o.s.c.a.ConfigurationClassBeanDefinitionReader.isOverriddenByExistingDefinition - Skipping bean definition for [BeanMethod:name=namedJdbcTemplate,declaringClass=com.gordeev.movieland.configuration.JdbcConfig]: a definition for bean 'namedJdbcTemplate' already exists. This top-level bean definition is considered as an override.
01-11-2018 13:49:33.851 [main] INFO     o.s.j.d.e.EmbeddedDatabaseFactory.initDatabase - Starting embedded database: url='jdbc:h2:mem:dataSource;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=false', username='sa'
01-11-2018 13:49:34.100 [main] INFO     o.s.jdbc.datasource.init.ScriptUtils.executeSqlScript - Executing SQL script from class path resource [db/schema.sql]
01-11-2018 13:49:34.130 [main] INFO     o.s.jdbc.datasource.init.ScriptUtils.executeSqlScript - Executed SQL script from class path resource [db/schema.sql] in 30 ms.
01-11-2018 13:49:34.131 [main] INFO     o.s.jdbc.datasource.init.ScriptUtils.executeSqlScript - Executing SQL script from class path resource [db/data.sql]
01-11-2018 13:49:34.346 [main] INFO     o.s.jdbc.datasource.init.ScriptUtils.executeSqlScript - Executed SQL script from class path resource [db/data.sql] in 215 ms.
01-11-2018 13:49:34.422 [main] INFO     c.g.movieland.dao.jdbc.JdbcGenreDao.getAll - Start processing query to get all genres
01-11-2018 13:49:34.433 [main] INFO     c.g.movieland.dao.jdbc.JdbcGenreDao.getAll - Finish processing query to get all genres. It took 10 ms
01-11-2018 13:49:34.436 [main] INFO     c.g.movieland.dao.cache.GenreCache.invalidate - Update all genres in cache from dao
01-11-2018 13:49:34.749 [main] INFO     o.s.w.s.m.m.a.RequestMappingHandlerMapping.register - Mapped "{[/genre],methods=[GET]}" onto protected java.util.List<com.gordeev.movieland.entity.Genre> com.gordeev.movieland.controller.GenreController.getAllGenre()
01-11-2018 13:49:34.754 [main] INFO     o.s.w.s.m.m.a.RequestMappingHandlerMapping.register - Mapped "{[/movie/{movieId}],methods=[GET]}" onto protected com.gordeev.movieland.entity.Movie com.gordeev.movieland.controller.MovieController.getMovieById(int)
01-11-2018 13:49:34.759 [main] INFO     o.s.w.s.m.m.a.RequestMappingHandlerMapping.register - Mapped "{[/movie],methods=[GET]}" onto protected java.util.List<com.gordeev.movieland.entity.Movie> com.gordeev.movieland.controller.MovieController.getAllMovie(com.gordeev.movieland.vo.SortDirection,com.gordeev.movieland.vo.SortDirection)
01-11-2018 13:49:34.760 [main] INFO     o.s.w.s.m.m.a.RequestMappingHandlerMapping.register - Mapped "{[/movie/random],methods=[GET]}" onto protected java.util.List<com.gordeev.movieland.entity.Movie> com.gordeev.movieland.controller.MovieController.getThreeRandomMovie()
01-11-2018 13:49:34.761 [main] INFO     o.s.w.s.m.m.a.RequestMappingHandlerMapping.register - Mapped "{[/movie/genre/{genreId}],methods=[GET]}" onto protected java.util.List<com.gordeev.movieland.entity.Movie> com.gordeev.movieland.controller.MovieController.getMoviesByGenreId(int)
01-11-2018 13:49:35.118 [main] INFO     o.s.w.s.m.m.a.RequestMappingHandlerAdapter.initControllerAdviceCache - Looking for @ControllerAdvice: org.springframework.web.context.support.GenericWebApplicationContext@757277dc: startup date [Thu Nov 01 13:49:33 EET 2018]; root of context hierarchy
01-11-2018 13:49:35.487 [main] INFO     o.s.w.s.m.m.a.RequestMappingHandlerMapping.register - Mapped "{[/movie/{movieId}],methods=[GET]}" onto protected com.gordeev.movieland.entity.Movie com.gordeev.movieland.controller.MovieController.getMovieById(int)
01-11-2018 13:49:35.488 [main] INFO     o.s.w.s.m.m.a.RequestMappingHandlerMapping.register - Mapped "{[/movie],methods=[GET]}" onto protected java.util.List<com.gordeev.movieland.entity.Movie> com.gordeev.movieland.controller.MovieController.getAllMovie(com.gordeev.movieland.vo.SortDirection,com.gordeev.movieland.vo.SortDirection)
01-11-2018 13:49:35.489 [main] INFO     o.s.w.s.m.m.a.RequestMappingHandlerMapping.register - Mapped "{[/movie/random],methods=[GET]}" onto protected java.util.List<com.gordeev.movieland.entity.Movie> com.gordeev.movieland.controller.MovieController.getThreeRandomMovie()
01-11-2018 13:49:35.490 [main] INFO     o.s.w.s.m.m.a.RequestMappingHandlerMapping.register - Mapped "{[/movie/genre/{genreId}],methods=[GET]}" onto protected java.util.List<com.gordeev.movieland.entity.Movie> com.gordeev.movieland.controller.MovieController.getMoviesByGenreId(int)
01-11-2018 13:49:35.499 [main] INFO     o.s.w.s.m.m.a.RequestMappingHandlerAdapter.initControllerAdviceCache - Looking for @ControllerAdvice: org.springframework.test.web.servlet.setup.StubWebApplicationContext@4525d1d3
01-11-2018 13:49:35.517 [main] INFO     o.s.mock.web.MockServletContext.log - Initializing Spring FrameworkServlet ''
01-11-2018 13:49:35.518 [main] INFO     o.s.t.w.s.TestDispatcherServlet.initServletBean - FrameworkServlet '': initialization started
01-11-2018 13:49:35.519 [main] INFO     o.s.t.w.s.TestDispatcherServlet.initServletBean - FrameworkServlet '': initialization completed in 1 ms
01-11-2018 13:49:35.651 [main] INFO     c.g.movieland.dao.jdbc.JdbcMovieDao.getMoviesByIds - Start processing query to get movies with moviesIds: [1]
01-11-2018 13:49:35.669 [main] INFO     c.g.movieland.dao.jdbc.JdbcMovieDao.getMoviesByIds - Finish processing query to get movies with moviesIds: [1]. It took 18 ms
01-11-2018 13:49:35.670 [main] INFO     c.g.movieland.dao.jdbc.JdbcGenreDao.getGenresForMovies - Start processing query to get genres for movies with moviesIds: [1]
01-11-2018 13:49:35.674 [main] INFO     c.g.movieland.dao.jdbc.JdbcGenreDao.getGenresForMovies - Finish processing query to get genres for movies with moviesIds: [1]. It took 4 ms
01-11-2018 13:49:35.675 [main] INFO     c.g.m.dao.jdbc.JdbcCountryDao.getCountriesForMovies - Start processing query to get countries for movies with moviesIds: [1]
01-11-2018 13:49:35.677 [main] INFO     c.g.m.dao.jdbc.JdbcCountryDao.getCountriesForMovies - Finish processing query to get countries for movies with moviesIds: [1]. It took 2 ms
01-11-2018 13:49:35.678 [main] INFO     c.g.movieland.dao.jdbc.JdbcReviewDao.getReviews - Start processing query to get reviews with moviesId: 1
01-11-2018 13:49:35.681 [main] INFO     c.g.movieland.dao.jdbc.JdbcReviewDao.getReviews - Finish processing query to get reviews with moviesId: 1. It took 3 ms
01-11-2018 13:49:35.682 [main] INFO     c.g.movieland.dao.jdbc.JdbcUserDao.getUsersByIds - Start processing query to get users with userIds: [2, 3]
01-11-2018 13:49:35.684 [main] INFO     c.g.movieland.dao.jdbc.JdbcUserDao.getUsersByIds - Finish processing query to get users with userIds: [2, 3]. It took 2 ms
01-11-2018 13:49:35.927 [Thread-1] INFO     o.s.w.c.s.GenericWebApplicationContext.doClose - Closing org.springframework.web.context.support.GenericWebApplicationContext@757277dc: startup date [Thu Nov 01 13:49:33 EET 2018]; root of context hierarchy
01-11-2018 13:49:35.935 [Thread-1] INFO     o.s.j.d.e.EmbeddedDatabaseFactory.shutdownDatabase - Shutting down embedded database: url='jdbc:h2:mem:dataSource;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=false'
01-11-2018 13:51:36.749 [main] INFO     o.s.t.c.w.WebTestContextBootstrapper.getDefaultTestExecutionListenerClassNames - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
01-11-2018 13:51:36.775 [main] INFO     o.s.t.c.w.WebTestContextBootstrapper.getTestExecutionListeners - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@11c20519, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@70beb599, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@4e41089d, org.springframework.test.context.support.DirtiesContextTestExecutionListener@32a068d1, org.springframework.test.context.transaction.TransactionalTestExecutionListener@33cb5951, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@365c30cc]
01-11-2018 13:51:37.523 [main] INFO     o.s.b.f.xml.XmlBeanDefinitionReader.loadBeanDefinitions - Loading XML bean definitions from class path resource [spring/test-context.xml]
01-11-2018 13:51:37.833 [main] INFO     o.s.b.f.xml.XmlBeanDefinitionReader.loadBeanDefinitions - Loading XML bean definitions from class path resource [spring/test-db-context.xml]
01-11-2018 13:51:38.159 [main] INFO     o.s.w.c.s.GenericWebApplicationContext.prepareRefresh - Refreshing org.springframework.web.context.support.GenericWebApplicationContext@757277dc: startup date [Thu Nov 01 13:51:38 EET 2018]; root of context hierarchy
01-11-2018 13:51:38.338 [main] INFO     o.s.c.a.ConfigurationClassBeanDefinitionReader.isOverriddenByExistingDefinition - Skipping bean definition for [BeanMethod:name=jdbcTemplate,declaringClass=com.gordeev.movieland.configuration.JdbcConfig]: a definition for bean 'jdbcTemplate' already exists. This top-level bean definition is considered as an override.
01-11-2018 13:51:38.339 [main] INFO     o.s.c.a.ConfigurationClassBeanDefinitionReader.isOverriddenByExistingDefinition - Skipping bean definition for [BeanMethod:name=namedJdbcTemplate,declaringClass=com.gordeev.movieland.configuration.JdbcConfig]: a definition for bean 'namedJdbcTemplate' already exists. This top-level bean definition is considered as an override.
01-11-2018 13:51:38.716 [main] INFO     o.s.j.d.e.EmbeddedDatabaseFactory.initDatabase - Starting embedded database: url='jdbc:h2:mem:dataSource;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=false', username='sa'
01-11-2018 13:51:38.958 [main] INFO     o.s.jdbc.datasource.init.ScriptUtils.executeSqlScript - Executing SQL script from class path resource [db/schema.sql]
01-11-2018 13:51:38.990 [main] INFO     o.s.jdbc.datasource.init.ScriptUtils.executeSqlScript - Executed SQL script from class path resource [db/schema.sql] in 32 ms.
01-11-2018 13:51:38.991 [main] INFO     o.s.jdbc.datasource.init.ScriptUtils.executeSqlScript - Executing SQL script from class path resource [db/data.sql]
01-11-2018 13:51:39.318 [main] INFO     o.s.jdbc.datasource.init.ScriptUtils.executeSqlScript - Executed SQL script from class path resource [db/data.sql] in 327 ms.
01-11-2018 13:51:39.403 [main] INFO     c.g.movieland.dao.jdbc.JdbcGenreDao.getAll - Start processing query to get all genres
01-11-2018 13:51:39.413 [main] INFO     c.g.movieland.dao.jdbc.JdbcGenreDao.getAll - Finish processing query to get all genres. It took 9 ms
01-11-2018 13:51:39.415 [main] INFO     c.g.movieland.dao.cache.GenreCache.invalidate - Update all genres in cache from dao
01-11-2018 13:51:39.722 [main] INFO     o.s.w.s.m.m.a.RequestMappingHandlerMapping.register - Mapped "{[/genre],methods=[GET]}" onto protected java.util.List<com.gordeev.movieland.entity.Genre> com.gordeev.movieland.controller.GenreController.getAllGenre()
01-11-2018 13:51:39.726 [main] INFO     o.s.w.s.m.m.a.RequestMappingHandlerMapping.register - Mapped "{[/movie/{movieId}],methods=[GET]}" onto protected com.gordeev.movieland.entity.Movie com.gordeev.movieland.controller.MovieController.getMovieById(int)
01-11-2018 13:51:39.731 [main] INFO     o.s.w.s.m.m.a.RequestMappingHandlerMapping.register - Mapped "{[/movie],methods=[GET]}" onto protected java.util.List<com.gordeev.movieland.entity.Movie> com.gordeev.movieland.controller.MovieController.getAllMovie(com.gordeev.movieland.vo.SortDirection,com.gordeev.movieland.vo.SortDirection)
01-11-2018 13:51:39.732 [main] INFO     o.s.w.s.m.m.a.RequestMappingHandlerMapping.register - Mapped "{[/movie/random],methods=[GET]}" onto protected java.util.List<com.gordeev.movieland.entity.Movie> com.gordeev.movieland.controller.MovieController.getThreeRandomMovie()
01-11-2018 13:51:39.733 [main] INFO     o.s.w.s.m.m.a.RequestMappingHandlerMapping.register - Mapped "{[/movie/genre/{genreId}],methods=[GET]}" onto protected java.util.List<com.gordeev.movieland.entity.Movie> com.gordeev.movieland.controller.MovieController.getMoviesByGenreId(int)
01-11-2018 13:51:40.036 [main] INFO     o.s.w.s.m.m.a.RequestMappingHandlerAdapter.initControllerAdviceCache - Looking for @ControllerAdvice: org.springframework.web.context.support.GenericWebApplicationContext@757277dc: startup date [Thu Nov 01 13:51:38 EET 2018]; root of context hierarchy
01-11-2018 13:51:40.403 [main] INFO     o.s.w.s.m.m.a.RequestMappingHandlerMapping.register - Mapped "{[/movie/{movieId}],methods=[GET]}" onto protected com.gordeev.movieland.entity.Movie com.gordeev.movieland.controller.MovieController.getMovieById(int)
01-11-2018 13:51:40.404 [main] INFO     o.s.w.s.m.m.a.RequestMappingHandlerMapping.register - Mapped "{[/movie],methods=[GET]}" onto protected java.util.List<com.gordeev.movieland.entity.Movie> com.gordeev.movieland.controller.MovieController.getAllMovie(com.gordeev.movieland.vo.SortDirection,com.gordeev.movieland.vo.SortDirection)
01-11-2018 13:51:40.405 [main] INFO     o.s.w.s.m.m.a.RequestMappingHandlerMapping.register - Mapped "{[/movie/random],methods=[GET]}" onto protected java.util.List<com.gordeev.movieland.entity.Movie> com.gordeev.movieland.controller.MovieController.getThreeRandomMovie()
01-11-2018 13:51:40.406 [main] INFO     o.s.w.s.m.m.a.RequestMappingHandlerMapping.register - Mapped "{[/movie/genre/{genreId}],methods=[GET]}" onto protected java.util.List<com.gordeev.movieland.entity.Movie> com.gordeev.movieland.controller.MovieController.getMoviesByGenreId(int)
01-11-2018 13:51:40.416 [main] INFO     o.s.w.s.m.m.a.RequestMappingHandlerAdapter.initControllerAdviceCache - Looking for @ControllerAdvice: org.springframework.test.web.servlet.setup.StubWebApplicationContext@4525d1d3
01-11-2018 13:51:40.435 [main] INFO     o.s.mock.web.MockServletContext.log - Initializing Spring FrameworkServlet ''
01-11-2018 13:51:40.436 [main] INFO     o.s.t.w.s.TestDispatcherServlet.initServletBean - FrameworkServlet '': initialization started
01-11-2018 13:51:40.438 [main] INFO     o.s.t.w.s.TestDispatcherServlet.initServletBean - FrameworkServlet '': initialization completed in 1 ms
01-11-2018 13:51:40.569 [main] INFO     c.g.movieland.dao.jdbc.JdbcMovieDao.getMoviesByIds - Start processing query to get movies with moviesIds: [1]
01-11-2018 13:51:40.584 [main] INFO     c.g.movieland.dao.jdbc.JdbcMovieDao.getMoviesByIds - Finish processing query to get movies with moviesIds: [1]. It took 15 ms
01-11-2018 13:51:40.585 [main] INFO     c.g.movieland.dao.jdbc.JdbcGenreDao.getGenresForMovies - Start processing query to get genres for movies with moviesIds: [1]
01-11-2018 13:51:40.589 [main] INFO     c.g.movieland.dao.jdbc.JdbcGenreDao.getGenresForMovies - Finish processing query to get genres for movies with moviesIds: [1]. It took 3 ms
01-11-2018 13:51:40.589 [main] INFO     c.g.m.dao.jdbc.JdbcCountryDao.getCountriesForMovies - Start processing query to get countries for movies with moviesIds: [1]
01-11-2018 13:51:40.591 [main] INFO     c.g.m.dao.jdbc.JdbcCountryDao.getCountriesForMovies - Finish processing query to get countries for movies with moviesIds: [1]. It took 1 ms
01-11-2018 13:51:40.592 [main] INFO     c.g.movieland.dao.jdbc.JdbcReviewDao.getReviews - Start processing query to get reviews with moviesId: 1
01-11-2018 13:51:40.596 [main] INFO     c.g.movieland.dao.jdbc.JdbcReviewDao.getReviews - Finish processing query to get reviews with moviesId: 1. It took 3 ms
01-11-2018 13:51:40.597 [main] INFO     c.g.movieland.dao.jdbc.JdbcUserDao.getUsersByIds - Start processing query to get users with userIds: [2, 3]
01-11-2018 13:51:40.600 [main] INFO     c.g.movieland.dao.jdbc.JdbcUserDao.getUsersByIds - Finish processing query to get users with userIds: [2, 3]. It took 3 ms
01-11-2018 13:51:40.839 [Thread-1] INFO     o.s.w.c.s.GenericWebApplicationContext.doClose - Closing org.springframework.web.context.support.GenericWebApplicationContext@757277dc: startup date [Thu Nov 01 13:51:38 EET 2018]; root of context hierarchy
01-11-2018 13:51:40.845 [Thread-1] INFO     o.s.j.d.e.EmbeddedDatabaseFactory.shutdownDatabase - Shutting down embedded database: url='jdbc:h2:mem:dataSource;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=false'
01-11-2018 13:53:07.644 [main] INFO     o.s.t.c.w.WebTestContextBootstrapper.getDefaultTestExecutionListenerClassNames - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
01-11-2018 13:53:07.671 [main] INFO     o.s.t.c.w.WebTestContextBootstrapper.getTestExecutionListeners - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@11c20519, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@70beb599, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@4e41089d, org.springframework.test.context.support.DirtiesContextTestExecutionListener@32a068d1, org.springframework.test.context.transaction.TransactionalTestExecutionListener@33cb5951, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@365c30cc]
01-11-2018 13:53:08.349 [main] INFO     o.s.b.f.xml.XmlBeanDefinitionReader.loadBeanDefinitions - Loading XML bean definitions from class path resource [spring/test-context.xml]
01-11-2018 13:53:08.652 [main] INFO     o.s.b.f.xml.XmlBeanDefinitionReader.loadBeanDefinitions - Loading XML bean definitions from class path resource [spring/test-db-context.xml]
01-11-2018 13:53:09.046 [main] INFO     o.s.w.c.s.GenericWebApplicationContext.prepareRefresh - Refreshing org.springframework.web.context.support.GenericWebApplicationContext@757277dc: startup date [Thu Nov 01 13:53:09 EET 2018]; root of context hierarchy
01-11-2018 13:53:09.235 [main] INFO     o.s.c.a.ConfigurationClassBeanDefinitionReader.isOverriddenByExistingDefinition - Skipping bean definition for [BeanMethod:name=jdbcTemplate,declaringClass=com.gordeev.movieland.configuration.JdbcConfig]: a definition for bean 'jdbcTemplate' already exists. This top-level bean definition is considered as an override.
01-11-2018 13:53:09.236 [main] INFO     o.s.c.a.ConfigurationClassBeanDefinitionReader.isOverriddenByExistingDefinition - Skipping bean definition for [BeanMethod:name=namedJdbcTemplate,declaringClass=com.gordeev.movieland.configuration.JdbcConfig]: a definition for bean 'namedJdbcTemplate' already exists. This top-level bean definition is considered as an override.
01-11-2018 13:53:09.731 [main] INFO     o.s.j.d.e.EmbeddedDatabaseFactory.initDatabase - Starting embedded database: url='jdbc:h2:mem:dataSource;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=false', username='sa'
01-11-2018 13:53:10.000 [main] INFO     o.s.jdbc.datasource.init.ScriptUtils.executeSqlScript - Executing SQL script from class path resource [db/schema.sql]
01-11-2018 13:53:10.044 [main] INFO     o.s.jdbc.datasource.init.ScriptUtils.executeSqlScript - Executed SQL script from class path resource [db/schema.sql] in 43 ms.
01-11-2018 13:53:10.044 [main] INFO     o.s.jdbc.datasource.init.ScriptUtils.executeSqlScript - Executing SQL script from class path resource [db/data.sql]
01-11-2018 13:53:10.320 [main] INFO     o.s.jdbc.datasource.init.ScriptUtils.executeSqlScript - Executed SQL script from class path resource [db/data.sql] in 275 ms.
01-11-2018 13:53:10.410 [main] INFO     c.g.movieland.dao.jdbc.JdbcGenreDao.getAll - Start processing query to get all genres
01-11-2018 13:53:10.420 [main] INFO     c.g.movieland.dao.jdbc.JdbcGenreDao.getAll - Finish processing query to get all genres. It took 9 ms
01-11-2018 13:53:10.422 [main] INFO     c.g.movieland.dao.cache.GenreCache.invalidate - Update all genres in cache from dao
01-11-2018 13:53:10.723 [main] INFO     o.s.w.s.m.m.a.RequestMappingHandlerMapping.register - Mapped "{[/genre],methods=[GET]}" onto protected java.util.List<com.gordeev.movieland.entity.Genre> com.gordeev.movieland.controller.GenreController.getAllGenre()
01-11-2018 13:53:10.728 [main] INFO     o.s.w.s.m.m.a.RequestMappingHandlerMapping.register - Mapped "{[/movie/{movieId}],methods=[GET]}" onto protected com.gordeev.movieland.entity.Movie com.gordeev.movieland.controller.MovieController.getMovieById(int)
01-11-2018 13:53:10.729 [main] INFO     o.s.w.s.m.m.a.RequestMappingHandlerMapping.register - Mapped "{[/movie],methods=[GET]}" onto protected java.util.List<com.gordeev.movieland.entity.Movie> com.gordeev.movieland.controller.MovieController.getAllMovie(com.gordeev.movieland.vo.SortDirection,com.gordeev.movieland.vo.SortDirection)
01-11-2018 13:53:10.730 [main] INFO     o.s.w.s.m.m.a.RequestMappingHandlerMapping.register - Mapped "{[/movie/random],methods=[GET]}" onto protected java.util.List<com.gordeev.movieland.entity.Movie> com.gordeev.movieland.controller.MovieController.getThreeRandomMovie()
01-11-2018 13:53:10.732 [main] INFO     o.s.w.s.m.m.a.RequestMappingHandlerMapping.register - Mapped "{[/movie/genre/{genreId}],methods=[GET]}" onto protected java.util.List<com.gordeev.movieland.entity.Movie> com.gordeev.movieland.controller.MovieController.getMoviesByGenreId(int)
01-11-2018 13:53:11.003 [main] INFO     o.s.w.s.m.m.a.RequestMappingHandlerAdapter.initControllerAdviceCache - Looking for @ControllerAdvice: org.springframework.web.context.support.GenericWebApplicationContext@757277dc: startup date [Thu Nov 01 13:53:09 EET 2018]; root of context hierarchy
01-11-2018 13:53:11.298 [main] INFO     o.s.w.s.m.m.a.RequestMappingHandlerMapping.register - Mapped "{[/movie/{movieId}],methods=[GET]}" onto protected com.gordeev.movieland.entity.Movie com.gordeev.movieland.controller.MovieController.getMovieById(int)
01-11-2018 13:53:11.299 [main] INFO     o.s.w.s.m.m.a.RequestMappingHandlerMapping.register - Mapped "{[/movie],methods=[GET]}" onto protected java.util.List<com.gordeev.movieland.entity.Movie> com.gordeev.movieland.controller.MovieController.getAllMovie(com.gordeev.movieland.vo.SortDirection,com.gordeev.movieland.vo.SortDirection)
01-11-2018 13:53:11.300 [main] INFO     o.s.w.s.m.m.a.RequestMappingHandlerMapping.register - Mapped "{[/movie/random],methods=[GET]}" onto protected java.util.List<com.gordeev.movieland.entity.Movie> com.gordeev.movieland.controller.MovieController.getThreeRandomMovie()
01-11-2018 13:53:11.301 [main] INFO     o.s.w.s.m.m.a.RequestMappingHandlerMapping.register - Mapped "{[/movie/genre/{genreId}],methods=[GET]}" onto protected java.util.List<com.gordeev.movieland.entity.Movie> com.gordeev.movieland.controller.MovieController.getMoviesByGenreId(int)
01-11-2018 13:53:11.309 [main] INFO     o.s.w.s.m.m.a.RequestMappingHandlerAdapter.initControllerAdviceCache - Looking for @ControllerAdvice: org.springframework.test.web.servlet.setup.StubWebApplicationContext@4525d1d3
01-11-2018 13:53:11.327 [main] INFO     o.s.mock.web.MockServletContext.log - Initializing Spring FrameworkServlet ''
01-11-2018 13:53:11.328 [main] INFO     o.s.t.w.s.TestDispatcherServlet.initServletBean - FrameworkServlet '': initialization started
01-11-2018 13:53:11.329 [main] INFO     o.s.t.w.s.TestDispatcherServlet.initServletBean - FrameworkServlet '': initialization completed in 1 ms
01-11-2018 13:53:11.441 [main] INFO     c.g.movieland.dao.jdbc.JdbcMovieDao.getMoviesByIds - Start processing query to get movies with moviesIds: [1]
01-11-2018 13:53:11.457 [main] INFO     c.g.movieland.dao.jdbc.JdbcMovieDao.getMoviesByIds - Finish processing query to get movies with moviesIds: [1]. It took 15 ms
01-11-2018 13:53:11.457 [main] INFO     c.g.movieland.dao.jdbc.JdbcGenreDao.getGenresForMovies - Start processing query to get genres for movies with moviesIds: [1]
01-11-2018 13:53:11.462 [main] INFO     c.g.movieland.dao.jdbc.JdbcGenreDao.getGenresForMovies - Finish processing query to get genres for movies with moviesIds: [1]. It took 4 ms
01-11-2018 13:53:11.462 [main] INFO     c.g.m.dao.jdbc.JdbcCountryDao.getCountriesForMovies - Start processing query to get countries for movies with moviesIds: [1]
01-11-2018 13:53:11.465 [main] INFO     c.g.m.dao.jdbc.JdbcCountryDao.getCountriesForMovies - Finish processing query to get countries for movies with moviesIds: [1]. It took 2 ms
01-11-2018 13:53:11.466 [main] INFO     c.g.movieland.dao.jdbc.JdbcReviewDao.getReviews - Start processing query to get reviews with moviesId: 1
01-11-2018 13:53:11.470 [main] INFO     c.g.movieland.dao.jdbc.JdbcReviewDao.getReviews - Finish processing query to get reviews with moviesId: 1. It took 4 ms
01-11-2018 13:53:11.471 [main] INFO     c.g.movieland.dao.jdbc.JdbcUserDao.getUsersByIds - Start processing query to get users with userIds: [2, 3]
01-11-2018 13:53:11.474 [main] INFO     c.g.movieland.dao.jdbc.JdbcUserDao.getUsersByIds - Finish processing query to get users with userIds: [2, 3]. It took 2 ms
01-11-2018 13:53:11.634 [Thread-1] INFO     o.s.w.c.s.GenericWebApplicationContext.doClose - Closing org.springframework.web.context.support.GenericWebApplicationContext@757277dc: startup date [Thu Nov 01 13:53:09 EET 2018]; root of context hierarchy
01-11-2018 13:53:11.648 [Thread-1] INFO     o.s.j.d.e.EmbeddedDatabaseFactory.shutdownDatabase - Shutting down embedded database: url='jdbc:h2:mem:dataSource;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=false'
01-11-2018 13:53:20.930 [main] INFO     o.s.t.c.w.WebTestContextBootstrapper.getDefaultTestExecutionListenerClassNames - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
01-11-2018 13:53:20.964 [main] INFO     o.s.t.c.w.WebTestContextBootstrapper.getTestExecutionListeners - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@11c20519, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@70beb599, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@4e41089d, org.springframework.test.context.support.DirtiesContextTestExecutionListener@32a068d1, org.springframework.test.context.transaction.TransactionalTestExecutionListener@33cb5951, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@365c30cc]
01-11-2018 13:53:21.553 [main] INFO     o.s.b.f.xml.XmlBeanDefinitionReader.loadBeanDefinitions - Loading XML bean definitions from class path resource [spring/test-context.xml]
01-11-2018 13:53:21.841 [main] INFO     o.s.b.f.xml.XmlBeanDefinitionReader.loadBeanDefinitions - Loading XML bean definitions from class path resource [spring/test-db-context.xml]
01-11-2018 13:53:22.249 [main] INFO     o.s.w.c.s.GenericWebApplicationContext.prepareRefresh - Refreshing org.springframework.web.context.support.GenericWebApplicationContext@757277dc: startup date [Thu Nov 01 13:53:22 EET 2018]; root of context hierarchy
01-11-2018 13:53:22.453 [main] INFO     o.s.c.a.ConfigurationClassBeanDefinitionReader.isOverriddenByExistingDefinition - Skipping bean definition for [BeanMethod:name=jdbcTemplate,declaringClass=com.gordeev.movieland.configuration.JdbcConfig]: a definition for bean 'jdbcTemplate' already exists. This top-level bean definition is considered as an override.
01-11-2018 13:53:22.454 [main] INFO     o.s.c.a.ConfigurationClassBeanDefinitionReader.isOverriddenByExistingDefinition - Skipping bean definition for [BeanMethod:name=namedJdbcTemplate,declaringClass=com.gordeev.movieland.configuration.JdbcConfig]: a definition for bean 'namedJdbcTemplate' already exists. This top-level bean definition is considered as an override.
01-11-2018 13:53:22.838 [main] INFO     o.s.j.d.e.EmbeddedDatabaseFactory.initDatabase - Starting embedded database: url='jdbc:h2:mem:dataSource;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=false', username='sa'
01-11-2018 13:53:23.061 [main] INFO     o.s.jdbc.datasource.init.ScriptUtils.executeSqlScript - Executing SQL script from class path resource [db/schema.sql]
01-11-2018 13:53:23.094 [main] INFO     o.s.jdbc.datasource.init.ScriptUtils.executeSqlScript - Executed SQL script from class path resource [db/schema.sql] in 32 ms.
01-11-2018 13:53:23.094 [main] INFO     o.s.jdbc.datasource.init.ScriptUtils.executeSqlScript - Executing SQL script from class path resource [db/data.sql]
01-11-2018 13:53:23.385 [main] INFO     o.s.jdbc.datasource.init.ScriptUtils.executeSqlScript - Executed SQL script from class path resource [db/data.sql] in 291 ms.
01-11-2018 13:53:23.506 [main] INFO     c.g.movieland.dao.jdbc.JdbcGenreDao.getAll - Start processing query to get all genres
01-11-2018 13:53:23.523 [main] INFO     c.g.movieland.dao.jdbc.JdbcGenreDao.getAll - Finish processing query to get all genres. It took 17 ms
01-11-2018 13:53:23.526 [main] INFO     c.g.movieland.dao.cache.GenreCache.invalidate - Update all genres in cache from dao
01-11-2018 13:53:23.827 [main] INFO     o.s.w.s.m.m.a.RequestMappingHandlerMapping.register - Mapped "{[/genre],methods=[GET]}" onto protected java.util.List<com.gordeev.movieland.entity.Genre> com.gordeev.movieland.controller.GenreController.getAllGenre()
01-11-2018 13:53:23.832 [main] INFO     o.s.w.s.m.m.a.RequestMappingHandlerMapping.register - Mapped "{[/movie/{movieId}],methods=[GET]}" onto protected com.gordeev.movieland.entity.Movie com.gordeev.movieland.controller.MovieController.getMovieById(int)
01-11-2018 13:53:23.833 [main] INFO     o.s.w.s.m.m.a.RequestMappingHandlerMapping.register - Mapped "{[/movie],methods=[GET]}" onto protected java.util.List<com.gordeev.movieland.entity.Movie> com.gordeev.movieland.controller.MovieController.getAllMovie(com.gordeev.movieland.vo.SortDirection,com.gordeev.movieland.vo.SortDirection)
01-11-2018 13:53:23.834 [main] INFO     o.s.w.s.m.m.a.RequestMappingHandlerMapping.register - Mapped "{[/movie/random],methods=[GET]}" onto protected java.util.List<com.gordeev.movieland.entity.Movie> com.gordeev.movieland.controller.MovieController.getThreeRandomMovie()
01-11-2018 13:53:23.835 [main] INFO     o.s.w.s.m.m.a.RequestMappingHandlerMapping.register - Mapped "{[/movie/genre/{genreId}],methods=[GET]}" onto protected java.util.List<com.gordeev.movieland.entity.Movie> com.gordeev.movieland.controller.MovieController.getMoviesByGenreId(int)
01-11-2018 13:53:24.188 [main] INFO     o.s.w.s.m.m.a.RequestMappingHandlerAdapter.initControllerAdviceCache - Looking for @ControllerAdvice: org.springframework.web.context.support.GenericWebApplicationContext@757277dc: startup date [Thu Nov 01 13:53:22 EET 2018]; root of context hierarchy
01-11-2018 13:53:24.584 [main] INFO     o.s.w.s.m.m.a.RequestMappingHandlerMapping.register - Mapped "{[/movie/{movieId}],methods=[GET]}" onto protected com.gordeev.movieland.entity.Movie com.gordeev.movieland.controller.MovieController.getMovieById(int)
01-11-2018 13:53:24.585 [main] INFO     o.s.w.s.m.m.a.RequestMappingHandlerMapping.register - Mapped "{[/movie],methods=[GET]}" onto protected java.util.List<com.gordeev.movieland.entity.Movie> com.gordeev.movieland.controller.MovieController.getAllMovie(com.gordeev.movieland.vo.SortDirection,com.gordeev.movieland.vo.SortDirection)
01-11-2018 13:53:24.586 [main] INFO     o.s.w.s.m.m.a.RequestMappingHandlerMapping.register - Mapped "{[/movie/random],methods=[GET]}" onto protected java.util.List<com.gordeev.movieland.entity.Movie> com.gordeev.movieland.controller.MovieController.getThreeRandomMovie()
01-11-2018 13:53:24.587 [main] INFO     o.s.w.s.m.m.a.RequestMappingHandlerMapping.register - Mapped "{[/movie/genre/{genreId}],methods=[GET]}" onto protected java.util.List<com.gordeev.movieland.entity.Movie> com.gordeev.movieland.controller.MovieController.getMoviesByGenreId(int)
01-11-2018 13:53:24.598 [main] INFO     o.s.w.s.m.m.a.RequestMappingHandlerAdapter.initControllerAdviceCache - Looking for @ControllerAdvice: org.springframework.test.web.servlet.setup.StubWebApplicationContext@4525d1d3
01-11-2018 13:53:24.615 [main] INFO     o.s.mock.web.MockServletContext.log - Initializing Spring FrameworkServlet ''
01-11-2018 13:53:24.616 [main] INFO     o.s.t.w.s.TestDispatcherServlet.initServletBean - FrameworkServlet '': initialization started
01-11-2018 13:53:24.617 [main] INFO     o.s.t.w.s.TestDispatcherServlet.initServletBean - FrameworkServlet '': initialization completed in 1 ms
01-11-2018 13:53:24.741 [main] INFO     c.g.movieland.dao.jdbc.JdbcMovieDao.getMoviesByIds - Start processing query to get movies with moviesIds: [1]
01-11-2018 13:53:24.760 [main] INFO     c.g.movieland.dao.jdbc.JdbcMovieDao.getMoviesByIds - Finish processing query to get movies with moviesIds: [1]. It took 18 ms
01-11-2018 13:53:24.761 [main] INFO     c.g.movieland.dao.jdbc.JdbcGenreDao.getGenresForMovies - Start processing query to get genres for movies with moviesIds: [1]
01-11-2018 13:53:24.765 [main] INFO     c.g.movieland.dao.jdbc.JdbcGenreDao.getGenresForMovies - Finish processing query to get genres for movies with moviesIds: [1]. It took 4 ms
01-11-2018 13:53:24.766 [main] INFO     c.g.m.dao.jdbc.JdbcCountryDao.getCountriesForMovies - Start processing query to get countries for movies with moviesIds: [1]
01-11-2018 13:53:24.769 [main] INFO     c.g.m.dao.jdbc.JdbcCountryDao.getCountriesForMovies - Finish processing query to get countries for movies with moviesIds: [1]. It took 2 ms
01-11-2018 13:53:24.770 [main] INFO     c.g.movieland.dao.jdbc.JdbcReviewDao.getReviews - Start processing query to get reviews with moviesId: 1
01-11-2018 13:53:24.774 [main] INFO     c.g.movieland.dao.jdbc.JdbcReviewDao.getReviews - Finish processing query to get reviews with moviesId: 1. It took 4 ms
01-11-2018 13:53:24.775 [main] INFO     c.g.movieland.dao.jdbc.JdbcUserDao.getUsersByIds - Start processing query to get users with userIds: [2, 3]
01-11-2018 13:53:24.777 [main] INFO     c.g.movieland.dao.jdbc.JdbcUserDao.getUsersByIds - Finish processing query to get users with userIds: [2, 3]. It took 2 ms
01-11-2018 13:53:25.023 [Thread-1] INFO     o.s.w.c.s.GenericWebApplicationContext.doClose - Closing org.springframework.web.context.support.GenericWebApplicationContext@757277dc: startup date [Thu Nov 01 13:53:22 EET 2018]; root of context hierarchy
01-11-2018 13:53:25.038 [Thread-1] INFO     o.s.j.d.e.EmbeddedDatabaseFactory.shutdownDatabase - Shutting down embedded database: url='jdbc:h2:mem:dataSource;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=false'
01-11-2018 13:53:47.063 [main] INFO     o.s.t.c.w.WebTestContextBootstrapper.getDefaultTestExecutionListenerClassNames - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
01-11-2018 13:53:47.091 [main] INFO     o.s.t.c.w.WebTestContextBootstrapper.getTestExecutionListeners - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@11c20519, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@70beb599, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@4e41089d, org.springframework.test.context.support.DirtiesContextTestExecutionListener@32a068d1, org.springframework.test.context.transaction.TransactionalTestExecutionListener@33cb5951, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@365c30cc]
01-11-2018 13:53:47.783 [main] INFO     o.s.b.f.xml.XmlBeanDefinitionReader.loadBeanDefinitions - Loading XML bean definitions from class path resource [spring/test-context.xml]
01-11-2018 13:53:48.073 [main] INFO     o.s.b.f.xml.XmlBeanDefinitionReader.loadBeanDefinitions - Loading XML bean definitions from class path resource [spring/test-db-context.xml]
01-11-2018 13:53:48.451 [main] INFO     o.s.w.c.s.GenericWebApplicationContext.prepareRefresh - Refreshing org.springframework.web.context.support.GenericWebApplicationContext@757277dc: startup date [Thu Nov 01 13:53:48 EET 2018]; root of context hierarchy
01-11-2018 13:53:48.603 [main] INFO     o.s.c.a.ConfigurationClassBeanDefinitionReader.isOverriddenByExistingDefinition - Skipping bean definition for [BeanMethod:name=jdbcTemplate,declaringClass=com.gordeev.movieland.configuration.JdbcConfig]: a definition for bean 'jdbcTemplate' already exists. This top-level bean definition is considered as an override.
01-11-2018 13:53:48.604 [main] INFO     o.s.c.a.ConfigurationClassBeanDefinitionReader.isOverriddenByExistingDefinition - Skipping bean definition for [BeanMethod:name=namedJdbcTemplate,declaringClass=com.gordeev.movieland.configuration.JdbcConfig]: a definition for bean 'namedJdbcTemplate' already exists. This top-level bean definition is considered as an override.
01-11-2018 13:53:48.919 [main] INFO     o.s.j.d.e.EmbeddedDatabaseFactory.initDatabase - Starting embedded database: url='jdbc:h2:mem:dataSource;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=false', username='sa'
01-11-2018 13:53:49.096 [main] INFO     o.s.jdbc.datasource.init.ScriptUtils.executeSqlScript - Executing SQL script from class path resource [db/schema.sql]
01-11-2018 13:53:49.125 [main] INFO     o.s.jdbc.datasource.init.ScriptUtils.executeSqlScript - Executed SQL script from class path resource [db/schema.sql] in 29 ms.
01-11-2018 13:53:49.125 [main] INFO     o.s.jdbc.datasource.init.ScriptUtils.executeSqlScript - Executing SQL script from class path resource [db/data.sql]
01-11-2018 13:53:49.356 [main] INFO     o.s.jdbc.datasource.init.ScriptUtils.executeSqlScript - Executed SQL script from class path resource [db/data.sql] in 229 ms.
01-11-2018 13:53:49.437 [main] INFO     c.g.movieland.dao.jdbc.JdbcGenreDao.getAll - Start processing query to get all genres
01-11-2018 13:53:49.448 [main] INFO     c.g.movieland.dao.jdbc.JdbcGenreDao.getAll - Finish processing query to get all genres. It took 10 ms
01-11-2018 13:53:49.450 [main] INFO     c.g.movieland.dao.cache.GenreCache.invalidate - Update all genres in cache from dao
01-11-2018 13:53:49.763 [main] INFO     o.s.w.s.m.m.a.RequestMappingHandlerMapping.register - Mapped "{[/genre],methods=[GET]}" onto protected java.util.List<com.gordeev.movieland.entity.Genre> com.gordeev.movieland.controller.GenreController.getAllGenre()
01-11-2018 13:53:49.768 [main] INFO     o.s.w.s.m.m.a.RequestMappingHandlerMapping.register - Mapped "{[/movie/{movieId}],methods=[GET]}" onto protected com.gordeev.movieland.entity.Movie com.gordeev.movieland.controller.MovieController.getMovieById(int)
01-11-2018 13:53:49.770 [main] INFO     o.s.w.s.m.m.a.RequestMappingHandlerMapping.register - Mapped "{[/movie],methods=[GET]}" onto protected java.util.List<com.gordeev.movieland.entity.Movie> com.gordeev.movieland.controller.MovieController.getAllMovie(com.gordeev.movieland.vo.SortDirection,com.gordeev.movieland.vo.SortDirection)
01-11-2018 13:53:49.771 [main] INFO     o.s.w.s.m.m.a.RequestMappingHandlerMapping.register - Mapped "{[/movie/random],methods=[GET]}" onto protected java.util.List<com.gordeev.movieland.entity.Movie> com.gordeev.movieland.controller.MovieController.getThreeRandomMovie()
01-11-2018 13:53:49.772 [main] INFO     o.s.w.s.m.m.a.RequestMappingHandlerMapping.register - Mapped "{[/movie/genre/{genreId}],methods=[GET]}" onto protected java.util.List<com.gordeev.movieland.entity.Movie> com.gordeev.movieland.controller.MovieController.getMoviesByGenreId(int)
01-11-2018 13:53:50.058 [main] INFO     o.s.w.s.m.m.a.RequestMappingHandlerAdapter.initControllerAdviceCache - Looking for @ControllerAdvice: org.springframework.web.context.support.GenericWebApplicationContext@757277dc: startup date [Thu Nov 01 13:53:48 EET 2018]; root of context hierarchy
01-11-2018 13:53:50.359 [main] INFO     o.s.w.s.m.m.a.RequestMappingHandlerMapping.register - Mapped "{[/movie/{movieId}],methods=[GET]}" onto protected com.gordeev.movieland.entity.Movie com.gordeev.movieland.controller.MovieController.getMovieById(int)
01-11-2018 13:53:50.360 [main] INFO     o.s.w.s.m.m.a.RequestMappingHandlerMapping.register - Mapped "{[/movie],methods=[GET]}" onto protected java.util.List<com.gordeev.movieland.entity.Movie> com.gordeev.movieland.controller.MovieController.getAllMovie(com.gordeev.movieland.vo.SortDirection,com.gordeev.movieland.vo.SortDirection)
01-11-2018 13:53:50.361 [main] INFO     o.s.w.s.m.m.a.RequestMappingHandlerMapping.register - Mapped "{[/movie/random],methods=[GET]}" onto protected java.util.List<com.gordeev.movieland.entity.Movie> com.gordeev.movieland.controller.MovieController.getThreeRandomMovie()
01-11-2018 13:53:50.362 [main] INFO     o.s.w.s.m.m.a.RequestMappingHandlerMapping.register - Mapped "{[/movie/genre/{genreId}],methods=[GET]}" onto protected java.util.List<com.gordeev.movieland.entity.Movie> com.gordeev.movieland.controller.MovieController.getMoviesByGenreId(int)
01-11-2018 13:53:50.371 [main] INFO     o.s.w.s.m.m.a.RequestMappingHandlerAdapter.initControllerAdviceCache - Looking for @ControllerAdvice: org.springframework.test.web.servlet.setup.StubWebApplicationContext@4525d1d3
01-11-2018 13:53:50.389 [main] INFO     o.s.mock.web.MockServletContext.log - Initializing Spring FrameworkServlet ''
01-11-2018 13:53:50.389 [main] INFO     o.s.t.w.s.TestDispatcherServlet.initServletBean - FrameworkServlet '': initialization started
01-11-2018 13:53:50.390 [main] INFO     o.s.t.w.s.TestDispatcherServlet.initServletBean - FrameworkServlet '': initialization completed in 1 ms
01-11-2018 13:53:50.503 [main] INFO     c.g.movieland.dao.jdbc.JdbcMovieDao.getMoviesByIds - Start processing query to get movies with moviesIds: [1]
01-11-2018 13:53:50.516 [main] INFO     c.g.movieland.dao.jdbc.JdbcMovieDao.getMoviesByIds - Finish processing query to get movies with moviesIds: [1]. It took 13 ms
01-11-2018 13:53:50.517 [main] INFO     c.g.movieland.dao.jdbc.JdbcGenreDao.getGenresForMovies - Start processing query to get genres for movies with moviesIds: [1]
01-11-2018 13:53:50.521 [main] INFO     c.g.movieland.dao.jdbc.JdbcGenreDao.getGenresForMovies - Finish processing query to get genres for movies with moviesIds: [1]. It took 4 ms
01-11-2018 13:53:50.521 [main] INFO     c.g.m.dao.jdbc.JdbcCountryDao.getCountriesForMovies - Start processing query to get countries for movies with moviesIds: [1]
01-11-2018 13:53:50.524 [main] INFO     c.g.m.dao.jdbc.JdbcCountryDao.getCountriesForMovies - Finish processing query to get countries for movies with moviesIds: [1]. It took 2 ms
01-11-2018 13:53:50.525 [main] INFO     c.g.movieland.dao.jdbc.JdbcReviewDao.getReviews - Start processing query to get reviews with moviesId: 1
01-11-2018 13:53:50.529 [main] INFO     c.g.movieland.dao.jdbc.JdbcReviewDao.getReviews - Finish processing query to get reviews with moviesId: 1. It took 3 ms
01-11-2018 13:53:50.529 [main] INFO     c.g.movieland.dao.jdbc.JdbcUserDao.getUsersByIds - Start processing query to get users with userIds: [2, 3]
01-11-2018 13:53:50.532 [main] INFO     c.g.movieland.dao.jdbc.JdbcUserDao.getUsersByIds - Finish processing query to get users with userIds: [2, 3]. It took 2 ms
01-11-2018 13:53:50.820 [Thread-1] INFO     o.s.w.c.s.GenericWebApplicationContext.doClose - Closing org.springframework.web.context.support.GenericWebApplicationContext@757277dc: startup date [Thu Nov 01 13:53:48 EET 2018]; root of context hierarchy
01-11-2018 13:53:50.832 [Thread-1] INFO     o.s.j.d.e.EmbeddedDatabaseFactory.shutdownDatabase - Shutting down embedded database: url='jdbc:h2:mem:dataSource;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=false'
01-11-2018 13:55:29.122 [main] INFO     o.s.t.c.w.WebTestContextBootstrapper.getDefaultTestExecutionListenerClassNames - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
01-11-2018 13:55:29.147 [main] INFO     o.s.t.c.w.WebTestContextBootstrapper.getTestExecutionListeners - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@1efee8e7, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@1ee807c6, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@76a4d6c, org.springframework.test.context.support.DirtiesContextTestExecutionListener@517cd4b, org.springframework.test.context.transaction.TransactionalTestExecutionListener@6cc7b4de, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@32cf48b7]
01-11-2018 13:55:29.707 [main] INFO     o.s.b.f.xml.XmlBeanDefinitionReader.loadBeanDefinitions - Loading XML bean definitions from class path resource [spring/test-context.xml]
01-11-2018 13:55:29.974 [main] INFO     o.s.b.f.xml.XmlBeanDefinitionReader.loadBeanDefinitions - Loading XML bean definitions from class path resource [spring/test-db-context.xml]
01-11-2018 13:55:30.367 [main] INFO     o.s.w.c.s.GenericWebApplicationContext.prepareRefresh - Refreshing org.springframework.web.context.support.GenericWebApplicationContext@5b94b04d: startup date [Thu Nov 01 13:55:30 EET 2018]; root of context hierarchy
01-11-2018 13:55:30.625 [main] INFO     o.s.c.a.ConfigurationClassBeanDefinitionReader.isOverriddenByExistingDefinition - Skipping bean definition for [BeanMethod:name=jdbcTemplate,declaringClass=com.gordeev.movieland.configuration.JdbcConfig]: a definition for bean 'jdbcTemplate' already exists. This top-level bean definition is considered as an override.
01-11-2018 13:55:30.626 [main] INFO     o.s.c.a.ConfigurationClassBeanDefinitionReader.isOverriddenByExistingDefinition - Skipping bean definition for [BeanMethod:name=namedJdbcTemplate,declaringClass=com.gordeev.movieland.configuration.JdbcConfig]: a definition for bean 'namedJdbcTemplate' already exists. This top-level bean definition is considered as an override.
01-11-2018 13:55:31.045 [main] INFO     o.s.j.d.e.EmbeddedDatabaseFactory.initDatabase - Starting embedded database: url='jdbc:h2:mem:dataSource;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=false', username='sa'
01-11-2018 13:55:31.286 [main] INFO     o.s.jdbc.datasource.init.ScriptUtils.executeSqlScript - Executing SQL script from class path resource [db/schema.sql]
01-11-2018 13:55:31.318 [main] INFO     o.s.jdbc.datasource.init.ScriptUtils.executeSqlScript - Executed SQL script from class path resource [db/schema.sql] in 31 ms.
01-11-2018 13:55:31.319 [main] INFO     o.s.jdbc.datasource.init.ScriptUtils.executeSqlScript - Executing SQL script from class path resource [db/data.sql]
01-11-2018 13:55:31.650 [main] INFO     o.s.jdbc.datasource.init.ScriptUtils.executeSqlScript - Executed SQL script from class path resource [db/data.sql] in 331 ms.
01-11-2018 13:55:31.736 [main] INFO     c.g.movieland.dao.jdbc.JdbcGenreDao.getAll - Start processing query to get all genres
01-11-2018 13:55:31.752 [main] INFO     c.g.movieland.dao.jdbc.JdbcGenreDao.getAll - Finish processing query to get all genres. It took 16 ms
01-11-2018 13:55:31.755 [main] INFO     c.g.movieland.dao.cache.GenreCache.invalidate - Update all genres in cache from dao
01-11-2018 13:55:32.096 [main] INFO     o.s.w.s.m.m.a.RequestMappingHandlerMapping.register - Mapped "{[/genre],methods=[GET]}" onto protected java.util.List<com.gordeev.movieland.entity.Genre> com.gordeev.movieland.controller.GenreController.getAllGenre()
01-11-2018 13:55:32.101 [main] INFO     o.s.w.s.m.m.a.RequestMappingHandlerMapping.register - Mapped "{[/movie/{movieId}],methods=[GET]}" onto protected com.gordeev.movieland.entity.Movie com.gordeev.movieland.controller.MovieController.getMovieById(int)
01-11-2018 13:55:32.102 [main] INFO     o.s.w.s.m.m.a.RequestMappingHandlerMapping.register - Mapped "{[/movie],methods=[GET]}" onto protected java.util.List<com.gordeev.movieland.entity.Movie> com.gordeev.movieland.controller.MovieController.getAllMovie(com.gordeev.movieland.vo.SortDirection,com.gordeev.movieland.vo.SortDirection)
01-11-2018 13:55:32.103 [main] INFO     o.s.w.s.m.m.a.RequestMappingHandlerMapping.register - Mapped "{[/movie/random],methods=[GET]}" onto protected java.util.List<com.gordeev.movieland.entity.Movie> com.gordeev.movieland.controller.MovieController.getThreeRandomMovie()
01-11-2018 13:55:32.104 [main] INFO     o.s.w.s.m.m.a.RequestMappingHandlerMapping.register - Mapped "{[/movie/genre/{genreId}],methods=[GET]}" onto protected java.util.List<com.gordeev.movieland.entity.Movie> com.gordeev.movieland.controller.MovieController.getMoviesByGenreId(int)
01-11-2018 13:55:32.365 [main] INFO     o.s.w.s.m.m.a.RequestMappingHandlerAdapter.initControllerAdviceCache - Looking for @ControllerAdvice: org.springframework.web.context.support.GenericWebApplicationContext@5b94b04d: startup date [Thu Nov 01 13:55:30 EET 2018]; root of context hierarchy
01-11-2018 13:55:32.754 [main] INFO     o.s.w.s.m.m.a.RequestMappingHandlerMapping.register - Mapped "{[/movie/{movieId}],methods=[GET]}" onto protected com.gordeev.movieland.entity.Movie com.gordeev.movieland.controller.MovieController.getMovieById(int)
01-11-2018 13:55:32.755 [main] INFO     o.s.w.s.m.m.a.RequestMappingHandlerMapping.register - Mapped "{[/movie],methods=[GET]}" onto protected java.util.List<com.gordeev.movieland.entity.Movie> com.gordeev.movieland.controller.MovieController.getAllMovie(com.gordeev.movieland.vo.SortDirection,com.gordeev.movieland.vo.SortDirection)
01-11-2018 13:55:32.755 [main] INFO     o.s.w.s.m.m.a.RequestMappingHandlerMapping.register - Mapped "{[/movie/random],methods=[GET]}" onto protected java.util.List<com.gordeev.movieland.entity.Movie> com.gordeev.movieland.controller.MovieController.getThreeRandomMovie()
01-11-2018 13:55:32.756 [main] INFO     o.s.w.s.m.m.a.RequestMappingHandlerMapping.register - Mapped "{[/movie/genre/{genreId}],methods=[GET]}" onto protected java.util.List<com.gordeev.movieland.entity.Movie> com.gordeev.movieland.controller.MovieController.getMoviesByGenreId(int)
01-11-2018 13:55:32.765 [main] INFO     o.s.w.s.m.m.a.RequestMappingHandlerAdapter.initControllerAdviceCache - Looking for @ControllerAdvice: org.springframework.test.web.servlet.setup.StubWebApplicationContext@2c779e5
01-11-2018 13:55:32.784 [main] INFO     o.s.mock.web.MockServletContext.log - Initializing Spring FrameworkServlet ''
01-11-2018 13:55:32.785 [main] INFO     o.s.t.w.s.TestDispatcherServlet.initServletBean - FrameworkServlet '': initialization started
01-11-2018 13:55:32.787 [main] INFO     o.s.t.w.s.TestDispatcherServlet.initServletBean - FrameworkServlet '': initialization completed in 1 ms
01-11-2018 13:55:32.918 [main] INFO     c.g.movieland.dao.jdbc.JdbcMovieDao.getAll - Start processing query to get all movies
01-11-2018 13:55:32.928 [main] INFO     c.g.movieland.dao.jdbc.JdbcMovieDao.getAll - Finish processing query to get all movies. It took 9 ms
01-11-2018 13:55:32.929 [main] INFO     c.g.movieland.dao.jdbc.JdbcGenreDao.getGenresForMovies - Start processing query to get genres for movies with moviesIds: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25]
01-11-2018 13:55:32.954 [main] INFO     c.g.movieland.dao.jdbc.JdbcGenreDao.getGenresForMovies - Finish processing query to get genres for movies with moviesIds: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25]. It took 25 ms
01-11-2018 13:55:32.955 [main] INFO     c.g.m.dao.jdbc.JdbcCountryDao.getCountriesForMovies - Start processing query to get countries for movies with moviesIds: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25]
01-11-2018 13:55:32.960 [main] INFO     c.g.m.dao.jdbc.JdbcCountryDao.getCountriesForMovies - Finish processing query to get countries for movies with moviesIds: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25]. It took 5 ms
01-11-2018 13:55:33.295 [main] INFO     o.s.w.s.m.m.a.RequestMappingHandlerMapping.register - Mapped "{[/movie/{movieId}],methods=[GET]}" onto protected com.gordeev.movieland.entity.Movie com.gordeev.movieland.controller.MovieController.getMovieById(int)
01-11-2018 13:55:33.296 [main] INFO     o.s.w.s.m.m.a.RequestMappingHandlerMapping.register - Mapped "{[/movie],methods=[GET]}" onto protected java.util.List<com.gordeev.movieland.entity.Movie> com.gordeev.movieland.controller.MovieController.getAllMovie(com.gordeev.movieland.vo.SortDirection,com.gordeev.movieland.vo.SortDirection)
01-11-2018 13:55:33.297 [main] INFO     o.s.w.s.m.m.a.RequestMappingHandlerMapping.register - Mapped "{[/movie/random],methods=[GET]}" onto protected java.util.List<com.gordeev.movieland.entity.Movie> com.gordeev.movieland.controller.MovieController.getThreeRandomMovie()
01-11-2018 13:55:33.298 [main] INFO     o.s.w.s.m.m.a.RequestMappingHandlerMapping.register - Mapped "{[/movie/genre/{genreId}],methods=[GET]}" onto protected java.util.List<com.gordeev.movieland.entity.Movie> com.gordeev.movieland.controller.MovieController.getMoviesByGenreId(int)
01-11-2018 13:55:33.306 [main] INFO     o.s.w.s.m.m.a.RequestMappingHandlerAdapter.initControllerAdviceCache - Looking for @ControllerAdvice: org.springframework.test.web.servlet.setup.StubWebApplicationContext@784c5ef5
01-11-2018 13:55:33.310 [main] INFO     o.s.mock.web.MockServletContext.log - Initializing Spring FrameworkServlet ''
01-11-2018 13:55:33.310 [main] INFO     o.s.t.w.s.TestDispatcherServlet.initServletBean - FrameworkServlet '': initialization started
01-11-2018 13:55:33.311 [main] INFO     o.s.t.w.s.TestDispatcherServlet.initServletBean - FrameworkServlet '': initialization completed in 0 ms
01-11-2018 13:55:33.313 [main] INFO     c.g.movieland.dao.jdbc.JdbcMovieDao.getThreeRandomMovie - Start processing query to get 3 random movies
01-11-2018 13:55:33.382 [main] INFO     c.g.movieland.dao.jdbc.JdbcMovieDao.getThreeRandomMovie - Finish processing query to get 3 random movies. It took 69 ms
01-11-2018 13:55:33.382 [main] INFO     c.g.movieland.dao.jdbc.JdbcGenreDao.getGenresForMovies - Start processing query to get genres for movies with moviesIds: [12, 8, 2]
01-11-2018 13:55:33.385 [main] INFO     c.g.movieland.dao.jdbc.JdbcGenreDao.getGenresForMovies - Finish processing query to get genres for movies with moviesIds: [12, 8, 2]. It took 2 ms
01-11-2018 13:55:33.385 [main] INFO     c.g.m.dao.jdbc.JdbcCountryDao.getCountriesForMovies - Start processing query to get countries for movies with moviesIds: [12, 8, 2]
01-11-2018 13:55:33.388 [main] INFO     c.g.m.dao.jdbc.JdbcCountryDao.getCountriesForMovies - Finish processing query to get countries for movies with moviesIds: [12, 8, 2]. It took 2 ms
01-11-2018 13:55:33.411 [main] INFO     o.s.w.s.m.m.a.RequestMappingHandlerMapping.register - Mapped "{[/movie/{movieId}],methods=[GET]}" onto protected com.gordeev.movieland.entity.Movie com.gordeev.movieland.controller.MovieController.getMovieById(int)
01-11-2018 13:55:33.412 [main] INFO     o.s.w.s.m.m.a.RequestMappingHandlerMapping.register - Mapped "{[/movie],methods=[GET]}" onto protected java.util.List<com.gordeev.movieland.entity.Movie> com.gordeev.movieland.controller.MovieController.getAllMovie(com.gordeev.movieland.vo.SortDirection,com.gordeev.movieland.vo.SortDirection)
01-11-2018 13:55:33.412 [main] INFO     o.s.w.s.m.m.a.RequestMappingHandlerMapping.register - Mapped "{[/movie/random],methods=[GET]}" onto protected java.util.List<com.gordeev.movieland.entity.Movie> com.gordeev.movieland.controller.MovieController.getThreeRandomMovie()
01-11-2018 13:55:33.413 [main] INFO     o.s.w.s.m.m.a.RequestMappingHandlerMapping.register - Mapped "{[/movie/genre/{genreId}],methods=[GET]}" onto protected java.util.List<com.gordeev.movieland.entity.Movie> com.gordeev.movieland.controller.MovieController.getMoviesByGenreId(int)
01-11-2018 13:55:33.421 [main] INFO     o.s.w.s.m.m.a.RequestMappingHandlerAdapter.initControllerAdviceCache - Looking for @ControllerAdvice: org.springframework.test.web.servlet.setup.StubWebApplicationContext@5ff2e84b
01-11-2018 13:55:33.425 [main] INFO     o.s.mock.web.MockServletContext.log - Initializing Spring FrameworkServlet ''
01-11-2018 13:55:33.425 [main] INFO     o.s.t.w.s.TestDispatcherServlet.initServletBean - FrameworkServlet '': initialization started
01-11-2018 13:55:33.426 [main] INFO     o.s.t.w.s.TestDispatcherServlet.initServletBean - FrameworkServlet '': initialization completed in 0 ms
01-11-2018 13:55:33.435 [main] INFO     c.g.movieland.dao.jdbc.JdbcGenreDao.getMoviesIdsByGenreId - Start processing query to get movieIds by genreId
01-11-2018 13:55:33.443 [main] INFO     c.g.movieland.dao.jdbc.JdbcGenreDao.getMoviesIdsByGenreId - Finish processing query to get movieIds by genreId. It took 7 ms
01-11-2018 13:55:33.444 [main] INFO     c.g.movieland.dao.jdbc.JdbcMovieDao.getMoviesByIds - Start processing query to get movies with moviesIds: [1, 2, 3, 4, 5, 6, 7, 8, 12, 13, 15, 17, 19, 20, 24, 25]
01-11-2018 13:55:33.450 [main] INFO     c.g.movieland.dao.jdbc.JdbcMovieDao.getMoviesByIds - Finish processing query to get movies with moviesIds: [1, 2, 3, 4, 5, 6, 7, 8, 12, 13, 15, 17, 19, 20, 24, 25]. It took 6 ms
01-11-2018 13:55:33.451 [main] INFO     c.g.movieland.dao.jdbc.JdbcGenreDao.getGenresForMovies - Start processing query to get genres for movies with moviesIds: [1, 2, 3, 4, 5, 6, 7, 8, 12, 13, 15, 17, 19, 20, 24, 25]
01-11-2018 13:55:33.455 [main] INFO     c.g.movieland.dao.jdbc.JdbcGenreDao.getGenresForMovies - Finish processing query to get genres for movies with moviesIds: [1, 2, 3, 4, 5, 6, 7, 8, 12, 13, 15, 17, 19, 20, 24, 25]. It took 3 ms
01-11-2018 13:55:33.456 [main] INFO     c.g.m.dao.jdbc.JdbcCountryDao.getCountriesForMovies - Start processing query to get countries for movies with moviesIds: [1, 2, 3, 4, 5, 6, 7, 8, 12, 13, 15, 17, 19, 20, 24, 25]
01-11-2018 13:55:33.459 [main] INFO     c.g.m.dao.jdbc.JdbcCountryDao.getCountriesForMovies - Finish processing query to get countries for movies with moviesIds: [1, 2, 3, 4, 5, 6, 7, 8, 12, 13, 15, 17, 19, 20, 24, 25]. It took 3 ms
01-11-2018 13:55:33.481 [main] INFO     o.s.w.s.m.m.a.RequestMappingHandlerMapping.register - Mapped "{[/movie/{movieId}],methods=[GET]}" onto protected com.gordeev.movieland.entity.Movie com.gordeev.movieland.controller.MovieController.getMovieById(int)
01-11-2018 13:55:33.482 [main] INFO     o.s.w.s.m.m.a.RequestMappingHandlerMapping.register - Mapped "{[/movie],methods=[GET]}" onto protected java.util.List<com.gordeev.movieland.entity.Movie> com.gordeev.movieland.controller.MovieController.getAllMovie(com.gordeev.movieland.vo.SortDirection,com.gordeev.movieland.vo.SortDirection)
01-11-2018 13:55:33.483 [main] INFO     o.s.w.s.m.m.a.RequestMappingHandlerMapping.register - Mapped "{[/movie/random],methods=[GET]}" onto protected java.util.List<com.gordeev.movieland.entity.Movie> com.gordeev.movieland.controller.MovieController.getThreeRandomMovie()
01-11-2018 13:55:33.485 [main] INFO     o.s.w.s.m.m.a.RequestMappingHandlerMapping.register - Mapped "{[/movie/genre/{genreId}],methods=[GET]}" onto protected java.util.List<com.gordeev.movieland.entity.Movie> com.gordeev.movieland.controller.MovieController.getMoviesByGenreId(int)
01-11-2018 13:55:33.493 [main] INFO     o.s.w.s.m.m.a.RequestMappingHandlerAdapter.initControllerAdviceCache - Looking for @ControllerAdvice: org.springframework.test.web.servlet.setup.StubWebApplicationContext@11bd803
01-11-2018 13:55:33.497 [main] INFO     o.s.mock.web.MockServletContext.log - Initializing Spring FrameworkServlet ''
01-11-2018 13:55:33.497 [main] INFO     o.s.t.w.s.TestDispatcherServlet.initServletBean - FrameworkServlet '': initialization started
01-11-2018 13:55:33.498 [main] INFO     o.s.t.w.s.TestDispatcherServlet.initServletBean - FrameworkServlet '': initialization completed in 0 ms
01-11-2018 13:55:33.501 [main] INFO     c.g.movieland.dao.jdbc.JdbcMovieDao.getMoviesByIds - Start processing query to get movies with moviesIds: [1]
01-11-2018 13:55:33.503 [main] INFO     c.g.movieland.dao.jdbc.JdbcMovieDao.getMoviesByIds - Finish processing query to get movies with moviesIds: [1]. It took 2 ms
01-11-2018 13:55:33.504 [main] INFO     c.g.movieland.dao.jdbc.JdbcGenreDao.getGenresForMovies - Start processing query to get genres for movies with moviesIds: [1]
01-11-2018 13:55:33.506 [main] INFO     c.g.movieland.dao.jdbc.JdbcGenreDao.getGenresForMovies - Finish processing query to get genres for movies with moviesIds: [1]. It took 2 ms
01-11-2018 13:55:33.506 [main] INFO     c.g.m.dao.jdbc.JdbcCountryDao.getCountriesForMovies - Start processing query to get countries for movies with moviesIds: [1]
01-11-2018 13:55:33.508 [main] INFO     c.g.m.dao.jdbc.JdbcCountryDao.getCountriesForMovies - Finish processing query to get countries for movies with moviesIds: [1]. It took 1 ms
01-11-2018 13:55:33.509 [main] INFO     c.g.movieland.dao.jdbc.JdbcReviewDao.getReviews - Start processing query to get reviews with moviesId: 1
01-11-2018 13:55:33.511 [main] INFO     c.g.movieland.dao.jdbc.JdbcReviewDao.getReviews - Finish processing query to get reviews with moviesId: 1. It took 1 ms
01-11-2018 13:55:33.512 [main] INFO     c.g.movieland.dao.jdbc.JdbcUserDao.getUsersByIds - Start processing query to get users with userIds: [2, 3]
01-11-2018 13:55:33.514 [main] INFO     c.g.movieland.dao.jdbc.JdbcUserDao.getUsersByIds - Finish processing query to get users with userIds: [2, 3]. It took 1 ms
01-11-2018 13:55:33.526 [Thread-1] INFO     o.s.w.c.s.GenericWebApplicationContext.doClose - Closing org.springframework.web.context.support.GenericWebApplicationContext@5b94b04d: startup date [Thu Nov 01 13:55:30 EET 2018]; root of context hierarchy
01-11-2018 13:55:33.538 [Thread-1] INFO     o.s.j.d.e.EmbeddedDatabaseFactory.shutdownDatabase - Shutting down embedded database: url='jdbc:h2:mem:dataSource;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=false'
01-11-2018 13:56:26.232 [main] INFO     o.s.t.c.w.WebTestContextBootstrapper.getDefaultTestExecutionListenerClassNames - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
01-11-2018 13:56:26.267 [main] INFO     o.s.t.c.w.WebTestContextBootstrapper.getTestExecutionListeners - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@1efee8e7, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@1ee807c6, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@76a4d6c, org.springframework.test.context.support.DirtiesContextTestExecutionListener@517cd4b, org.springframework.test.context.transaction.TransactionalTestExecutionListener@6cc7b4de, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@32cf48b7]
01-11-2018 13:56:26.844 [main] INFO     o.s.b.f.xml.XmlBeanDefinitionReader.loadBeanDefinitions - Loading XML bean definitions from class path resource [spring/test-context.xml]
01-11-2018 13:56:27.130 [main] INFO     o.s.b.f.xml.XmlBeanDefinitionReader.loadBeanDefinitions - Loading XML bean definitions from class path resource [spring/test-db-context.xml]
01-11-2018 13:56:27.585 [main] INFO     o.s.w.c.s.GenericWebApplicationContext.prepareRefresh - Refreshing org.springframework.web.context.support.GenericWebApplicationContext@5b94b04d: startup date [Thu Nov 01 13:56:27 EET 2018]; root of context hierarchy
01-11-2018 13:56:27.842 [main] INFO     o.s.c.a.ConfigurationClassBeanDefinitionReader.isOverriddenByExistingDefinition - Skipping bean definition for [BeanMethod:name=jdbcTemplate,declaringClass=com.gordeev.movieland.configuration.JdbcConfig]: a definition for bean 'jdbcTemplate' already exists. This top-level bean definition is considered as an override.
01-11-2018 13:56:27.843 [main] INFO     o.s.c.a.ConfigurationClassBeanDefinitionReader.isOverriddenByExistingDefinition - Skipping bean definition for [BeanMethod:name=namedJdbcTemplate,declaringClass=com.gordeev.movieland.configuration.JdbcConfig]: a definition for bean 'namedJdbcTemplate' already exists. This top-level bean definition is considered as an override.
01-11-2018 13:56:28.216 [main] INFO     o.s.j.d.e.EmbeddedDatabaseFactory.initDatabase - Starting embedded database: url='jdbc:h2:mem:dataSource;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=false', username='sa'
01-11-2018 13:56:28.458 [main] INFO     o.s.jdbc.datasource.init.ScriptUtils.executeSqlScript - Executing SQL script from class path resource [db/schema.sql]
01-11-2018 13:56:28.489 [main] INFO     o.s.jdbc.datasource.init.ScriptUtils.executeSqlScript - Executed SQL script from class path resource [db/schema.sql] in 30 ms.
01-11-2018 13:56:28.489 [main] INFO     o.s.jdbc.datasource.init.ScriptUtils.executeSqlScript - Executing SQL script from class path resource [db/data.sql]
01-11-2018 13:56:28.768 [main] INFO     o.s.jdbc.datasource.init.ScriptUtils.executeSqlScript - Executed SQL script from class path resource [db/data.sql] in 278 ms.
01-11-2018 13:56:28.856 [main] INFO     c.g.movieland.dao.jdbc.JdbcGenreDao.getAll - Start processing query to get all genres
01-11-2018 13:56:28.876 [main] INFO     c.g.movieland.dao.jdbc.JdbcGenreDao.getAll - Finish processing query to get all genres. It took 16 ms
01-11-2018 13:56:28.880 [main] INFO     c.g.movieland.dao.cache.GenreCache.invalidate - Update all genres in cache from dao
01-11-2018 13:56:29.220 [main] INFO     o.s.w.s.m.m.a.RequestMappingHandlerMapping.register - Mapped "{[/genre],methods=[GET]}" onto protected java.util.List<com.gordeev.movieland.entity.Genre> com.gordeev.movieland.controller.GenreController.getAllGenre()
01-11-2018 13:56:29.225 [main] INFO     o.s.w.s.m.m.a.RequestMappingHandlerMapping.register - Mapped "{[/movie/{movieId}],methods=[GET]}" onto protected com.gordeev.movieland.entity.Movie com.gordeev.movieland.controller.MovieController.getMovieById(int)
01-11-2018 13:56:29.226 [main] INFO     o.s.w.s.m.m.a.RequestMappingHandlerMapping.register - Mapped "{[/movie/random],methods=[GET]}" onto protected java.util.List<com.gordeev.movieland.entity.Movie> com.gordeev.movieland.controller.MovieController.getThreeRandomMovie()
01-11-2018 13:56:29.227 [main] INFO     o.s.w.s.m.m.a.RequestMappingHandlerMapping.register - Mapped "{[/movie],methods=[GET]}" onto protected java.util.List<com.gordeev.movieland.entity.Movie> com.gordeev.movieland.controller.MovieController.getAllMovie(com.gordeev.movieland.vo.SortDirection,com.gordeev.movieland.vo.SortDirection)
01-11-2018 13:56:29.228 [main] INFO     o.s.w.s.m.m.a.RequestMappingHandlerMapping.register - Mapped "{[/movie/genre/{genreId}],methods=[GET]}" onto protected java.util.List<com.gordeev.movieland.entity.Movie> com.gordeev.movieland.controller.MovieController.getMoviesByGenreId(int)
01-11-2018 13:56:29.505 [main] INFO     o.s.w.s.m.m.a.RequestMappingHandlerAdapter.initControllerAdviceCache - Looking for @ControllerAdvice: org.springframework.web.context.support.GenericWebApplicationContext@5b94b04d: startup date [Thu Nov 01 13:56:27 EET 2018]; root of context hierarchy
01-11-2018 13:56:29.890 [main] INFO     o.s.w.s.m.m.a.RequestMappingHandlerMapping.register - Mapped "{[/movie/{movieId}],methods=[GET]}" onto protected com.gordeev.movieland.entity.Movie com.gordeev.movieland.controller.MovieController.getMovieById(int)
01-11-2018 13:56:29.891 [main] INFO     o.s.w.s.m.m.a.RequestMappingHandlerMapping.register - Mapped "{[/movie/random],methods=[GET]}" onto protected java.util.List<com.gordeev.movieland.entity.Movie> com.gordeev.movieland.controller.MovieController.getThreeRandomMovie()
01-11-2018 13:56:29.892 [main] INFO     o.s.w.s.m.m.a.RequestMappingHandlerMapping.register - Mapped "{[/movie],methods=[GET]}" onto protected java.util.List<com.gordeev.movieland.entity.Movie> com.gordeev.movieland.controller.MovieController.getAllMovie(com.gordeev.movieland.vo.SortDirection,com.gordeev.movieland.vo.SortDirection)
01-11-2018 13:56:29.893 [main] INFO     o.s.w.s.m.m.a.RequestMappingHandlerMapping.register - Mapped "{[/movie/genre/{genreId}],methods=[GET]}" onto protected java.util.List<com.gordeev.movieland.entity.Movie> com.gordeev.movieland.controller.MovieController.getMoviesByGenreId(int)
01-11-2018 13:56:29.903 [main] INFO     o.s.w.s.m.m.a.RequestMappingHandlerAdapter.initControllerAdviceCache - Looking for @ControllerAdvice: org.springframework.test.web.servlet.setup.StubWebApplicationContext@2c779e5
01-11-2018 13:56:29.922 [main] INFO     o.s.mock.web.MockServletContext.log - Initializing Spring FrameworkServlet ''
01-11-2018 13:56:29.922 [main] INFO     o.s.t.w.s.TestDispatcherServlet.initServletBean - FrameworkServlet '': initialization started
01-11-2018 13:56:29.924 [main] INFO     o.s.t.w.s.TestDispatcherServlet.initServletBean - FrameworkServlet '': initialization completed in 1 ms
01-11-2018 13:56:30.060 [main] INFO     c.g.movieland.dao.jdbc.JdbcMovieDao.getAll - Start processing query to get all movies
01-11-2018 13:56:30.070 [main] INFO     c.g.movieland.dao.jdbc.JdbcMovieDao.getAll - Finish processing query to get all movies. It took 10 ms
01-11-2018 13:56:30.070 [main] INFO     c.g.movieland.dao.jdbc.JdbcGenreDao.getGenresForMovies - Start processing query to get genres for movies with moviesIds: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25]
01-11-2018 13:56:30.093 [main] INFO     c.g.movieland.dao.jdbc.JdbcGenreDao.getGenresForMovies - Finish processing query to get genres for movies with moviesIds: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25]. It took 22 ms
01-11-2018 13:56:30.094 [main] INFO     c.g.m.dao.jdbc.JdbcCountryDao.getCountriesForMovies - Start processing query to get countries for movies with moviesIds: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25]
01-11-2018 13:56:30.099 [main] INFO     c.g.m.dao.jdbc.JdbcCountryDao.getCountriesForMovies - Finish processing query to get countries for movies with moviesIds: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25]. It took 4 ms
01-11-2018 13:56:30.435 [main] INFO     o.s.w.s.m.m.a.RequestMappingHandlerMapping.register - Mapped "{[/movie/{movieId}],methods=[GET]}" onto protected com.gordeev.movieland.entity.Movie com.gordeev.movieland.controller.MovieController.getMovieById(int)
01-11-2018 13:56:30.436 [main] INFO     o.s.w.s.m.m.a.RequestMappingHandlerMapping.register - Mapped "{[/movie/random],methods=[GET]}" onto protected java.util.List<com.gordeev.movieland.entity.Movie> com.gordeev.movieland.controller.MovieController.getThreeRandomMovie()
01-11-2018 13:56:30.436 [main] INFO     o.s.w.s.m.m.a.RequestMappingHandlerMapping.register - Mapped "{[/movie],methods=[GET]}" onto protected java.util.List<com.gordeev.movieland.entity.Movie> com.gordeev.movieland.controller.MovieController.getAllMovie(com.gordeev.movieland.vo.SortDirection,com.gordeev.movieland.vo.SortDirection)
01-11-2018 13:56:30.437 [main] INFO     o.s.w.s.m.m.a.RequestMappingHandlerMapping.register - Mapped "{[/movie/genre/{genreId}],methods=[GET]}" onto protected java.util.List<com.gordeev.movieland.entity.Movie> com.gordeev.movieland.controller.MovieController.getMoviesByGenreId(int)
01-11-2018 13:56:30.447 [main] INFO     o.s.w.s.m.m.a.RequestMappingHandlerAdapter.initControllerAdviceCache - Looking for @ControllerAdvice: org.springframework.test.web.servlet.setup.StubWebApplicationContext@784c5ef5
01-11-2018 13:56:30.451 [main] INFO     o.s.mock.web.MockServletContext.log - Initializing Spring FrameworkServlet ''
01-11-2018 13:56:30.451 [main] INFO     o.s.t.w.s.TestDispatcherServlet.initServletBean - FrameworkServlet '': initialization started
01-11-2018 13:56:30.452 [main] INFO     o.s.t.w.s.TestDispatcherServlet.initServletBean - FrameworkServlet '': initialization completed in 0 ms
01-11-2018 13:56:30.454 [main] INFO     c.g.movieland.dao.jdbc.JdbcMovieDao.getThreeRandomMovie - Start processing query to get 3 random movies
01-11-2018 13:56:30.527 [main] INFO     c.g.movieland.dao.jdbc.JdbcMovieDao.getThreeRandomMovie - Finish processing query to get 3 random movies. It took 72 ms
01-11-2018 13:56:30.527 [main] INFO     c.g.movieland.dao.jdbc.JdbcGenreDao.getGenresForMovies - Start processing query to get genres for movies with moviesIds: [17, 18, 25]
01-11-2018 13:56:30.531 [main] INFO     c.g.movieland.dao.jdbc.JdbcGenreDao.getGenresForMovies - Finish processing query to get genres for movies with moviesIds: [17, 18, 25]. It took 3 ms
01-11-2018 13:56:30.531 [main] INFO     c.g.m.dao.jdbc.JdbcCountryDao.getCountriesForMovies - Start processing query to get countries for movies with moviesIds: [17, 18, 25]
01-11-2018 13:56:30.534 [main] INFO     c.g.m.dao.jdbc.JdbcCountryDao.getCountriesForMovies - Finish processing query to get countries for movies with moviesIds: [17, 18, 25]. It took 2 ms
01-11-2018 13:56:30.552 [main] INFO     o.s.w.s.m.m.a.RequestMappingHandlerMapping.register - Mapped "{[/movie/{movieId}],methods=[GET]}" onto protected com.gordeev.movieland.entity.Movie com.gordeev.movieland.controller.MovieController.getMovieById(int)
01-11-2018 13:56:30.553 [main] INFO     o.s.w.s.m.m.a.RequestMappingHandlerMapping.register - Mapped "{[/movie/random],methods=[GET]}" onto protected java.util.List<com.gordeev.movieland.entity.Movie> com.gordeev.movieland.controller.MovieController.getThreeRandomMovie()
01-11-2018 13:56:30.554 [main] INFO     o.s.w.s.m.m.a.RequestMappingHandlerMapping.register - Mapped "{[/movie],methods=[GET]}" onto protected java.util.List<com.gordeev.movieland.entity.Movie> com.gordeev.movieland.controller.MovieController.getAllMovie(com.gordeev.movieland.vo.SortDirection,com.gordeev.movieland.vo.SortDirection)
01-11-2018 13:56:30.555 [main] INFO     o.s.w.s.m.m.a.RequestMappingHandlerMapping.register - Mapped "{[/movie/genre/{genreId}],methods=[GET]}" onto protected java.util.List<com.gordeev.movieland.entity.Movie> com.gordeev.movieland.controller.MovieController.getMoviesByGenreId(int)
01-11-2018 13:56:30.570 [main] INFO     o.s.w.s.m.m.a.RequestMappingHandlerAdapter.initControllerAdviceCache - Looking for @ControllerAdvice: org.springframework.test.web.servlet.setup.StubWebApplicationContext@5ff2e84b
01-11-2018 13:56:30.574 [main] INFO     o.s.mock.web.MockServletContext.log - Initializing Spring FrameworkServlet ''
01-11-2018 13:56:30.574 [main] INFO     o.s.t.w.s.TestDispatcherServlet.initServletBean - FrameworkServlet '': initialization started
01-11-2018 13:56:30.574 [main] INFO     o.s.t.w.s.TestDispatcherServlet.initServletBean - FrameworkServlet '': initialization completed in 0 ms
01-11-2018 13:56:30.586 [main] INFO     c.g.movieland.dao.jdbc.JdbcGenreDao.getMoviesIdsByGenreId - Start processing query to get movieIds by genreId
01-11-2018 13:56:30.600 [main] INFO     c.g.movieland.dao.jdbc.JdbcGenreDao.getMoviesIdsByGenreId - Finish processing query to get movieIds by genreId. It took 13 ms
01-11-2018 13:56:30.601 [main] INFO     c.g.movieland.dao.jdbc.JdbcMovieDao.getMoviesByIds - Start processing query to get movies with moviesIds: [1, 2, 3, 4, 5, 6, 7, 8, 12, 13, 15, 17, 19, 20, 24, 25]
01-11-2018 13:56:30.607 [main] INFO     c.g.movieland.dao.jdbc.JdbcMovieDao.getMoviesByIds - Finish processing query to get movies with moviesIds: [1, 2, 3, 4, 5, 6, 7, 8, 12, 13, 15, 17, 19, 20, 24, 25]. It took 6 ms
01-11-2018 13:56:30.607 [main] INFO     c.g.movieland.dao.jdbc.JdbcGenreDao.getGenresForMovies - Start processing query to get genres for movies with moviesIds: [1, 2, 3, 4, 5, 6, 7, 8, 12, 13, 15, 17, 19, 20, 24, 25]
01-11-2018 13:56:30.613 [main] INFO     c.g.movieland.dao.jdbc.JdbcGenreDao.getGenresForMovies - Finish processing query to get genres for movies with moviesIds: [1, 2, 3, 4, 5, 6, 7, 8, 12, 13, 15, 17, 19, 20, 24, 25]. It took 5 ms
01-11-2018 13:56:30.614 [main] INFO     c.g.m.dao.jdbc.JdbcCountryDao.getCountriesForMovies - Start processing query to get countries for movies with moviesIds: [1, 2, 3, 4, 5, 6, 7, 8, 12, 13, 15, 17, 19, 20, 24, 25]
01-11-2018 13:56:30.618 [main] INFO     c.g.m.dao.jdbc.JdbcCountryDao.getCountriesForMovies - Finish processing query to get countries for movies with moviesIds: [1, 2, 3, 4, 5, 6, 7, 8, 12, 13, 15, 17, 19, 20, 24, 25]. It took 3 ms
01-11-2018 13:56:30.646 [main] INFO     o.s.w.s.m.m.a.RequestMappingHandlerMapping.register - Mapped "{[/movie/{movieId}],methods=[GET]}" onto protected com.gordeev.movieland.entity.Movie com.gordeev.movieland.controller.MovieController.getMovieById(int)
01-11-2018 13:56:30.647 [main] INFO     o.s.w.s.m.m.a.RequestMappingHandlerMapping.register - Mapped "{[/movie/random],methods=[GET]}" onto protected java.util.List<com.gordeev.movieland.entity.Movie> com.gordeev.movieland.controller.MovieController.getThreeRandomMovie()
01-11-2018 13:56:30.648 [main] INFO     o.s.w.s.m.m.a.RequestMappingHandlerMapping.register - Mapped "{[/movie],methods=[GET]}" onto protected java.util.List<com.gordeev.movieland.entity.Movie> com.gordeev.movieland.controller.MovieController.getAllMovie(com.gordeev.movieland.vo.SortDirection,com.gordeev.movieland.vo.SortDirection)
01-11-2018 13:56:30.650 [main] INFO     o.s.w.s.m.m.a.RequestMappingHandlerMapping.register - Mapped "{[/movie/genre/{genreId}],methods=[GET]}" onto protected java.util.List<com.gordeev.movieland.entity.Movie> com.gordeev.movieland.controller.MovieController.getMoviesByGenreId(int)
01-11-2018 13:56:30.665 [main] INFO     o.s.w.s.m.m.a.RequestMappingHandlerAdapter.initControllerAdviceCache - Looking for @ControllerAdvice: org.springframework.test.web.servlet.setup.StubWebApplicationContext@11bd803
01-11-2018 13:56:30.669 [main] INFO     o.s.mock.web.MockServletContext.log - Initializing Spring FrameworkServlet ''
01-11-2018 13:56:30.669 [main] INFO     o.s.t.w.s.TestDispatcherServlet.initServletBean - FrameworkServlet '': initialization started
01-11-2018 13:56:30.670 [main] INFO     o.s.t.w.s.TestDispatcherServlet.initServletBean - FrameworkServlet '': initialization completed in 0 ms
01-11-2018 13:56:30.674 [main] INFO     c.g.movieland.dao.jdbc.JdbcMovieDao.getMoviesByIds - Start processing query to get movies with moviesIds: [1]
01-11-2018 13:56:30.676 [main] INFO     c.g.movieland.dao.jdbc.JdbcMovieDao.getMoviesByIds - Finish processing query to get movies with moviesIds: [1]. It took 2 ms
01-11-2018 13:56:30.677 [main] INFO     c.g.movieland.dao.jdbc.JdbcGenreDao.getGenresForMovies - Start processing query to get genres for movies with moviesIds: [1]
01-11-2018 13:56:30.679 [main] INFO     c.g.movieland.dao.jdbc.JdbcGenreDao.getGenresForMovies - Finish processing query to get genres for movies with moviesIds: [1]. It took 2 ms
01-11-2018 13:56:30.680 [main] INFO     c.g.m.dao.jdbc.JdbcCountryDao.getCountriesForMovies - Start processing query to get countries for movies with moviesIds: [1]
01-11-2018 13:56:30.681 [main] INFO     c.g.m.dao.jdbc.JdbcCountryDao.getCountriesForMovies - Finish processing query to get countries for movies with moviesIds: [1]. It took 1 ms
01-11-2018 13:56:30.682 [main] INFO     c.g.movieland.dao.jdbc.JdbcReviewDao.getReviews - Start processing query to get reviews with moviesId: 1
01-11-2018 13:56:30.685 [main] INFO     c.g.movieland.dao.jdbc.JdbcReviewDao.getReviews - Finish processing query to get reviews with moviesId: 1. It took 2 ms
01-11-2018 13:56:30.686 [main] INFO     c.g.movieland.dao.jdbc.JdbcUserDao.getUsersByIds - Start processing query to get users with userIds: [2, 3]
01-11-2018 13:56:30.687 [main] INFO     c.g.movieland.dao.jdbc.JdbcUserDao.getUsersByIds - Finish processing query to get users with userIds: [2, 3]. It took 1 ms
01-11-2018 13:56:30.713 [Thread-1] INFO     o.s.w.c.s.GenericWebApplicationContext.doClose - Closing org.springframework.web.context.support.GenericWebApplicationContext@5b94b04d: startup date [Thu Nov 01 13:56:27 EET 2018]; root of context hierarchy
01-11-2018 13:56:30.719 [Thread-1] INFO     o.s.j.d.e.EmbeddedDatabaseFactory.shutdownDatabase - Shutting down embedded database: url='jdbc:h2:mem:dataSource;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=false'
01-11-2018 13:58:39.468 [main] INFO     o.s.t.c.w.WebTestContextBootstrapper.getDefaultTestExecutionListenerClassNames - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
01-11-2018 13:58:39.501 [main] INFO     o.s.t.c.w.WebTestContextBootstrapper.getTestExecutionListeners - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@11c20519, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@70beb599, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@4e41089d, org.springframework.test.context.support.DirtiesContextTestExecutionListener@32a068d1, org.springframework.test.context.transaction.TransactionalTestExecutionListener@33cb5951, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@365c30cc]
01-11-2018 13:58:40.034 [main] INFO     o.s.b.f.xml.XmlBeanDefinitionReader.loadBeanDefinitions - Loading XML bean definitions from class path resource [spring/test-context.xml]
01-11-2018 13:58:40.314 [main] INFO     o.s.b.f.xml.XmlBeanDefinitionReader.loadBeanDefinitions - Loading XML bean definitions from class path resource [spring/test-db-context.xml]
01-11-2018 13:58:40.825 [main] INFO     o.s.w.c.s.GenericWebApplicationContext.prepareRefresh - Refreshing org.springframework.web.context.support.GenericWebApplicationContext@757277dc: startup date [Thu Nov 01 13:58:40 EET 2018]; root of context hierarchy
01-11-2018 13:58:41.055 [main] INFO     o.s.c.a.ConfigurationClassBeanDefinitionReader.isOverriddenByExistingDefinition - Skipping bean definition for [BeanMethod:name=jdbcTemplate,declaringClass=com.gordeev.movieland.configuration.JdbcConfig]: a definition for bean 'jdbcTemplate' already exists. This top-level bean definition is considered as an override.
01-11-2018 13:58:41.056 [main] INFO     o.s.c.a.ConfigurationClassBeanDefinitionReader.isOverriddenByExistingDefinition - Skipping bean definition for [BeanMethod:name=namedJdbcTemplate,declaringClass=com.gordeev.movieland.configuration.JdbcConfig]: a definition for bean 'namedJdbcTemplate' already exists. This top-level bean definition is considered as an override.
01-11-2018 13:58:41.455 [main] INFO     o.s.j.d.e.EmbeddedDatabaseFactory.initDatabase - Starting embedded database: url='jdbc:h2:mem:dataSource;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=false', username='sa'
01-11-2018 13:58:41.664 [main] INFO     o.s.jdbc.datasource.init.ScriptUtils.executeSqlScript - Executing SQL script from class path resource [db/schema.sql]
01-11-2018 13:58:41.695 [main] INFO     o.s.jdbc.datasource.init.ScriptUtils.executeSqlScript - Executed SQL script from class path resource [db/schema.sql] in 30 ms.
01-11-2018 13:58:41.711 [main] INFO     o.s.jdbc.datasource.init.ScriptUtils.executeSqlScript - Executing SQL script from class path resource [db/data.sql]
01-11-2018 13:58:41.970 [main] INFO     o.s.jdbc.datasource.init.ScriptUtils.executeSqlScript - Executed SQL script from class path resource [db/data.sql] in 259 ms.
01-11-2018 13:58:42.045 [main] INFO     c.g.movieland.dao.jdbc.JdbcGenreDao.getAll - Start processing query to get all genres
01-11-2018 13:58:42.055 [main] INFO     c.g.movieland.dao.jdbc.JdbcGenreDao.getAll - Finish processing query to get all genres. It took 9 ms
01-11-2018 13:58:42.057 [main] INFO     c.g.movieland.dao.cache.GenreCache.invalidate - Update all genres in cache from dao
01-11-2018 13:58:42.356 [main] INFO     o.s.w.s.m.m.a.RequestMappingHandlerMapping.register - Mapped "{[/genre],methods=[GET]}" onto protected java.util.List<com.gordeev.movieland.entity.Genre> com.gordeev.movieland.controller.GenreController.getAllGenre()
01-11-2018 13:58:42.361 [main] INFO     o.s.w.s.m.m.a.RequestMappingHandlerMapping.register - Mapped "{[/movie/{movieId}],methods=[GET]}" onto protected com.gordeev.movieland.entity.Movie com.gordeev.movieland.controller.MovieController.getMovieById(int)
01-11-2018 13:58:42.363 [main] INFO     o.s.w.s.m.m.a.RequestMappingHandlerMapping.register - Mapped "{[/movie],methods=[GET]}" onto protected java.util.List<com.gordeev.movieland.entity.Movie> com.gordeev.movieland.controller.MovieController.getAllMovie(com.gordeev.movieland.vo.SortDirection,com.gordeev.movieland.vo.SortDirection)
01-11-2018 13:58:42.364 [main] INFO     o.s.w.s.m.m.a.RequestMappingHandlerMapping.register - Mapped "{[/movie/random],methods=[GET]}" onto protected java.util.List<com.gordeev.movieland.entity.Movie> com.gordeev.movieland.controller.MovieController.getThreeRandomMovie()
01-11-2018 13:58:42.365 [main] INFO     o.s.w.s.m.m.a.RequestMappingHandlerMapping.register - Mapped "{[/movie/genre/{genreId}],methods=[GET]}" onto protected java.util.List<com.gordeev.movieland.entity.Movie> com.gordeev.movieland.controller.MovieController.getMoviesByGenreId(int)
01-11-2018 13:58:42.659 [main] INFO     o.s.w.s.m.m.a.RequestMappingHandlerAdapter.initControllerAdviceCache - Looking for @ControllerAdvice: org.springframework.web.context.support.GenericWebApplicationContext@757277dc: startup date [Thu Nov 01 13:58:40 EET 2018]; root of context hierarchy
01-11-2018 13:58:43.010 [main] INFO     o.s.w.s.m.m.a.RequestMappingHandlerMapping.register - Mapped "{[/movie/{movieId}],methods=[GET]}" onto protected com.gordeev.movieland.entity.Movie com.gordeev.movieland.controller.MovieController.getMovieById(int)
01-11-2018 13:58:43.011 [main] INFO     o.s.w.s.m.m.a.RequestMappingHandlerMapping.register - Mapped "{[/movie],methods=[GET]}" onto protected java.util.List<com.gordeev.movieland.entity.Movie> com.gordeev.movieland.controller.MovieController.getAllMovie(com.gordeev.movieland.vo.SortDirection,com.gordeev.movieland.vo.SortDirection)
01-11-2018 13:58:43.012 [main] INFO     o.s.w.s.m.m.a.RequestMappingHandlerMapping.register - Mapped "{[/movie/random],methods=[GET]}" onto protected java.util.List<com.gordeev.movieland.entity.Movie> com.gordeev.movieland.controller.MovieController.getThreeRandomMovie()
01-11-2018 13:58:43.013 [main] INFO     o.s.w.s.m.m.a.RequestMappingHandlerMapping.register - Mapped "{[/movie/genre/{genreId}],methods=[GET]}" onto protected java.util.List<com.gordeev.movieland.entity.Movie> com.gordeev.movieland.controller.MovieController.getMoviesByGenreId(int)
01-11-2018 13:58:43.022 [main] INFO     o.s.w.s.m.m.a.RequestMappingHandlerAdapter.initControllerAdviceCache - Looking for @ControllerAdvice: org.springframework.test.web.servlet.setup.StubWebApplicationContext@4525d1d3
01-11-2018 13:58:43.035 [main] INFO     o.s.mock.web.MockServletContext.log - Initializing Spring FrameworkServlet ''
01-11-2018 13:58:43.035 [main] INFO     o.s.t.w.s.TestDispatcherServlet.initServletBean - FrameworkServlet '': initialization started
01-11-2018 13:58:43.036 [main] INFO     o.s.t.w.s.TestDispatcherServlet.initServletBean - FrameworkServlet '': initialization completed in 0 ms
01-11-2018 13:58:43.147 [main] INFO     c.g.movieland.dao.jdbc.JdbcMovieDao.getMoviesByIds - Start processing query to get movies with moviesIds: [1]
01-11-2018 13:58:43.162 [main] INFO     c.g.movieland.dao.jdbc.JdbcMovieDao.getMoviesByIds - Finish processing query to get movies with moviesIds: [1]. It took 14 ms
01-11-2018 13:58:43.163 [main] INFO     c.g.movieland.dao.jdbc.JdbcGenreDao.getGenresForMovies - Start processing query to get genres for movies with moviesIds: [1]
01-11-2018 13:58:43.167 [main] INFO     c.g.movieland.dao.jdbc.JdbcGenreDao.getGenresForMovies - Finish processing query to get genres for movies with moviesIds: [1]. It took 4 ms
01-11-2018 13:58:43.171 [main] INFO     c.g.m.dao.jdbc.JdbcCountryDao.getCountriesForMovies - Start processing query to get countries for movies with moviesIds: [1]
01-11-2018 13:58:43.173 [main] INFO     c.g.m.dao.jdbc.JdbcCountryDao.getCountriesForMovies - Finish processing query to get countries for movies with moviesIds: [1]. It took 1 ms
01-11-2018 13:58:43.174 [main] INFO     c.g.movieland.dao.jdbc.JdbcReviewDao.getReviews - Start processing query to get reviews with moviesId: 1
01-11-2018 13:58:43.177 [main] INFO     c.g.movieland.dao.jdbc.JdbcReviewDao.getReviews - Finish processing query to get reviews with moviesId: 1. It took 3 ms
01-11-2018 13:58:43.178 [main] INFO     c.g.movieland.dao.jdbc.JdbcUserDao.getUsersByIds - Start processing query to get users with userIds: [2, 3]
01-11-2018 13:58:43.180 [main] INFO     c.g.movieland.dao.jdbc.JdbcUserDao.getUsersByIds - Finish processing query to get users with userIds: [2, 3]. It took 2 ms
01-11-2018 13:58:43.396 [Thread-1] INFO     o.s.w.c.s.GenericWebApplicationContext.doClose - Closing org.springframework.web.context.support.GenericWebApplicationContext@757277dc: startup date [Thu Nov 01 13:58:40 EET 2018]; root of context hierarchy
01-11-2018 13:58:43.419 [Thread-1] INFO     o.s.j.d.e.EmbeddedDatabaseFactory.shutdownDatabase - Shutting down embedded database: url='jdbc:h2:mem:dataSource;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=false'
01-11-2018 14:03:49.948 [main] INFO     o.s.t.c.w.WebTestContextBootstrapper.getDefaultTestExecutionListenerClassNames - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
01-11-2018 14:03:49.971 [main] INFO     o.s.t.c.w.WebTestContextBootstrapper.getTestExecutionListeners - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@11c20519, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@70beb599, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@4e41089d, org.springframework.test.context.support.DirtiesContextTestExecutionListener@32a068d1, org.springframework.test.context.transaction.TransactionalTestExecutionListener@33cb5951, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@365c30cc]
01-11-2018 14:03:50.437 [main] INFO     o.s.b.f.xml.XmlBeanDefinitionReader.loadBeanDefinitions - Loading XML bean definitions from class path resource [spring/test-context.xml]
01-11-2018 14:03:50.654 [main] INFO     o.s.b.f.xml.XmlBeanDefinitionReader.loadBeanDefinitions - Loading XML bean definitions from class path resource [spring/test-db-context.xml]
01-11-2018 14:03:51.164 [main] INFO     o.s.w.c.s.GenericWebApplicationContext.prepareRefresh - Refreshing org.springframework.web.context.support.GenericWebApplicationContext@757277dc: startup date [Thu Nov 01 14:03:51 EET 2018]; root of context hierarchy
01-11-2018 14:03:51.413 [main] INFO     o.s.c.a.ConfigurationClassBeanDefinitionReader.isOverriddenByExistingDefinition - Skipping bean definition for [BeanMethod:name=jdbcTemplate,declaringClass=com.gordeev.movieland.configuration.JdbcConfig]: a definition for bean 'jdbcTemplate' already exists. This top-level bean definition is considered as an override.
01-11-2018 14:03:51.414 [main] INFO     o.s.c.a.ConfigurationClassBeanDefinitionReader.isOverriddenByExistingDefinition - Skipping bean definition for [BeanMethod:name=namedJdbcTemplate,declaringClass=com.gordeev.movieland.configuration.JdbcConfig]: a definition for bean 'namedJdbcTemplate' already exists. This top-level bean definition is considered as an override.
01-11-2018 14:03:51.862 [main] INFO     o.s.j.d.e.EmbeddedDatabaseFactory.initDatabase - Starting embedded database: url='jdbc:h2:mem:dataSource;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=false', username='sa'
01-11-2018 14:03:52.065 [main] INFO     o.s.jdbc.datasource.init.ScriptUtils.executeSqlScript - Executing SQL script from class path resource [db/schema.sql]
01-11-2018 14:03:52.097 [main] INFO     o.s.jdbc.datasource.init.ScriptUtils.executeSqlScript - Executed SQL script from class path resource [db/schema.sql] in 31 ms.
01-11-2018 14:03:52.097 [main] INFO     o.s.jdbc.datasource.init.ScriptUtils.executeSqlScript - Executing SQL script from class path resource [db/data.sql]
01-11-2018 14:03:52.373 [main] INFO     o.s.jdbc.datasource.init.ScriptUtils.executeSqlScript - Executed SQL script from class path resource [db/data.sql] in 276 ms.
01-11-2018 14:03:52.464 [main] INFO     c.g.movieland.dao.jdbc.JdbcGenreDao.getAll - Start processing query to get all genres
01-11-2018 14:03:52.479 [main] INFO     c.g.movieland.dao.jdbc.JdbcGenreDao.getAll - Finish processing query to get all genres. It took 14 ms
01-11-2018 14:03:52.482 [main] INFO     c.g.movieland.dao.cache.GenreCache.invalidate - Update all genres in cache from dao
01-11-2018 14:03:52.841 [main] INFO     o.s.w.s.m.m.a.RequestMappingHandlerMapping.register - Mapped "{[/genre],methods=[GET]}" onto protected java.util.List<com.gordeev.movieland.entity.Genre> com.gordeev.movieland.controller.GenreController.getAllGenre()
01-11-2018 14:03:52.846 [main] INFO     o.s.w.s.m.m.a.RequestMappingHandlerMapping.register - Mapped "{[/movie/{movieId}],methods=[GET]}" onto protected com.gordeev.movieland.entity.Movie com.gordeev.movieland.controller.MovieController.getMovieById(int)
01-11-2018 14:03:52.847 [main] INFO     o.s.w.s.m.m.a.RequestMappingHandlerMapping.register - Mapped "{[/movie],methods=[GET]}" onto protected java.util.List<com.gordeev.movieland.entity.Movie> com.gordeev.movieland.controller.MovieController.getAllMovie(com.gordeev.movieland.vo.SortDirection,com.gordeev.movieland.vo.SortDirection)
01-11-2018 14:03:52.848 [main] INFO     o.s.w.s.m.m.a.RequestMappingHandlerMapping.register - Mapped "{[/movie/random],methods=[GET]}" onto protected java.util.List<com.gordeev.movieland.entity.Movie> com.gordeev.movieland.controller.MovieController.getThreeRandomMovie()
01-11-2018 14:03:52.849 [main] INFO     o.s.w.s.m.m.a.RequestMappingHandlerMapping.register - Mapped "{[/movie/genre/{genreId}],methods=[GET]}" onto protected java.util.List<com.gordeev.movieland.entity.Movie> com.gordeev.movieland.controller.MovieController.getMoviesByGenreId(int)
01-11-2018 14:03:53.108 [main] INFO     o.s.w.s.m.m.a.RequestMappingHandlerAdapter.initControllerAdviceCache - Looking for @ControllerAdvice: org.springframework.web.context.support.GenericWebApplicationContext@757277dc: startup date [Thu Nov 01 14:03:51 EET 2018]; root of context hierarchy
01-11-2018 14:03:53.480 [main] INFO     o.s.w.s.m.m.a.RequestMappingHandlerMapping.register - Mapped "{[/movie/{movieId}],methods=[GET]}" onto protected com.gordeev.movieland.entity.Movie com.gordeev.movieland.controller.MovieController.getMovieById(int)
01-11-2018 14:03:53.481 [main] INFO     o.s.w.s.m.m.a.RequestMappingHandlerMapping.register - Mapped "{[/movie],methods=[GET]}" onto protected java.util.List<com.gordeev.movieland.entity.Movie> com.gordeev.movieland.controller.MovieController.getAllMovie(com.gordeev.movieland.vo.SortDirection,com.gordeev.movieland.vo.SortDirection)
01-11-2018 14:03:53.482 [main] INFO     o.s.w.s.m.m.a.RequestMappingHandlerMapping.register - Mapped "{[/movie/random],methods=[GET]}" onto protected java.util.List<com.gordeev.movieland.entity.Movie> com.gordeev.movieland.controller.MovieController.getThreeRandomMovie()
01-11-2018 14:03:53.482 [main] INFO     o.s.w.s.m.m.a.RequestMappingHandlerMapping.register - Mapped "{[/movie/genre/{genreId}],methods=[GET]}" onto protected java.util.List<com.gordeev.movieland.entity.Movie> com.gordeev.movieland.controller.MovieController.getMoviesByGenreId(int)
01-11-2018 14:03:53.491 [main] INFO     o.s.w.s.m.m.a.RequestMappingHandlerAdapter.initControllerAdviceCache - Looking for @ControllerAdvice: org.springframework.test.web.servlet.setup.StubWebApplicationContext@4525d1d3
01-11-2018 14:03:53.510 [main] INFO     o.s.mock.web.MockServletContext.log - Initializing Spring FrameworkServlet ''
01-11-2018 14:03:53.510 [main] INFO     o.s.t.w.s.TestDispatcherServlet.initServletBean - FrameworkServlet '': initialization started
01-11-2018 14:03:53.512 [main] INFO     o.s.t.w.s.TestDispatcherServlet.initServletBean - FrameworkServlet '': initialization completed in 2 ms
01-11-2018 14:03:53.639 [main] INFO     c.g.movieland.dao.jdbc.JdbcMovieDao.getMoviesByIds - Start processing query to get movies with moviesIds: [1]
01-11-2018 14:03:53.658 [main] INFO     c.g.movieland.dao.jdbc.JdbcMovieDao.getMoviesByIds - Finish processing query to get movies with moviesIds: [1]. It took 18 ms
01-11-2018 14:03:53.659 [main] INFO     c.g.movieland.dao.jdbc.JdbcGenreDao.getGenresForMovies - Start processing query to get genres for movies with moviesIds: [1]
01-11-2018 14:03:53.663 [main] INFO     c.g.movieland.dao.jdbc.JdbcGenreDao.getGenresForMovies - Finish processing query to get genres for movies with moviesIds: [1]. It took 3 ms
01-11-2018 14:03:53.664 [main] INFO     c.g.m.dao.jdbc.JdbcCountryDao.getCountriesForMovies - Start processing query to get countries for movies with moviesIds: [1]
01-11-2018 14:03:53.667 [main] INFO     c.g.m.dao.jdbc.JdbcCountryDao.getCountriesForMovies - Finish processing query to get countries for movies with moviesIds: [1]. It took 1 ms
01-11-2018 14:03:53.667 [main] INFO     c.g.movieland.dao.jdbc.JdbcReviewDao.getReviews - Start processing query to get reviews with moviesId: 1
01-11-2018 14:03:53.671 [main] INFO     c.g.movieland.dao.jdbc.JdbcReviewDao.getReviews - Finish processing query to get reviews with moviesId: 1. It took 3 ms
01-11-2018 14:03:53.671 [main] INFO     c.g.movieland.dao.jdbc.JdbcUserDao.getUsersByIds - Start processing query to get users with userIds: [2, 3]
01-11-2018 14:03:53.674 [main] INFO     c.g.movieland.dao.jdbc.JdbcUserDao.getUsersByIds - Finish processing query to get users with userIds: [2, 3]. It took 2 ms
01-11-2018 14:03:53.936 [Thread-1] INFO     o.s.w.c.s.GenericWebApplicationContext.doClose - Closing org.springframework.web.context.support.GenericWebApplicationContext@757277dc: startup date [Thu Nov 01 14:03:51 EET 2018]; root of context hierarchy
01-11-2018 14:03:53.950 [Thread-1] INFO     o.s.j.d.e.EmbeddedDatabaseFactory.shutdownDatabase - Shutting down embedded database: url='jdbc:h2:mem:dataSource;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=false'
01-11-2018 17:35:45.549 [main] INFO     o.s.t.c.w.WebTestContextBootstrapper.getDefaultTestExecutionListenerClassNames - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
01-11-2018 17:35:45.615 [main] INFO     o.s.t.c.w.WebTestContextBootstrapper.getTestExecutionListeners - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@11c20519, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@70beb599, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@4e41089d, org.springframework.test.context.support.DirtiesContextTestExecutionListener@32a068d1, org.springframework.test.context.transaction.TransactionalTestExecutionListener@33cb5951, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@365c30cc]
01-11-2018 17:35:46.331 [main] INFO     o.s.b.f.xml.XmlBeanDefinitionReader.loadBeanDefinitions - Loading XML bean definitions from class path resource [spring/test-context.xml]
01-11-2018 17:35:46.746 [main] INFO     o.s.b.f.xml.XmlBeanDefinitionReader.loadBeanDefinitions - Loading XML bean definitions from class path resource [spring/test-db-context.xml]
01-11-2018 17:35:47.399 [main] INFO     o.s.w.c.s.GenericWebApplicationContext.prepareRefresh - Refreshing org.springframework.web.context.support.GenericWebApplicationContext@757277dc: startup date [Thu Nov 01 17:35:47 EET 2018]; root of context hierarchy
01-11-2018 17:35:47.645 [main] INFO     o.s.c.a.ConfigurationClassBeanDefinitionReader.isOverriddenByExistingDefinition - Skipping bean definition for [BeanMethod:name=jdbcTemplate,declaringClass=com.gordeev.movieland.configuration.JdbcConfig]: a definition for bean 'jdbcTemplate' already exists. This top-level bean definition is considered as an override.
01-11-2018 17:35:47.645 [main] INFO     o.s.c.a.ConfigurationClassBeanDefinitionReader.isOverriddenByExistingDefinition - Skipping bean definition for [BeanMethod:name=namedJdbcTemplate,declaringClass=com.gordeev.movieland.configuration.JdbcConfig]: a definition for bean 'namedJdbcTemplate' already exists. This top-level bean definition is considered as an override.
01-11-2018 17:35:48.106 [main] INFO     o.s.j.d.e.EmbeddedDatabaseFactory.initDatabase - Starting embedded database: url='jdbc:h2:mem:dataSource;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=false', username='sa'
01-11-2018 17:35:48.360 [main] INFO     o.s.jdbc.datasource.init.ScriptUtils.executeSqlScript - Executing SQL script from class path resource [db/schema.sql]
01-11-2018 17:35:48.418 [main] INFO     o.s.jdbc.datasource.init.ScriptUtils.executeSqlScript - Executed SQL script from class path resource [db/schema.sql] in 57 ms.
01-11-2018 17:35:48.418 [main] INFO     o.s.jdbc.datasource.init.ScriptUtils.executeSqlScript - Executing SQL script from class path resource [db/data.sql]
01-11-2018 17:35:48.645 [main] INFO     o.s.jdbc.datasource.init.ScriptUtils.executeSqlScript - Executed SQL script from class path resource [db/data.sql] in 226 ms.
01-11-2018 17:35:48.787 [main] INFO     c.g.movieland.dao.jdbc.JdbcGenreDao.getAll - Start processing query to get all genres
01-11-2018 17:35:48.797 [main] INFO     c.g.movieland.dao.jdbc.JdbcGenreDao.getAll - Finish processing query to get all genres. It took 10 ms
01-11-2018 17:35:48.799 [main] INFO     c.g.movieland.dao.cache.GenreCache.invalidate - Update all genres in cache from dao
01-11-2018 17:35:49.215 [main] INFO     o.s.w.s.m.m.a.RequestMappingHandlerMapping.register - Mapped "{[/genre],methods=[GET]}" onto protected java.util.List<com.gordeev.movieland.entity.Genre> com.gordeev.movieland.controller.GenreController.getAllGenre()
01-11-2018 17:35:49.224 [main] INFO     o.s.w.s.m.m.a.RequestMappingHandlerMapping.register - Mapped "{[/movie/{movieId}],methods=[GET]}" onto protected com.gordeev.movieland.entity.Movie com.gordeev.movieland.controller.MovieController.getMovieById(int)
01-11-2018 17:35:49.240 [main] INFO     o.s.w.s.m.m.a.RequestMappingHandlerMapping.register - Mapped "{[/movie],methods=[GET]}" onto protected java.util.List<com.gordeev.movieland.entity.Movie> com.gordeev.movieland.controller.MovieController.getAllMovie(com.gordeev.movieland.vo.SortDirection,com.gordeev.movieland.vo.SortDirection)
01-11-2018 17:35:49.241 [main] INFO     o.s.w.s.m.m.a.RequestMappingHandlerMapping.register - Mapped "{[/movie/random],methods=[GET]}" onto protected java.util.List<com.gordeev.movieland.entity.Movie> com.gordeev.movieland.controller.MovieController.getThreeRandomMovie()
01-11-2018 17:35:49.244 [main] INFO     o.s.w.s.m.m.a.RequestMappingHandlerMapping.register - Mapped "{[/movie/genre/{genreId}],methods=[GET]}" onto protected java.util.List<com.gordeev.movieland.entity.Movie> com.gordeev.movieland.controller.MovieController.getMoviesByGenreId(int)
01-11-2018 17:35:49.800 [main] INFO     o.s.w.s.m.m.a.RequestMappingHandlerAdapter.initControllerAdviceCache - Looking for @ControllerAdvice: org.springframework.web.context.support.GenericWebApplicationContext@757277dc: startup date [Thu Nov 01 17:35:47 EET 2018]; root of context hierarchy
01-11-2018 17:35:50.309 [main] INFO     o.s.w.s.m.m.a.RequestMappingHandlerMapping.register - Mapped "{[/movie/{movieId}],methods=[GET]}" onto protected com.gordeev.movieland.entity.Movie com.gordeev.movieland.controller.MovieController.getMovieById(int)
01-11-2018 17:35:50.310 [main] INFO     o.s.w.s.m.m.a.RequestMappingHandlerMapping.register - Mapped "{[/movie],methods=[GET]}" onto protected java.util.List<com.gordeev.movieland.entity.Movie> com.gordeev.movieland.controller.MovieController.getAllMovie(com.gordeev.movieland.vo.SortDirection,com.gordeev.movieland.vo.SortDirection)
01-11-2018 17:35:50.311 [main] INFO     o.s.w.s.m.m.a.RequestMappingHandlerMapping.register - Mapped "{[/movie/random],methods=[GET]}" onto protected java.util.List<com.gordeev.movieland.entity.Movie> com.gordeev.movieland.controller.MovieController.getThreeRandomMovie()
01-11-2018 17:35:50.312 [main] INFO     o.s.w.s.m.m.a.RequestMappingHandlerMapping.register - Mapped "{[/movie/genre/{genreId}],methods=[GET]}" onto protected java.util.List<com.gordeev.movieland.entity.Movie> com.gordeev.movieland.controller.MovieController.getMoviesByGenreId(int)
01-11-2018 17:35:50.322 [main] INFO     o.s.w.s.m.m.a.RequestMappingHandlerAdapter.initControllerAdviceCache - Looking for @ControllerAdvice: org.springframework.test.web.servlet.setup.StubWebApplicationContext@4525d1d3
01-11-2018 17:35:50.343 [main] INFO     o.s.mock.web.MockServletContext.log - Initializing Spring FrameworkServlet ''
01-11-2018 17:35:50.344 [main] INFO     o.s.t.w.s.TestDispatcherServlet.initServletBean - FrameworkServlet '': initialization started
01-11-2018 17:35:50.345 [main] INFO     o.s.t.w.s.TestDispatcherServlet.initServletBean - FrameworkServlet '': initialization completed in 1 ms
01-11-2018 17:35:50.553 [main] INFO     c.g.movieland.dao.jdbc.JdbcMovieDao.getMoviesByIds - Start processing query to get movies with moviesIds: [1]
01-11-2018 17:35:50.570 [main] INFO     c.g.movieland.dao.jdbc.JdbcMovieDao.getMoviesByIds - Finish processing query to get movies with moviesIds: [1]. It took 16 ms
01-11-2018 17:35:50.570 [main] INFO     c.g.movieland.dao.jdbc.JdbcGenreDao.getGenresForMovies - Start processing query to get genres for movies with moviesIds: [1]
01-11-2018 17:35:50.574 [main] INFO     c.g.movieland.dao.jdbc.JdbcGenreDao.getGenresForMovies - Finish processing query to get genres for movies with moviesIds: [1]. It took 3 ms
01-11-2018 17:35:50.574 [main] INFO     c.g.m.dao.jdbc.JdbcCountryDao.getCountriesForMovies - Start processing query to get countries for movies with moviesIds: [1]
01-11-2018 17:35:50.576 [main] INFO     c.g.m.dao.jdbc.JdbcCountryDao.getCountriesForMovies - Finish processing query to get countries for movies with moviesIds: [1]. It took 2 ms
01-11-2018 17:35:50.577 [main] INFO     c.g.movieland.dao.jdbc.JdbcReviewDao.getReviews - Start processing query to get reviews with moviesId: 1
01-11-2018 17:35:50.581 [main] INFO     c.g.movieland.dao.jdbc.JdbcReviewDao.getReviews - Finish processing query to get reviews with moviesId: 1. It took 4 ms
01-11-2018 17:35:50.581 [main] INFO     c.g.movieland.dao.jdbc.JdbcUserDao.getUsersByIds - Start processing query to get users with userIds: [2, 3]
01-11-2018 17:35:50.584 [main] INFO     c.g.movieland.dao.jdbc.JdbcUserDao.getUsersByIds - Finish processing query to get users with userIds: [2, 3]. It took 2 ms
01-11-2018 17:35:50.930 [Thread-1] INFO     o.s.w.c.s.GenericWebApplicationContext.doClose - Closing org.springframework.web.context.support.GenericWebApplicationContext@757277dc: startup date [Thu Nov 01 17:35:47 EET 2018]; root of context hierarchy
01-11-2018 17:35:50.946 [Thread-1] INFO     o.s.j.d.e.EmbeddedDatabaseFactory.shutdownDatabase - Shutting down embedded database: url='jdbc:h2:mem:dataSource;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=false'
01-11-2018 18:18:00.670 [main] INFO     o.s.t.c.w.WebTestContextBootstrapper.getDefaultTestExecutionListenerClassNames - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
01-11-2018 18:18:00.741 [main] INFO     o.s.t.c.w.WebTestContextBootstrapper.getTestExecutionListeners - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@11c20519, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@70beb599, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@4e41089d, org.springframework.test.context.support.DirtiesContextTestExecutionListener@32a068d1, org.springframework.test.context.transaction.TransactionalTestExecutionListener@33cb5951, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@365c30cc]
01-11-2018 18:18:01.960 [main] INFO     o.s.b.f.xml.XmlBeanDefinitionReader.loadBeanDefinitions - Loading XML bean definitions from class path resource [spring/test-context.xml]
01-11-2018 18:18:02.415 [main] INFO     o.s.b.f.xml.XmlBeanDefinitionReader.loadBeanDefinitions - Loading XML bean definitions from class path resource [spring/test-db-context.xml]
01-11-2018 18:18:03.119 [main] INFO     o.s.w.c.s.GenericWebApplicationContext.prepareRefresh - Refreshing org.springframework.web.context.support.GenericWebApplicationContext@757277dc: startup date [Thu Nov 01 18:18:03 EET 2018]; root of context hierarchy
01-11-2018 18:18:03.550 [main] INFO     o.s.c.a.ConfigurationClassBeanDefinitionReader.isOverriddenByExistingDefinition - Skipping bean definition for [BeanMethod:name=jdbcTemplate,declaringClass=com.gordeev.movieland.configuration.JdbcConfig]: a definition for bean 'jdbcTemplate' already exists. This top-level bean definition is considered as an override.
01-11-2018 18:18:03.552 [main] INFO     o.s.c.a.ConfigurationClassBeanDefinitionReader.isOverriddenByExistingDefinition - Skipping bean definition for [BeanMethod:name=namedJdbcTemplate,declaringClass=com.gordeev.movieland.configuration.JdbcConfig]: a definition for bean 'namedJdbcTemplate' already exists. This top-level bean definition is considered as an override.
01-11-2018 18:18:03.962 [main] INFO     o.s.j.d.e.EmbeddedDatabaseFactory.initDatabase - Starting embedded database: url='jdbc:h2:mem:dataSource;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=false', username='sa'
01-11-2018 18:18:04.163 [main] INFO     o.s.jdbc.datasource.init.ScriptUtils.executeSqlScript - Executing SQL script from class path resource [db/schema.sql]
01-11-2018 18:18:04.204 [main] INFO     o.s.jdbc.datasource.init.ScriptUtils.executeSqlScript - Executed SQL script from class path resource [db/schema.sql] in 41 ms.
01-11-2018 18:18:04.205 [main] INFO     o.s.jdbc.datasource.init.ScriptUtils.executeSqlScript - Executing SQL script from class path resource [db/data.sql]
01-11-2018 18:18:04.468 [main] INFO     o.s.jdbc.datasource.init.ScriptUtils.executeSqlScript - Executed SQL script from class path resource [db/data.sql] in 263 ms.
01-11-2018 18:18:04.560 [main] INFO     c.g.movieland.dao.jdbc.JdbcGenreDao.getAll - Start processing query to get all genres
01-11-2018 18:18:04.577 [main] INFO     c.g.movieland.dao.jdbc.JdbcGenreDao.getAll - Finish processing query to get all genres. It took 17 ms
01-11-2018 18:18:04.580 [main] INFO     c.g.movieland.dao.cache.GenreCache.invalidate - Update all genres in cache from dao
01-11-2018 18:18:04.934 [main] INFO     o.s.w.s.m.m.a.RequestMappingHandlerMapping.register - Mapped "{[/genre],methods=[GET]}" onto protected java.util.List<com.gordeev.movieland.entity.Genre> com.gordeev.movieland.controller.GenreController.getAllGenre()
01-11-2018 18:18:04.939 [main] INFO     o.s.w.s.m.m.a.RequestMappingHandlerMapping.register - Mapped "{[/movie/{movieId}],methods=[GET]}" onto protected com.gordeev.movieland.entity.Movie com.gordeev.movieland.controller.MovieController.getMovieById(int)
01-11-2018 18:18:04.944 [main] INFO     o.s.w.s.m.m.a.RequestMappingHandlerMapping.register - Mapped "{[/movie],methods=[GET]}" onto protected java.util.List<com.gordeev.movieland.entity.Movie> com.gordeev.movieland.controller.MovieController.getAllMovie(com.gordeev.movieland.vo.SortDirection,com.gordeev.movieland.vo.SortDirection)
01-11-2018 18:18:04.945 [main] INFO     o.s.w.s.m.m.a.RequestMappingHandlerMapping.register - Mapped "{[/movie/random],methods=[GET]}" onto protected java.util.List<com.gordeev.movieland.entity.Movie> com.gordeev.movieland.controller.MovieController.getThreeRandomMovie()
01-11-2018 18:18:04.947 [main] INFO     o.s.w.s.m.m.a.RequestMappingHandlerMapping.register - Mapped "{[/movie/genre/{genreId}],methods=[GET]}" onto protected java.util.List<com.gordeev.movieland.entity.Movie> com.gordeev.movieland.controller.MovieController.getMoviesByGenreId(int)
01-11-2018 18:18:05.293 [main] INFO     o.s.w.s.m.m.a.RequestMappingHandlerAdapter.initControllerAdviceCache - Looking for @ControllerAdvice: org.springframework.web.context.support.GenericWebApplicationContext@757277dc: startup date [Thu Nov 01 18:18:03 EET 2018]; root of context hierarchy
01-11-2018 18:18:05.801 [main] INFO     o.s.w.s.m.m.a.RequestMappingHandlerMapping.register - Mapped "{[/movie/{movieId}],methods=[GET]}" onto protected com.gordeev.movieland.entity.Movie com.gordeev.movieland.controller.MovieController.getMovieById(int)
01-11-2018 18:18:05.804 [main] INFO     o.s.w.s.m.m.a.RequestMappingHandlerMapping.register - Mapped "{[/movie],methods=[GET]}" onto protected java.util.List<com.gordeev.movieland.entity.Movie> com.gordeev.movieland.controller.MovieController.getAllMovie(com.gordeev.movieland.vo.SortDirection,com.gordeev.movieland.vo.SortDirection)
01-11-2018 18:18:05.805 [main] INFO     o.s.w.s.m.m.a.RequestMappingHandlerMapping.register - Mapped "{[/movie/random],methods=[GET]}" onto protected java.util.List<com.gordeev.movieland.entity.Movie> com.gordeev.movieland.controller.MovieController.getThreeRandomMovie()
01-11-2018 18:18:05.818 [main] INFO     o.s.w.s.m.m.a.RequestMappingHandlerMapping.register - Mapped "{[/movie/genre/{genreId}],methods=[GET]}" onto protected java.util.List<com.gordeev.movieland.entity.Movie> com.gordeev.movieland.controller.MovieController.getMoviesByGenreId(int)
01-11-2018 18:18:05.850 [main] INFO     o.s.w.s.m.m.a.RequestMappingHandlerAdapter.initControllerAdviceCache - Looking for @ControllerAdvice: org.springframework.test.web.servlet.setup.StubWebApplicationContext@16fe9c29
01-11-2018 18:18:05.870 [main] INFO     o.s.mock.web.MockServletContext.log - Initializing Spring FrameworkServlet ''
01-11-2018 18:18:05.870 [main] INFO     o.s.t.w.s.TestDispatcherServlet.initServletBean - FrameworkServlet '': initialization started
01-11-2018 18:18:05.872 [main] INFO     o.s.t.w.s.TestDispatcherServlet.initServletBean - FrameworkServlet '': initialization completed in 0 ms
01-11-2018 18:18:05.988 [main] WARN     o.s.web.servlet.PageNotFound.noHandlerFound - No mapping found for HTTP request with URI [v1/movie/1] in DispatcherServlet with name ''
01-11-2018 18:18:06.095 [Thread-1] INFO     o.s.w.c.s.GenericWebApplicationContext.doClose - Closing org.springframework.web.context.support.GenericWebApplicationContext@757277dc: startup date [Thu Nov 01 18:18:03 EET 2018]; root of context hierarchy
01-11-2018 18:18:06.105 [Thread-1] INFO     o.s.j.d.e.EmbeddedDatabaseFactory.shutdownDatabase - Shutting down embedded database: url='jdbc:h2:mem:dataSource;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=false'
01-11-2018 18:18:36.698 [main] INFO     o.s.t.c.w.WebTestContextBootstrapper.getDefaultTestExecutionListenerClassNames - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
01-11-2018 18:18:36.739 [main] INFO     o.s.t.c.w.WebTestContextBootstrapper.getTestExecutionListeners - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@11c20519, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@70beb599, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@4e41089d, org.springframework.test.context.support.DirtiesContextTestExecutionListener@32a068d1, org.springframework.test.context.transaction.TransactionalTestExecutionListener@33cb5951, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@365c30cc]
01-11-2018 18:18:37.454 [main] INFO     o.s.b.f.xml.XmlBeanDefinitionReader.loadBeanDefinitions - Loading XML bean definitions from class path resource [spring/test-context.xml]
01-11-2018 18:18:37.778 [main] INFO     o.s.b.f.xml.XmlBeanDefinitionReader.loadBeanDefinitions - Loading XML bean definitions from class path resource [spring/test-db-context.xml]
01-11-2018 18:18:38.125 [main] INFO     o.s.w.c.s.GenericWebApplicationContext.prepareRefresh - Refreshing org.springframework.web.context.support.GenericWebApplicationContext@757277dc: startup date [Thu Nov 01 18:18:38 EET 2018]; root of context hierarchy
01-11-2018 18:18:38.277 [main] INFO     o.s.c.a.ConfigurationClassBeanDefinitionReader.isOverriddenByExistingDefinition - Skipping bean definition for [BeanMethod:name=jdbcTemplate,declaringClass=com.gordeev.movieland.configuration.JdbcConfig]: a definition for bean 'jdbcTemplate' already exists. This top-level bean definition is considered as an override.
01-11-2018 18:18:38.278 [main] INFO     o.s.c.a.ConfigurationClassBeanDefinitionReader.isOverriddenByExistingDefinition - Skipping bean definition for [BeanMethod:name=namedJdbcTemplate,declaringClass=com.gordeev.movieland.configuration.JdbcConfig]: a definition for bean 'namedJdbcTemplate' already exists. This top-level bean definition is considered as an override.
01-11-2018 18:18:38.659 [main] INFO     o.s.j.d.e.EmbeddedDatabaseFactory.initDatabase - Starting embedded database: url='jdbc:h2:mem:dataSource;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=false', username='sa'
01-11-2018 18:18:38.913 [main] INFO     o.s.jdbc.datasource.init.ScriptUtils.executeSqlScript - Executing SQL script from class path resource [db/schema.sql]
01-11-2018 18:18:38.949 [main] INFO     o.s.jdbc.datasource.init.ScriptUtils.executeSqlScript - Executed SQL script from class path resource [db/schema.sql] in 35 ms.
01-11-2018 18:18:38.950 [main] INFO     o.s.jdbc.datasource.init.ScriptUtils.executeSqlScript - Executing SQL script from class path resource [db/data.sql]
01-11-2018 18:18:39.286 [main] INFO     o.s.jdbc.datasource.init.ScriptUtils.executeSqlScript - Executed SQL script from class path resource [db/data.sql] in 336 ms.
01-11-2018 18:18:39.358 [main] INFO     c.g.movieland.dao.jdbc.JdbcGenreDao.getAll - Start processing query to get all genres
01-11-2018 18:18:39.369 [main] INFO     c.g.movieland.dao.jdbc.JdbcGenreDao.getAll - Finish processing query to get all genres. It took 10 ms
01-11-2018 18:18:39.372 [main] INFO     c.g.movieland.dao.cache.GenreCache.invalidate - Update all genres in cache from dao
01-11-2018 18:18:39.680 [main] INFO     o.s.w.s.m.m.a.RequestMappingHandlerMapping.register - Mapped "{[/genre],methods=[GET]}" onto protected java.util.List<com.gordeev.movieland.entity.Genre> com.gordeev.movieland.controller.GenreController.getAllGenre()
01-11-2018 18:18:39.685 [main] INFO     o.s.w.s.m.m.a.RequestMappingHandlerMapping.register - Mapped "{[/movie/{movieId}],methods=[GET]}" onto protected com.gordeev.movieland.entity.Movie com.gordeev.movieland.controller.MovieController.getMovieById(int)
01-11-2018 18:18:39.690 [main] INFO     o.s.w.s.m.m.a.RequestMappingHandlerMapping.register - Mapped "{[/movie],methods=[GET]}" onto protected java.util.List<com.gordeev.movieland.entity.Movie> com.gordeev.movieland.controller.MovieController.getAllMovie(com.gordeev.movieland.vo.SortDirection,com.gordeev.movieland.vo.SortDirection)
01-11-2018 18:18:39.691 [main] INFO     o.s.w.s.m.m.a.RequestMappingHandlerMapping.register - Mapped "{[/movie/random],methods=[GET]}" onto protected java.util.List<com.gordeev.movieland.entity.Movie> com.gordeev.movieland.controller.MovieController.getThreeRandomMovie()
01-11-2018 18:18:39.692 [main] INFO     o.s.w.s.m.m.a.RequestMappingHandlerMapping.register - Mapped "{[/movie/genre/{genreId}],methods=[GET]}" onto protected java.util.List<com.gordeev.movieland.entity.Movie> com.gordeev.movieland.controller.MovieController.getMoviesByGenreId(int)
01-11-2018 18:18:39.974 [main] INFO     o.s.w.s.m.m.a.RequestMappingHandlerAdapter.initControllerAdviceCache - Looking for @ControllerAdvice: org.springframework.web.context.support.GenericWebApplicationContext@757277dc: startup date [Thu Nov 01 18:18:38 EET 2018]; root of context hierarchy
01-11-2018 18:18:40.376 [main] INFO     o.s.w.s.m.m.a.RequestMappingHandlerMapping.register - Mapped "{[/movie/{movieId}],methods=[GET]}" onto protected com.gordeev.movieland.entity.Movie com.gordeev.movieland.controller.MovieController.getMovieById(int)
01-11-2018 18:18:40.377 [main] INFO     o.s.w.s.m.m.a.RequestMappingHandlerMapping.register - Mapped "{[/movie],methods=[GET]}" onto protected java.util.List<com.gordeev.movieland.entity.Movie> com.gordeev.movieland.controller.MovieController.getAllMovie(com.gordeev.movieland.vo.SortDirection,com.gordeev.movieland.vo.SortDirection)
01-11-2018 18:18:40.378 [main] INFO     o.s.w.s.m.m.a.RequestMappingHandlerMapping.register - Mapped "{[/movie/random],methods=[GET]}" onto protected java.util.List<com.gordeev.movieland.entity.Movie> com.gordeev.movieland.controller.MovieController.getThreeRandomMovie()
01-11-2018 18:18:40.379 [main] INFO     o.s.w.s.m.m.a.RequestMappingHandlerMapping.register - Mapped "{[/movie/genre/{genreId}],methods=[GET]}" onto protected java.util.List<com.gordeev.movieland.entity.Movie> com.gordeev.movieland.controller.MovieController.getMoviesByGenreId(int)
01-11-2018 18:18:40.389 [main] INFO     o.s.w.s.m.m.a.RequestMappingHandlerAdapter.initControllerAdviceCache - Looking for @ControllerAdvice: org.springframework.test.web.servlet.setup.StubWebApplicationContext@16fe9c29
01-11-2018 18:18:40.406 [main] INFO     o.s.mock.web.MockServletContext.log - Initializing Spring FrameworkServlet ''
01-11-2018 18:18:40.406 [main] INFO     o.s.t.w.s.TestDispatcherServlet.initServletBean - FrameworkServlet '': initialization started
01-11-2018 18:18:40.407 [main] INFO     o.s.t.w.s.TestDispatcherServlet.initServletBean - FrameworkServlet '': initialization completed in 1 ms
01-11-2018 18:18:40.495 [main] WARN     o.s.web.servlet.PageNotFound.noHandlerFound - No mapping found for HTTP request with URI [movie/1] in DispatcherServlet with name ''
01-11-2018 18:18:40.538 [Thread-1] INFO     o.s.w.c.s.GenericWebApplicationContext.doClose - Closing org.springframework.web.context.support.GenericWebApplicationContext@757277dc: startup date [Thu Nov 01 18:18:38 EET 2018]; root of context hierarchy
01-11-2018 18:18:40.543 [Thread-1] INFO     o.s.j.d.e.EmbeddedDatabaseFactory.shutdownDatabase - Shutting down embedded database: url='jdbc:h2:mem:dataSource;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=false'
01-11-2018 18:19:04.118 [main] INFO     o.s.t.c.w.WebTestContextBootstrapper.getDefaultTestExecutionListenerClassNames - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
01-11-2018 18:19:04.153 [main] INFO     o.s.t.c.w.WebTestContextBootstrapper.getTestExecutionListeners - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@11c20519, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@70beb599, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@4e41089d, org.springframework.test.context.support.DirtiesContextTestExecutionListener@32a068d1, org.springframework.test.context.transaction.TransactionalTestExecutionListener@33cb5951, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@365c30cc]
01-11-2018 18:19:04.908 [main] INFO     o.s.b.f.xml.XmlBeanDefinitionReader.loadBeanDefinitions - Loading XML bean definitions from class path resource [spring/test-context.xml]
01-11-2018 18:19:05.211 [main] INFO     o.s.b.f.xml.XmlBeanDefinitionReader.loadBeanDefinitions - Loading XML bean definitions from class path resource [spring/test-db-context.xml]
01-11-2018 18:19:05.645 [main] INFO     o.s.w.c.s.GenericWebApplicationContext.prepareRefresh - Refreshing org.springframework.web.context.support.GenericWebApplicationContext@757277dc: startup date [Thu Nov 01 18:19:05 EET 2018]; root of context hierarchy
01-11-2018 18:19:05.803 [main] INFO     o.s.c.a.ConfigurationClassBeanDefinitionReader.isOverriddenByExistingDefinition - Skipping bean definition for [BeanMethod:name=jdbcTemplate,declaringClass=com.gordeev.movieland.configuration.JdbcConfig]: a definition for bean 'jdbcTemplate' already exists. This top-level bean definition is considered as an override.
01-11-2018 18:19:05.805 [main] INFO     o.s.c.a.ConfigurationClassBeanDefinitionReader.isOverriddenByExistingDefinition - Skipping bean definition for [BeanMethod:name=namedJdbcTemplate,declaringClass=com.gordeev.movieland.configuration.JdbcConfig]: a definition for bean 'namedJdbcTemplate' already exists. This top-level bean definition is considered as an override.
01-11-2018 18:19:06.217 [main] INFO     o.s.j.d.e.EmbeddedDatabaseFactory.initDatabase - Starting embedded database: url='jdbc:h2:mem:dataSource;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=false', username='sa'
01-11-2018 18:19:06.457 [main] INFO     o.s.jdbc.datasource.init.ScriptUtils.executeSqlScript - Executing SQL script from class path resource [db/schema.sql]
01-11-2018 18:19:06.492 [main] INFO     o.s.jdbc.datasource.init.ScriptUtils.executeSqlScript - Executed SQL script from class path resource [db/schema.sql] in 34 ms.
01-11-2018 18:19:06.493 [main] INFO     o.s.jdbc.datasource.init.ScriptUtils.executeSqlScript - Executing SQL script from class path resource [db/data.sql]
01-11-2018 18:19:06.715 [main] INFO     o.s.jdbc.datasource.init.ScriptUtils.executeSqlScript - Executed SQL script from class path resource [db/data.sql] in 222 ms.
01-11-2018 18:19:06.792 [main] INFO     c.g.movieland.dao.jdbc.JdbcGenreDao.getAll - Start processing query to get all genres
01-11-2018 18:19:06.802 [main] INFO     c.g.movieland.dao.jdbc.JdbcGenreDao.getAll - Finish processing query to get all genres. It took 9 ms
01-11-2018 18:19:06.804 [main] INFO     c.g.movieland.dao.cache.GenreCache.invalidate - Update all genres in cache from dao
01-11-2018 18:19:07.133 [main] INFO     o.s.w.s.m.m.a.RequestMappingHandlerMapping.register - Mapped "{[/genre],methods=[GET]}" onto protected java.util.List<com.gordeev.movieland.entity.Genre> com.gordeev.movieland.controller.GenreController.getAllGenre()
01-11-2018 18:19:07.139 [main] INFO     o.s.w.s.m.m.a.RequestMappingHandlerMapping.register - Mapped "{[/movie/{movieId}],methods=[GET]}" onto protected com.gordeev.movieland.entity.Movie com.gordeev.movieland.controller.MovieController.getMovieById(int)
01-11-2018 18:19:07.144 [main] INFO     o.s.w.s.m.m.a.RequestMappingHandlerMapping.register - Mapped "{[/movie],methods=[GET]}" onto protected java.util.List<com.gordeev.movieland.entity.Movie> com.gordeev.movieland.controller.MovieController.getAllMovie(com.gordeev.movieland.vo.SortDirection,com.gordeev.movieland.vo.SortDirection)
01-11-2018 18:19:07.147 [main] INFO     o.s.w.s.m.m.a.RequestMappingHandlerMapping.register - Mapped "{[/movie/random],methods=[GET]}" onto protected java.util.List<com.gordeev.movieland.entity.Movie> com.gordeev.movieland.controller.MovieController.getThreeRandomMovie()
01-11-2018 18:19:07.148 [main] INFO     o.s.w.s.m.m.a.RequestMappingHandlerMapping.register - Mapped "{[/movie/genre/{genreId}],methods=[GET]}" onto protected java.util.List<com.gordeev.movieland.entity.Movie> com.gordeev.movieland.controller.MovieController.getMoviesByGenreId(int)
01-11-2018 18:19:07.426 [main] INFO     o.s.w.s.m.m.a.RequestMappingHandlerAdapter.initControllerAdviceCache - Looking for @ControllerAdvice: org.springframework.web.context.support.GenericWebApplicationContext@757277dc: startup date [Thu Nov 01 18:19:05 EET 2018]; root of context hierarchy
01-11-2018 18:19:07.734 [main] INFO     o.s.w.s.m.m.a.RequestMappingHandlerMapping.register - Mapped "{[/movie/{movieId}],methods=[GET]}" onto protected com.gordeev.movieland.entity.Movie com.gordeev.movieland.controller.MovieController.getMovieById(int)
01-11-2018 18:19:07.735 [main] INFO     o.s.w.s.m.m.a.RequestMappingHandlerMapping.register - Mapped "{[/movie],methods=[GET]}" onto protected java.util.List<com.gordeev.movieland.entity.Movie> com.gordeev.movieland.controller.MovieController.getAllMovie(com.gordeev.movieland.vo.SortDirection,com.gordeev.movieland.vo.SortDirection)
01-11-2018 18:19:07.736 [main] INFO     o.s.w.s.m.m.a.RequestMappingHandlerMapping.register - Mapped "{[/movie/random],methods=[GET]}" onto protected java.util.List<com.gordeev.movieland.entity.Movie> com.gordeev.movieland.controller.MovieController.getThreeRandomMovie()
01-11-2018 18:19:07.737 [main] INFO     o.s.w.s.m.m.a.RequestMappingHandlerMapping.register - Mapped "{[/movie/genre/{genreId}],methods=[GET]}" onto protected java.util.List<com.gordeev.movieland.entity.Movie> com.gordeev.movieland.controller.MovieController.getMoviesByGenreId(int)
01-11-2018 18:19:07.748 [main] INFO     o.s.w.s.m.m.a.RequestMappingHandlerAdapter.initControllerAdviceCache - Looking for @ControllerAdvice: org.springframework.test.web.servlet.setup.StubWebApplicationContext@16fe9c29
01-11-2018 18:19:07.764 [main] INFO     o.s.mock.web.MockServletContext.log - Initializing Spring FrameworkServlet ''
01-11-2018 18:19:07.764 [main] INFO     o.s.t.w.s.TestDispatcherServlet.initServletBean - FrameworkServlet '': initialization started
01-11-2018 18:19:07.765 [main] INFO     o.s.t.w.s.TestDispatcherServlet.initServletBean - FrameworkServlet '': initialization completed in 1 ms
01-11-2018 18:19:07.895 [main] INFO     c.g.movieland.dao.jdbc.JdbcMovieDao.getMoviesByIds - Start processing query to get movies with moviesIds: [1]
01-11-2018 18:19:07.910 [main] INFO     c.g.movieland.dao.jdbc.JdbcMovieDao.getMoviesByIds - Finish processing query to get movies with moviesIds: [1]. It took 14 ms
01-11-2018 18:19:07.911 [main] INFO     c.g.movieland.dao.jdbc.JdbcGenreDao.getGenresForMovies - Start processing query to get genres for movies with moviesIds: [1]
01-11-2018 18:19:07.915 [main] INFO     c.g.movieland.dao.jdbc.JdbcGenreDao.getGenresForMovies - Finish processing query to get genres for movies with moviesIds: [1]. It took 4 ms
01-11-2018 18:19:07.916 [main] INFO     c.g.m.dao.jdbc.JdbcCountryDao.getCountriesForMovies - Start processing query to get countries for movies with moviesIds: [1]
01-11-2018 18:19:07.919 [main] INFO     c.g.m.dao.jdbc.JdbcCountryDao.getCountriesForMovies - Finish processing query to get countries for movies with moviesIds: [1]. It took 2 ms
01-11-2018 18:19:07.919 [main] INFO     c.g.movieland.dao.jdbc.JdbcReviewDao.getReviews - Start processing query to get reviews with moviesId: 1
01-11-2018 18:19:07.923 [main] INFO     c.g.movieland.dao.jdbc.JdbcReviewDao.getReviews - Finish processing query to get reviews with moviesId: 1. It took 3 ms
01-11-2018 18:19:07.924 [main] INFO     c.g.movieland.dao.jdbc.JdbcUserDao.getUsersByIds - Start processing query to get users with userIds: [2, 3]
01-11-2018 18:19:07.928 [main] INFO     c.g.movieland.dao.jdbc.JdbcUserDao.getUsersByIds - Finish processing query to get users with userIds: [2, 3]. It took 3 ms
01-11-2018 18:19:08.313 [Thread-1] INFO     o.s.w.c.s.GenericWebApplicationContext.doClose - Closing org.springframework.web.context.support.GenericWebApplicationContext@757277dc: startup date [Thu Nov 01 18:19:05 EET 2018]; root of context hierarchy
01-11-2018 18:19:08.321 [Thread-1] INFO     o.s.j.d.e.EmbeddedDatabaseFactory.shutdownDatabase - Shutting down embedded database: url='jdbc:h2:mem:dataSource;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=false'
01-11-2018 23:20:24.118 [main] INFO     o.s.t.c.w.WebTestContextBootstrapper.getDefaultTestExecutionListenerClassNames - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
01-11-2018 23:20:24.138 [main] INFO     o.s.t.c.w.WebTestContextBootstrapper.getTestExecutionListeners - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@11c20519, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@70beb599, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@4e41089d, org.springframework.test.context.support.DirtiesContextTestExecutionListener@32a068d1, org.springframework.test.context.transaction.TransactionalTestExecutionListener@33cb5951, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@365c30cc]
01-11-2018 23:20:24.884 [main] INFO     o.s.b.f.xml.XmlBeanDefinitionReader.loadBeanDefinitions - Loading XML bean definitions from class path resource [spring/test-context.xml]
01-11-2018 23:20:25.086 [main] INFO     o.s.b.f.xml.XmlBeanDefinitionReader.loadBeanDefinitions - Loading XML bean definitions from class path resource [spring/test-db-context.xml]
01-11-2018 23:20:25.436 [main] INFO     o.s.w.c.s.GenericWebApplicationContext.prepareRefresh - Refreshing org.springframework.web.context.support.GenericWebApplicationContext@757277dc: startup date [Thu Nov 01 23:20:25 EET 2018]; root of context hierarchy
01-11-2018 23:20:25.606 [main] INFO     o.s.c.a.ConfigurationClassBeanDefinitionReader.isOverriddenByExistingDefinition - Skipping bean definition for [BeanMethod:name=jdbcTemplate,declaringClass=com.gordeev.movieland.configuration.JdbcConfig]: a definition for bean 'jdbcTemplate' already exists. This top-level bean definition is considered as an override.
01-11-2018 23:20:25.607 [main] INFO     o.s.c.a.ConfigurationClassBeanDefinitionReader.isOverriddenByExistingDefinition - Skipping bean definition for [BeanMethod:name=namedJdbcTemplate,declaringClass=com.gordeev.movieland.configuration.JdbcConfig]: a definition for bean 'namedJdbcTemplate' already exists. This top-level bean definition is considered as an override.
01-11-2018 23:20:26.009 [main] INFO     o.s.j.d.e.EmbeddedDatabaseFactory.initDatabase - Starting embedded database: url='jdbc:h2:mem:dataSource;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=false', username='sa'
01-11-2018 23:20:26.216 [main] INFO     o.s.jdbc.datasource.init.ScriptUtils.executeSqlScript - Executing SQL script from class path resource [db/schema.sql]
01-11-2018 23:20:26.252 [main] INFO     o.s.jdbc.datasource.init.ScriptUtils.executeSqlScript - Executed SQL script from class path resource [db/schema.sql] in 35 ms.
01-11-2018 23:20:26.252 [main] INFO     o.s.jdbc.datasource.init.ScriptUtils.executeSqlScript - Executing SQL script from class path resource [db/data.sql]
01-11-2018 23:20:26.537 [main] INFO     o.s.jdbc.datasource.init.ScriptUtils.executeSqlScript - Executed SQL script from class path resource [db/data.sql] in 284 ms.
01-11-2018 23:20:26.631 [main] INFO     c.g.movieland.dao.jdbc.JdbcGenreDao.getAll - Start processing query to get all genres
01-11-2018 23:20:26.653 [main] INFO     c.g.movieland.dao.jdbc.JdbcGenreDao.getAll - Finish processing query to get all genres. It took 21 ms
01-11-2018 23:20:26.656 [main] INFO     c.g.movieland.dao.cache.GenreCache.invalidate - Update all genres in cache from dao
01-11-2018 23:20:26.958 [main] INFO     o.s.w.s.m.m.a.RequestMappingHandlerMapping.register - Mapped "{[/genre],methods=[GET]}" onto protected java.util.List<com.gordeev.movieland.entity.Genre> com.gordeev.movieland.controller.GenreController.getAllGenre()
01-11-2018 23:20:26.963 [main] INFO     o.s.w.s.m.m.a.RequestMappingHandlerMapping.register - Mapped "{[/movie/{movieId}],methods=[GET]}" onto protected com.gordeev.movieland.entity.Movie com.gordeev.movieland.controller.MovieController.getMovieById(int)
01-11-2018 23:20:26.964 [main] INFO     o.s.w.s.m.m.a.RequestMappingHandlerMapping.register - Mapped "{[/movie],methods=[GET]}" onto protected java.util.List<com.gordeev.movieland.entity.Movie> com.gordeev.movieland.controller.MovieController.getAllMovie(com.gordeev.movieland.vo.SortDirection,com.gordeev.movieland.vo.SortDirection)
01-11-2018 23:20:26.965 [main] INFO     o.s.w.s.m.m.a.RequestMappingHandlerMapping.register - Mapped "{[/movie/random],methods=[GET]}" onto protected java.util.List<com.gordeev.movieland.entity.Movie> com.gordeev.movieland.controller.MovieController.getThreeRandomMovie()
01-11-2018 23:20:26.966 [main] INFO     o.s.w.s.m.m.a.RequestMappingHandlerMapping.register - Mapped "{[/movie/genre/{genreId}],methods=[GET]}" onto protected java.util.List<com.gordeev.movieland.entity.Movie> com.gordeev.movieland.controller.MovieController.getMoviesByGenreId(int)
01-11-2018 23:20:27.289 [main] INFO     o.s.w.s.m.m.a.RequestMappingHandlerAdapter.initControllerAdviceCache - Looking for @ControllerAdvice: org.springframework.web.context.support.GenericWebApplicationContext@757277dc: startup date [Thu Nov 01 23:20:25 EET 2018]; root of context hierarchy
01-11-2018 23:20:27.711 [main] INFO     o.s.w.s.m.m.a.RequestMappingHandlerMapping.register - Mapped "{[/movie/{movieId}],methods=[GET]}" onto protected com.gordeev.movieland.entity.Movie com.gordeev.movieland.controller.MovieController.getMovieById(int)
01-11-2018 23:20:27.712 [main] INFO     o.s.w.s.m.m.a.RequestMappingHandlerMapping.register - Mapped "{[/movie],methods=[GET]}" onto protected java.util.List<com.gordeev.movieland.entity.Movie> com.gordeev.movieland.controller.MovieController.getAllMovie(com.gordeev.movieland.vo.SortDirection,com.gordeev.movieland.vo.SortDirection)
01-11-2018 23:20:27.713 [main] INFO     o.s.w.s.m.m.a.RequestMappingHandlerMapping.register - Mapped "{[/movie/random],methods=[GET]}" onto protected java.util.List<com.gordeev.movieland.entity.Movie> com.gordeev.movieland.controller.MovieController.getThreeRandomMovie()
01-11-2018 23:20:27.714 [main] INFO     o.s.w.s.m.m.a.RequestMappingHandlerMapping.register - Mapped "{[/movie/genre/{genreId}],methods=[GET]}" onto protected java.util.List<com.gordeev.movieland.entity.Movie> com.gordeev.movieland.controller.MovieController.getMoviesByGenreId(int)
01-11-2018 23:20:27.724 [main] INFO     o.s.w.s.m.m.a.RequestMappingHandlerAdapter.initControllerAdviceCache - Looking for @ControllerAdvice: org.springframework.test.web.servlet.setup.StubWebApplicationContext@4525d1d3
01-11-2018 23:20:27.743 [main] INFO     o.s.mock.web.MockServletContext.log - Initializing Spring FrameworkServlet ''
01-11-2018 23:20:27.743 [main] INFO     o.s.t.w.s.TestDispatcherServlet.initServletBean - FrameworkServlet '': initialization started
01-11-2018 23:20:27.744 [main] INFO     o.s.t.w.s.TestDispatcherServlet.initServletBean - FrameworkServlet '': initialization completed in 1 ms
01-11-2018 23:20:27.879 [main] INFO     c.g.movieland.dao.jdbc.JdbcMovieDao.getMoviesByIds - Start processing query to get movies with moviesIds: [1]
01-11-2018 23:20:27.897 [main] INFO     c.g.movieland.dao.jdbc.JdbcMovieDao.getMoviesByIds - Finish processing query to get movies with moviesIds: [1]. It took 18 ms
01-11-2018 23:20:27.898 [main] INFO     c.g.movieland.dao.jdbc.JdbcGenreDao.getGenresForMovies - Start processing query to get genres for movies with moviesIds: [1]
01-11-2018 23:20:27.902 [main] INFO     c.g.movieland.dao.jdbc.JdbcGenreDao.getGenresForMovies - Finish processing query to get genres for movies with moviesIds: [1]. It took 3 ms
01-11-2018 23:20:27.903 [main] INFO     c.g.m.dao.jdbc.JdbcCountryDao.getCountriesForMovies - Start processing query to get countries for movies with moviesIds: [1]
01-11-2018 23:20:27.905 [main] INFO     c.g.m.dao.jdbc.JdbcCountryDao.getCountriesForMovies - Finish processing query to get countries for movies with moviesIds: [1]. It took 1 ms
01-11-2018 23:20:27.906 [main] INFO     c.g.movieland.dao.jdbc.JdbcReviewDao.getReviews - Start processing query to get reviews with moviesId: 1
01-11-2018 23:20:27.910 [main] INFO     c.g.movieland.dao.jdbc.JdbcReviewDao.getReviews - Finish processing query to get reviews with moviesId: 1. It took 3 ms
01-11-2018 23:20:27.911 [main] INFO     c.g.movieland.dao.jdbc.JdbcUserDao.getUsersByIds - Start processing query to get users with userIds: [2, 3]
01-11-2018 23:20:27.914 [main] INFO     c.g.movieland.dao.jdbc.JdbcUserDao.getUsersByIds - Finish processing query to get users with userIds: [2, 3]. It took 2 ms
01-11-2018 23:20:28.164 [Thread-1] INFO     o.s.w.c.s.GenericWebApplicationContext.doClose - Closing org.springframework.web.context.support.GenericWebApplicationContext@757277dc: startup date [Thu Nov 01 23:20:25 EET 2018]; root of context hierarchy
01-11-2018 23:20:28.189 [Thread-1] INFO     o.s.j.d.e.EmbeddedDatabaseFactory.shutdownDatabase - Shutting down embedded database: url='jdbc:h2:mem:dataSource;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=false'
01-11-2018 23:27:01.859 [main] INFO     o.s.t.c.w.WebTestContextBootstrapper.getDefaultTestExecutionListenerClassNames - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
01-11-2018 23:27:01.889 [main] INFO     o.s.t.c.w.WebTestContextBootstrapper.getTestExecutionListeners - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@11c20519, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@70beb599, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@4e41089d, org.springframework.test.context.support.DirtiesContextTestExecutionListener@32a068d1, org.springframework.test.context.transaction.TransactionalTestExecutionListener@33cb5951, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@365c30cc]
01-11-2018 23:27:02.644 [main] INFO     o.s.b.f.xml.XmlBeanDefinitionReader.loadBeanDefinitions - Loading XML bean definitions from class path resource [spring/test-context.xml]
01-11-2018 23:27:02.952 [main] INFO     o.s.b.f.xml.XmlBeanDefinitionReader.loadBeanDefinitions - Loading XML bean definitions from class path resource [spring/test-db-context.xml]
01-11-2018 23:27:03.408 [main] INFO     o.s.w.c.s.GenericWebApplicationContext.prepareRefresh - Refreshing org.springframework.web.context.support.GenericWebApplicationContext@757277dc: startup date [Thu Nov 01 23:27:03 EET 2018]; root of context hierarchy
01-11-2018 23:27:03.715 [main] INFO     o.s.c.a.ConfigurationClassBeanDefinitionReader.isOverriddenByExistingDefinition - Skipping bean definition for [BeanMethod:name=jdbcTemplate,declaringClass=com.gordeev.movieland.configuration.JdbcConfig]: a definition for bean 'jdbcTemplate' already exists. This top-level bean definition is considered as an override.
01-11-2018 23:27:03.717 [main] INFO     o.s.c.a.ConfigurationClassBeanDefinitionReader.isOverriddenByExistingDefinition - Skipping bean definition for [BeanMethod:name=namedJdbcTemplate,declaringClass=com.gordeev.movieland.configuration.JdbcConfig]: a definition for bean 'namedJdbcTemplate' already exists. This top-level bean definition is considered as an override.
01-11-2018 23:27:04.378 [main] INFO     o.s.j.d.e.EmbeddedDatabaseFactory.initDatabase - Starting embedded database: url='jdbc:h2:mem:dataSource;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=false', username='sa'
01-11-2018 23:27:04.730 [main] INFO     o.s.jdbc.datasource.init.ScriptUtils.executeSqlScript - Executing SQL script from class path resource [db/schema.sql]
01-11-2018 23:27:04.777 [main] INFO     o.s.jdbc.datasource.init.ScriptUtils.executeSqlScript - Executed SQL script from class path resource [db/schema.sql] in 47 ms.
01-11-2018 23:27:04.777 [main] INFO     o.s.jdbc.datasource.init.ScriptUtils.executeSqlScript - Executing SQL script from class path resource [db/data.sql]
01-11-2018 23:27:05.160 [main] INFO     o.s.jdbc.datasource.init.ScriptUtils.executeSqlScript - Executed SQL script from class path resource [db/data.sql] in 382 ms.
01-11-2018 23:27:05.240 [main] INFO     c.g.movieland.dao.jdbc.JdbcGenreDao.getAll - Start processing query to get all genres
01-11-2018 23:27:05.250 [main] INFO     c.g.movieland.dao.jdbc.JdbcGenreDao.getAll - Finish processing query to get all genres. It took 9 ms
01-11-2018 23:27:05.252 [main] INFO     c.g.movieland.dao.cache.GenreCache.invalidate - Update all genres in cache from dao
01-11-2018 23:27:05.572 [main] INFO     o.s.w.s.m.m.a.RequestMappingHandlerMapping.register - Mapped "{[/genre],methods=[GET]}" onto protected java.util.List<com.gordeev.movieland.entity.Genre> com.gordeev.movieland.controller.GenreController.getAllGenre()
01-11-2018 23:27:05.577 [main] INFO     o.s.w.s.m.m.a.RequestMappingHandlerMapping.register - Mapped "{[/movie/{movieId}],methods=[GET]}" onto protected com.gordeev.movieland.entity.Movie com.gordeev.movieland.controller.MovieController.getMovieById(int)
01-11-2018 23:27:05.578 [main] INFO     o.s.w.s.m.m.a.RequestMappingHandlerMapping.register - Mapped "{[/movie/random],methods=[GET]}" onto protected java.util.List<com.gordeev.movieland.entity.Movie> com.gordeev.movieland.controller.MovieController.getThreeRandomMovie()
01-11-2018 23:27:05.579 [main] INFO     o.s.w.s.m.m.a.RequestMappingHandlerMapping.register - Mapped "{[/movie/genre/{genreId}],methods=[GET]}" onto protected java.util.List<com.gordeev.movieland.entity.Movie> com.gordeev.movieland.controller.MovieController.getMoviesByGenreId(int)
01-11-2018 23:27:05.580 [main] INFO     o.s.w.s.m.m.a.RequestMappingHandlerMapping.register - Mapped "{[/movie],methods=[GET]}" onto protected java.util.List<com.gordeev.movieland.entity.Movie> com.gordeev.movieland.controller.MovieController.getAllMovie(com.gordeev.movieland.vo.SortDirection,com.gordeev.movieland.vo.SortDirection)
01-11-2018 23:27:05.943 [main] INFO     o.s.w.s.m.m.a.RequestMappingHandlerAdapter.initControllerAdviceCache - Looking for @ControllerAdvice: org.springframework.web.context.support.GenericWebApplicationContext@757277dc: startup date [Thu Nov 01 23:27:03 EET 2018]; root of context hierarchy
01-11-2018 23:27:06.278 [main] INFO     o.s.w.s.m.m.a.RequestMappingHandlerMapping.register - Mapped "{[/movie/{movieId}],methods=[GET]}" onto protected com.gordeev.movieland.entity.Movie com.gordeev.movieland.controller.MovieController.getMovieById(int)
01-11-2018 23:27:06.279 [main] INFO     o.s.w.s.m.m.a.RequestMappingHandlerMapping.register - Mapped "{[/movie/random],methods=[GET]}" onto protected java.util.List<com.gordeev.movieland.entity.Movie> com.gordeev.movieland.controller.MovieController.getThreeRandomMovie()
01-11-2018 23:27:06.280 [main] INFO     o.s.w.s.m.m.a.RequestMappingHandlerMapping.register - Mapped "{[/movie/genre/{genreId}],methods=[GET]}" onto protected java.util.List<com.gordeev.movieland.entity.Movie> com.gordeev.movieland.controller.MovieController.getMoviesByGenreId(int)
01-11-2018 23:27:06.281 [main] INFO     o.s.w.s.m.m.a.RequestMappingHandlerMapping.register - Mapped "{[/movie],methods=[GET]}" onto protected java.util.List<com.gordeev.movieland.entity.Movie> com.gordeev.movieland.controller.MovieController.getAllMovie(com.gordeev.movieland.vo.SortDirection,com.gordeev.movieland.vo.SortDirection)
01-11-2018 23:27:06.291 [main] INFO     o.s.w.s.m.m.a.RequestMappingHandlerAdapter.initControllerAdviceCache - Looking for @ControllerAdvice: org.springframework.test.web.servlet.setup.StubWebApplicationContext@4525d1d3
01-11-2018 23:27:06.307 [main] INFO     o.s.mock.web.MockServletContext.log - Initializing Spring FrameworkServlet ''
01-11-2018 23:27:06.308 [main] INFO     o.s.t.w.s.TestDispatcherServlet.initServletBean - FrameworkServlet '': initialization started
01-11-2018 23:27:06.308 [main] INFO     o.s.t.w.s.TestDispatcherServlet.initServletBean - FrameworkServlet '': initialization completed in 0 ms
01-11-2018 23:27:06.427 [main] INFO     c.g.movieland.dao.jdbc.JdbcMovieDao.getMoviesByIds - Start processing query to get movies with moviesIds: [1]
01-11-2018 23:27:06.442 [main] INFO     c.g.movieland.dao.jdbc.JdbcMovieDao.getMoviesByIds - Finish processing query to get movies with moviesIds: [1]. It took 15 ms
01-11-2018 23:27:06.443 [main] INFO     c.g.movieland.dao.jdbc.JdbcGenreDao.getGenresForMovies - Start processing query to get genres for movies with moviesIds: [1]
01-11-2018 23:27:06.447 [main] INFO     c.g.movieland.dao.jdbc.JdbcGenreDao.getGenresForMovies - Finish processing query to get genres for movies with moviesIds: [1]. It took 4 ms
01-11-2018 23:27:06.448 [main] INFO     c.g.m.dao.jdbc.JdbcCountryDao.getCountriesForMovies - Start processing query to get countries for movies with moviesIds: [1]
01-11-2018 23:27:06.451 [main] INFO     c.g.m.dao.jdbc.JdbcCountryDao.getCountriesForMovies - Finish processing query to get countries for movies with moviesIds: [1]. It took 2 ms
01-11-2018 23:27:06.451 [main] INFO     c.g.movieland.dao.jdbc.JdbcReviewDao.getReviews - Start processing query to get reviews with moviesId: 1
01-11-2018 23:27:06.455 [main] INFO     c.g.movieland.dao.jdbc.JdbcReviewDao.getReviews - Finish processing query to get reviews with moviesId: 1. It took 3 ms
01-11-2018 23:27:06.456 [main] INFO     c.g.movieland.dao.jdbc.JdbcUserDao.getUsersByIds - Start processing query to get users with userIds: [2, 3]
01-11-2018 23:27:06.459 [main] INFO     c.g.movieland.dao.jdbc.JdbcUserDao.getUsersByIds - Finish processing query to get users with userIds: [2, 3]. It took 2 ms
01-11-2018 23:27:06.989 [Thread-1] INFO     o.s.w.c.s.GenericWebApplicationContext.doClose - Closing org.springframework.web.context.support.GenericWebApplicationContext@757277dc: startup date [Thu Nov 01 23:27:03 EET 2018]; root of context hierarchy
01-11-2018 23:27:07.008 [Thread-1] INFO     o.s.j.d.e.EmbeddedDatabaseFactory.shutdownDatabase - Shutting down embedded database: url='jdbc:h2:mem:dataSource;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=false'
01-11-2018 23:27:39.343 [main] INFO     o.s.t.c.w.WebTestContextBootstrapper.getDefaultTestExecutionListenerClassNames - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
01-11-2018 23:27:39.366 [main] INFO     o.s.t.c.w.WebTestContextBootstrapper.getTestExecutionListeners - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@11c20519, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@70beb599, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@4e41089d, org.springframework.test.context.support.DirtiesContextTestExecutionListener@32a068d1, org.springframework.test.context.transaction.TransactionalTestExecutionListener@33cb5951, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@365c30cc]
01-11-2018 23:27:40.010 [main] INFO     o.s.b.f.xml.XmlBeanDefinitionReader.loadBeanDefinitions - Loading XML bean definitions from class path resource [spring/test-context.xml]
01-11-2018 23:27:40.251 [main] INFO     o.s.b.f.xml.XmlBeanDefinitionReader.loadBeanDefinitions - Loading XML bean definitions from class path resource [spring/test-db-context.xml]
01-11-2018 23:27:40.670 [main] INFO     o.s.w.c.s.GenericWebApplicationContext.prepareRefresh - Refreshing org.springframework.web.context.support.GenericWebApplicationContext@757277dc: startup date [Thu Nov 01 23:27:40 EET 2018]; root of context hierarchy
01-11-2018 23:27:40.902 [main] INFO     o.s.c.a.ConfigurationClassBeanDefinitionReader.isOverriddenByExistingDefinition - Skipping bean definition for [BeanMethod:name=jdbcTemplate,declaringClass=com.gordeev.movieland.configuration.JdbcConfig]: a definition for bean 'jdbcTemplate' already exists. This top-level bean definition is considered as an override.
01-11-2018 23:27:40.903 [main] INFO     o.s.c.a.ConfigurationClassBeanDefinitionReader.isOverriddenByExistingDefinition - Skipping bean definition for [BeanMethod:name=namedJdbcTemplate,declaringClass=com.gordeev.movieland.configuration.JdbcConfig]: a definition for bean 'namedJdbcTemplate' already exists. This top-level bean definition is considered as an override.
01-11-2018 23:27:41.345 [main] INFO     o.s.j.d.e.EmbeddedDatabaseFactory.initDatabase - Starting embedded database: url='jdbc:h2:mem:dataSource;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=false', username='sa'
01-11-2018 23:27:41.580 [main] INFO     o.s.jdbc.datasource.init.ScriptUtils.executeSqlScript - Executing SQL script from class path resource [db/schema.sql]
01-11-2018 23:27:41.611 [main] INFO     o.s.jdbc.datasource.init.ScriptUtils.executeSqlScript - Executed SQL script from class path resource [db/schema.sql] in 30 ms.
01-11-2018 23:27:41.611 [main] INFO     o.s.jdbc.datasource.init.ScriptUtils.executeSqlScript - Executing SQL script from class path resource [db/data.sql]
01-11-2018 23:27:41.902 [main] INFO     o.s.jdbc.datasource.init.ScriptUtils.executeSqlScript - Executed SQL script from class path resource [db/data.sql] in 291 ms.
01-11-2018 23:27:42.000 [main] INFO     c.g.movieland.dao.jdbc.JdbcGenreDao.getAll - Start processing query to get all genres
01-11-2018 23:27:42.017 [main] INFO     c.g.movieland.dao.jdbc.JdbcGenreDao.getAll - Finish processing query to get all genres. It took 16 ms
01-11-2018 23:27:42.020 [main] INFO     c.g.movieland.dao.cache.GenreCache.invalidate - Update all genres in cache from dao
01-11-2018 23:27:42.396 [main] INFO     o.s.w.s.m.m.a.RequestMappingHandlerMapping.register - Mapped "{[/genre],methods=[GET]}" onto protected java.util.List<com.gordeev.movieland.entity.Genre> com.gordeev.movieland.controller.GenreController.getAllGenre()
01-11-2018 23:27:42.401 [main] INFO     o.s.w.s.m.m.a.RequestMappingHandlerMapping.register - Mapped "{[/movie/{movieId}],methods=[GET]}" onto protected com.gordeev.movieland.entity.Movie com.gordeev.movieland.controller.MovieController.getMovieById(int)
01-11-2018 23:27:42.403 [main] INFO     o.s.w.s.m.m.a.RequestMappingHandlerMapping.register - Mapped "{[/movie],methods=[GET]}" onto protected java.util.List<com.gordeev.movieland.entity.Movie> com.gordeev.movieland.controller.MovieController.getAllMovie(com.gordeev.movieland.vo.SortDirection,com.gordeev.movieland.vo.SortDirection)
01-11-2018 23:27:42.404 [main] INFO     o.s.w.s.m.m.a.RequestMappingHandlerMapping.register - Mapped "{[/movie/random],methods=[GET]}" onto protected java.util.List<com.gordeev.movieland.entity.Movie> com.gordeev.movieland.controller.MovieController.getThreeRandomMovie()
01-11-2018 23:27:42.405 [main] INFO     o.s.w.s.m.m.a.RequestMappingHandlerMapping.register - Mapped "{[/movie/genre/{genreId}],methods=[GET]}" onto protected java.util.List<com.gordeev.movieland.entity.Movie> com.gordeev.movieland.controller.MovieController.getMoviesByGenreId(int)
01-11-2018 23:27:42.737 [main] INFO     o.s.w.s.m.m.a.RequestMappingHandlerAdapter.initControllerAdviceCache - Looking for @ControllerAdvice: org.springframework.web.context.support.GenericWebApplicationContext@757277dc: startup date [Thu Nov 01 23:27:40 EET 2018]; root of context hierarchy
01-11-2018 23:27:43.174 [main] INFO     o.s.w.s.m.m.a.RequestMappingHandlerMapping.register - Mapped "{[/movie/{movieId}],methods=[GET]}" onto protected com.gordeev.movieland.entity.Movie com.gordeev.movieland.controller.MovieController.getMovieById(int)
01-11-2018 23:27:43.177 [main] INFO     o.s.w.s.m.m.a.RequestMappingHandlerMapping.register - Mapped "{[/movie],methods=[GET]}" onto protected java.util.List<com.gordeev.movieland.entity.Movie> com.gordeev.movieland.controller.MovieController.getAllMovie(com.gordeev.movieland.vo.SortDirection,com.gordeev.movieland.vo.SortDirection)
01-11-2018 23:27:43.178 [main] INFO     o.s.w.s.m.m.a.RequestMappingHandlerMapping.register - Mapped "{[/movie/random],methods=[GET]}" onto protected java.util.List<com.gordeev.movieland.entity.Movie> com.gordeev.movieland.controller.MovieController.getThreeRandomMovie()
01-11-2018 23:27:43.179 [main] INFO     o.s.w.s.m.m.a.RequestMappingHandlerMapping.register - Mapped "{[/movie/genre/{genreId}],methods=[GET]}" onto protected java.util.List<com.gordeev.movieland.entity.Movie> com.gordeev.movieland.controller.MovieController.getMoviesByGenreId(int)
01-11-2018 23:27:43.194 [main] INFO     o.s.w.s.m.m.a.RequestMappingHandlerAdapter.initControllerAdviceCache - Looking for @ControllerAdvice: org.springframework.test.web.servlet.setup.StubWebApplicationContext@4525d1d3
01-11-2018 23:27:43.215 [main] INFO     o.s.mock.web.MockServletContext.log - Initializing Spring FrameworkServlet ''
01-11-2018 23:27:43.216 [main] INFO     o.s.t.w.s.TestDispatcherServlet.initServletBean - FrameworkServlet '': initialization started
01-11-2018 23:27:43.218 [main] INFO     o.s.t.w.s.TestDispatcherServlet.initServletBean - FrameworkServlet '': initialization completed in 1 ms
01-11-2018 23:27:43.356 [main] INFO     c.g.movieland.dao.jdbc.JdbcMovieDao.getMoviesByIds - Start processing query to get movies with moviesIds: [1]
01-11-2018 23:27:43.371 [main] INFO     c.g.movieland.dao.jdbc.JdbcMovieDao.getMoviesByIds - Finish processing query to get movies with moviesIds: [1]. It took 14 ms
01-11-2018 23:27:43.372 [main] INFO     c.g.movieland.dao.jdbc.JdbcGenreDao.getGenresForMovies - Start processing query to get genres for movies with moviesIds: [1]
01-11-2018 23:27:43.375 [main] INFO     c.g.movieland.dao.jdbc.JdbcGenreDao.getGenresForMovies - Finish processing query to get genres for movies with moviesIds: [1]. It took 3 ms
01-11-2018 23:27:43.380 [main] INFO     c.g.m.dao.jdbc.JdbcCountryDao.getCountriesForMovies - Start processing query to get countries for movies with moviesIds: [1]
01-11-2018 23:27:43.383 [main] INFO     c.g.m.dao.jdbc.JdbcCountryDao.getCountriesForMovies - Finish processing query to get countries for movies with moviesIds: [1]. It took 2 ms
01-11-2018 23:27:43.384 [main] INFO     c.g.movieland.dao.jdbc.JdbcReviewDao.getReviews - Start processing query to get reviews with moviesId: 1
01-11-2018 23:27:43.388 [main] INFO     c.g.movieland.dao.jdbc.JdbcReviewDao.getReviews - Finish processing query to get reviews with moviesId: 1. It took 4 ms
01-11-2018 23:27:43.389 [main] INFO     c.g.movieland.dao.jdbc.JdbcUserDao.getUsersByIds - Start processing query to get users with userIds: [2, 3]
01-11-2018 23:27:43.392 [main] INFO     c.g.movieland.dao.jdbc.JdbcUserDao.getUsersByIds - Finish processing query to get users with userIds: [2, 3]. It took 3 ms
01-11-2018 23:27:43.701 [Thread-1] INFO     o.s.w.c.s.GenericWebApplicationContext.doClose - Closing org.springframework.web.context.support.GenericWebApplicationContext@757277dc: startup date [Thu Nov 01 23:27:40 EET 2018]; root of context hierarchy
01-11-2018 23:27:43.710 [Thread-1] INFO     o.s.j.d.e.EmbeddedDatabaseFactory.shutdownDatabase - Shutting down embedded database: url='jdbc:h2:mem:dataSource;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=false'
01-11-2018 23:28:15.193 [main] INFO     o.s.t.c.w.WebTestContextBootstrapper.getDefaultTestExecutionListenerClassNames - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
01-11-2018 23:28:15.214 [main] INFO     o.s.t.c.w.WebTestContextBootstrapper.getTestExecutionListeners - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@11c20519, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@70beb599, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@4e41089d, org.springframework.test.context.support.DirtiesContextTestExecutionListener@32a068d1, org.springframework.test.context.transaction.TransactionalTestExecutionListener@33cb5951, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@365c30cc]
01-11-2018 23:28:15.781 [main] INFO     o.s.b.f.xml.XmlBeanDefinitionReader.loadBeanDefinitions - Loading XML bean definitions from class path resource [spring/test-context.xml]
01-11-2018 23:28:16.049 [main] INFO     o.s.b.f.xml.XmlBeanDefinitionReader.loadBeanDefinitions - Loading XML bean definitions from class path resource [spring/test-db-context.xml]
01-11-2018 23:28:16.449 [main] INFO     o.s.w.c.s.GenericWebApplicationContext.prepareRefresh - Refreshing org.springframework.web.context.support.GenericWebApplicationContext@757277dc: startup date [Thu Nov 01 23:28:16 EET 2018]; root of context hierarchy
01-11-2018 23:28:16.716 [main] INFO     o.s.c.a.ConfigurationClassBeanDefinitionReader.isOverriddenByExistingDefinition - Skipping bean definition for [BeanMethod:name=jdbcTemplate,declaringClass=com.gordeev.movieland.configuration.JdbcConfig]: a definition for bean 'jdbcTemplate' already exists. This top-level bean definition is considered as an override.
01-11-2018 23:28:16.717 [main] INFO     o.s.c.a.ConfigurationClassBeanDefinitionReader.isOverriddenByExistingDefinition - Skipping bean definition for [BeanMethod:name=namedJdbcTemplate,declaringClass=com.gordeev.movieland.configuration.JdbcConfig]: a definition for bean 'namedJdbcTemplate' already exists. This top-level bean definition is considered as an override.
01-11-2018 23:28:17.146 [main] INFO     o.s.j.d.e.EmbeddedDatabaseFactory.initDatabase - Starting embedded database: url='jdbc:h2:mem:dataSource;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=false', username='sa'
01-11-2018 23:28:17.358 [main] INFO     o.s.jdbc.datasource.init.ScriptUtils.executeSqlScript - Executing SQL script from class path resource [db/schema.sql]
01-11-2018 23:28:17.393 [main] INFO     o.s.jdbc.datasource.init.ScriptUtils.executeSqlScript - Executed SQL script from class path resource [db/schema.sql] in 35 ms.
01-11-2018 23:28:17.394 [main] INFO     o.s.jdbc.datasource.init.ScriptUtils.executeSqlScript - Executing SQL script from class path resource [db/data.sql]
01-11-2018 23:28:17.648 [main] INFO     o.s.jdbc.datasource.init.ScriptUtils.executeSqlScript - Executed SQL script from class path resource [db/data.sql] in 253 ms.
01-11-2018 23:28:17.755 [main] INFO     c.g.movieland.dao.jdbc.JdbcGenreDao.getAll - Start processing query to get all genres
01-11-2018 23:28:17.780 [main] INFO     c.g.movieland.dao.jdbc.JdbcGenreDao.getAll - Finish processing query to get all genres. It took 24 ms
01-11-2018 23:28:17.782 [main] INFO     c.g.movieland.dao.cache.GenreCache.invalidate - Update all genres in cache from dao
01-11-2018 23:28:18.142 [main] INFO     o.s.w.s.m.m.a.RequestMappingHandlerMapping.register - Mapped "{[/genre],methods=[GET]}" onto protected java.util.List<com.gordeev.movieland.entity.Genre> com.gordeev.movieland.controller.GenreController.getAllGenre()
01-11-2018 23:28:18.147 [main] INFO     o.s.w.s.m.m.a.RequestMappingHandlerMapping.register - Mapped "{[/movie/{movieId}],methods=[GET]}" onto protected com.gordeev.movieland.entity.Movie com.gordeev.movieland.controller.MovieController.getMovieById(int)
01-11-2018 23:28:18.148 [main] INFO     o.s.w.s.m.m.a.RequestMappingHandlerMapping.register - Mapped "{[/movie],methods=[GET]}" onto protected java.util.List<com.gordeev.movieland.entity.Movie> com.gordeev.movieland.controller.MovieController.getAllMovie(com.gordeev.movieland.vo.SortDirection,com.gordeev.movieland.vo.SortDirection)
01-11-2018 23:28:18.149 [main] INFO     o.s.w.s.m.m.a.RequestMappingHandlerMapping.register - Mapped "{[/movie/random],methods=[GET]}" onto protected java.util.List<com.gordeev.movieland.entity.Movie> com.gordeev.movieland.controller.MovieController.getThreeRandomMovie()
01-11-2018 23:28:18.150 [main] INFO     o.s.w.s.m.m.a.RequestMappingHandlerMapping.register - Mapped "{[/movie/genre/{genreId}],methods=[GET]}" onto protected java.util.List<com.gordeev.movieland.entity.Movie> com.gordeev.movieland.controller.MovieController.getMoviesByGenreId(int)
01-11-2018 23:28:18.425 [main] INFO     o.s.w.s.m.m.a.RequestMappingHandlerAdapter.initControllerAdviceCache - Looking for @ControllerAdvice: org.springframework.web.context.support.GenericWebApplicationContext@757277dc: startup date [Thu Nov 01 23:28:16 EET 2018]; root of context hierarchy
01-11-2018 23:28:18.769 [main] INFO     o.s.w.s.m.m.a.RequestMappingHandlerMapping.register - Mapped "{[/movie/{movieId}],methods=[GET]}" onto protected com.gordeev.movieland.entity.Movie com.gordeev.movieland.controller.MovieController.getMovieById(int)
01-11-2018 23:28:18.770 [main] INFO     o.s.w.s.m.m.a.RequestMappingHandlerMapping.register - Mapped "{[/movie],methods=[GET]}" onto protected java.util.List<com.gordeev.movieland.entity.Movie> com.gordeev.movieland.controller.MovieController.getAllMovie(com.gordeev.movieland.vo.SortDirection,com.gordeev.movieland.vo.SortDirection)
01-11-2018 23:28:18.771 [main] INFO     o.s.w.s.m.m.a.RequestMappingHandlerMapping.register - Mapped "{[/movie/random],methods=[GET]}" onto protected java.util.List<com.gordeev.movieland.entity.Movie> com.gordeev.movieland.controller.MovieController.getThreeRandomMovie()
01-11-2018 23:28:18.772 [main] INFO     o.s.w.s.m.m.a.RequestMappingHandlerMapping.register - Mapped "{[/movie/genre/{genreId}],methods=[GET]}" onto protected java.util.List<com.gordeev.movieland.entity.Movie> com.gordeev.movieland.controller.MovieController.getMoviesByGenreId(int)
01-11-2018 23:28:18.781 [main] INFO     o.s.w.s.m.m.a.RequestMappingHandlerAdapter.initControllerAdviceCache - Looking for @ControllerAdvice: org.springframework.test.web.servlet.setup.StubWebApplicationContext@4525d1d3
01-11-2018 23:28:18.794 [main] INFO     o.s.mock.web.MockServletContext.log - Initializing Spring FrameworkServlet ''
01-11-2018 23:28:18.795 [main] INFO     o.s.t.w.s.TestDispatcherServlet.initServletBean - FrameworkServlet '': initialization started
01-11-2018 23:28:18.796 [main] INFO     o.s.t.w.s.TestDispatcherServlet.initServletBean - FrameworkServlet '': initialization completed in 1 ms
01-11-2018 23:28:18.925 [main] INFO     c.g.movieland.dao.jdbc.JdbcMovieDao.getMoviesByIds - Start processing query to get movies with moviesIds: [1]
01-11-2018 23:28:18.942 [main] INFO     c.g.movieland.dao.jdbc.JdbcMovieDao.getMoviesByIds - Finish processing query to get movies with moviesIds: [1]. It took 16 ms
01-11-2018 23:28:18.943 [main] INFO     c.g.movieland.dao.jdbc.JdbcGenreDao.getGenresForMovies - Start processing query to get genres for movies with moviesIds: [1]
01-11-2018 23:28:18.948 [main] INFO     c.g.movieland.dao.jdbc.JdbcGenreDao.getGenresForMovies - Finish processing query to get genres for movies with moviesIds: [1]. It took 4 ms
01-11-2018 23:28:18.953 [main] INFO     c.g.m.dao.jdbc.JdbcCountryDao.getCountriesForMovies - Start processing query to get countries for movies with moviesIds: [1]
01-11-2018 23:28:18.956 [main] INFO     c.g.m.dao.jdbc.JdbcCountryDao.getCountriesForMovies - Finish processing query to get countries for movies with moviesIds: [1]. It took 2 ms
01-11-2018 23:28:18.957 [main] INFO     c.g.movieland.dao.jdbc.JdbcReviewDao.getReviews - Start processing query to get reviews with moviesId: 1
01-11-2018 23:28:18.961 [main] INFO     c.g.movieland.dao.jdbc.JdbcReviewDao.getReviews - Finish processing query to get reviews with moviesId: 1. It took 4 ms
01-11-2018 23:28:18.962 [main] INFO     c.g.movieland.dao.jdbc.JdbcUserDao.getUsersByIds - Start processing query to get users with userIds: [2, 3]
01-11-2018 23:28:18.965 [main] INFO     c.g.movieland.dao.jdbc.JdbcUserDao.getUsersByIds - Finish processing query to get users with userIds: [2, 3]. It took 3 ms
01-11-2018 23:28:19.223 [Thread-1] INFO     o.s.w.c.s.GenericWebApplicationContext.doClose - Closing org.springframework.web.context.support.GenericWebApplicationContext@757277dc: startup date [Thu Nov 01 23:28:16 EET 2018]; root of context hierarchy
01-11-2018 23:28:19.229 [Thread-1] INFO     o.s.j.d.e.EmbeddedDatabaseFactory.shutdownDatabase - Shutting down embedded database: url='jdbc:h2:mem:dataSource;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=false'
01-11-2018 23:35:31.168 [main] INFO     o.s.t.c.w.WebTestContextBootstrapper.getDefaultTestExecutionListenerClassNames - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
01-11-2018 23:35:31.200 [main] INFO     o.s.t.c.w.WebTestContextBootstrapper.getTestExecutionListeners - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@33cb5951, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@365c30cc, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@701fc37a, org.springframework.test.context.support.DirtiesContextTestExecutionListener@4148db48, org.springframework.test.context.transaction.TransactionalTestExecutionListener@282003e1, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@7fad8c79]
01-11-2018 23:35:31.943 [main] INFO     o.s.b.f.xml.XmlBeanDefinitionReader.loadBeanDefinitions - Loading XML bean definitions from class path resource [spring/test-context.xml]
01-11-2018 23:35:32.245 [main] INFO     o.s.b.f.xml.XmlBeanDefinitionReader.loadBeanDefinitions - Loading XML bean definitions from class path resource [spring/test-db-context.xml]
01-11-2018 23:35:32.668 [main] INFO     o.s.w.c.s.GenericWebApplicationContext.prepareRefresh - Refreshing org.springframework.web.context.support.GenericWebApplicationContext@c86b9e3: startup date [Thu Nov 01 23:35:32 EET 2018]; root of context hierarchy
01-11-2018 23:35:32.812 [main] INFO     o.s.c.a.ConfigurationClassBeanDefinitionReader.isOverriddenByExistingDefinition - Skipping bean definition for [BeanMethod:name=jdbcTemplate,declaringClass=com.gordeev.movieland.configuration.JdbcConfig]: a definition for bean 'jdbcTemplate' already exists. This top-level bean definition is considered as an override.
01-11-2018 23:35:32.813 [main] INFO     o.s.c.a.ConfigurationClassBeanDefinitionReader.isOverriddenByExistingDefinition - Skipping bean definition for [BeanMethod:name=namedJdbcTemplate,declaringClass=com.gordeev.movieland.configuration.JdbcConfig]: a definition for bean 'namedJdbcTemplate' already exists. This top-level bean definition is considered as an override.
01-11-2018 23:35:33.136 [main] INFO     o.s.j.d.e.EmbeddedDatabaseFactory.initDatabase - Starting embedded database: url='jdbc:h2:mem:dataSource;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=false', username='sa'
01-11-2018 23:35:33.309 [main] INFO     o.s.jdbc.datasource.init.ScriptUtils.executeSqlScript - Executing SQL script from class path resource [db/schema.sql]
01-11-2018 23:35:33.338 [main] INFO     o.s.jdbc.datasource.init.ScriptUtils.executeSqlScript - Executed SQL script from class path resource [db/schema.sql] in 29 ms.
01-11-2018 23:35:33.339 [main] INFO     o.s.jdbc.datasource.init.ScriptUtils.executeSqlScript - Executing SQL script from class path resource [db/data.sql]
01-11-2018 23:35:33.567 [main] INFO     o.s.jdbc.datasource.init.ScriptUtils.executeSqlScript - Executed SQL script from class path resource [db/data.sql] in 227 ms.
01-11-2018 23:35:33.644 [main] INFO     c.g.movieland.dao.jdbc.JdbcGenreDao.getAll - Start processing query to get all genres
01-11-2018 23:35:33.654 [main] INFO     c.g.movieland.dao.jdbc.JdbcGenreDao.getAll - Finish processing query to get all genres. It took 9 ms
01-11-2018 23:35:33.656 [main] INFO     c.g.movieland.dao.cache.GenreCache.invalidate - Update all genres in cache from dao
01-11-2018 23:35:33.952 [main] INFO     o.s.w.s.m.m.a.RequestMappingHandlerMapping.register - Mapped "{[/genre],methods=[GET]}" onto protected java.util.List<com.gordeev.movieland.entity.Genre> com.gordeev.movieland.controller.GenreController.getAllGenre()
01-11-2018 23:35:33.956 [main] INFO     o.s.w.s.m.m.a.RequestMappingHandlerMapping.register - Mapped "{[/movie/{movieId}],methods=[GET]}" onto protected com.gordeev.movieland.entity.Movie com.gordeev.movieland.controller.MovieController.getMovieById(int)
01-11-2018 23:35:33.958 [main] INFO     o.s.w.s.m.m.a.RequestMappingHandlerMapping.register - Mapped "{[/movie],methods=[GET]}" onto protected java.util.List<com.gordeev.movieland.entity.Movie> com.gordeev.movieland.controller.MovieController.getAllMovie(com.gordeev.movieland.vo.SortDirection,com.gordeev.movieland.vo.SortDirection)
01-11-2018 23:35:33.959 [main] INFO     o.s.w.s.m.m.a.RequestMappingHandlerMapping.register - Mapped "{[/movie/random],methods=[GET]}" onto protected java.util.List<com.gordeev.movieland.entity.Movie> com.gordeev.movieland.controller.MovieController.getThreeRandomMovie()
01-11-2018 23:35:33.960 [main] INFO     o.s.w.s.m.m.a.RequestMappingHandlerMapping.register - Mapped "{[/movie/genre/{genreId}],methods=[GET]}" onto protected java.util.List<com.gordeev.movieland.entity.Movie> com.gordeev.movieland.controller.MovieController.getMoviesByGenreId(int)
01-11-2018 23:35:34.237 [main] INFO     o.s.w.s.m.m.a.RequestMappingHandlerAdapter.initControllerAdviceCache - Looking for @ControllerAdvice: org.springframework.web.context.support.GenericWebApplicationContext@c86b9e3: startup date [Thu Nov 01 23:35:32 EET 2018]; root of context hierarchy
01-11-2018 23:35:34.559 [main] INFO     o.s.w.s.m.m.a.RequestMappingHandlerMapping.register - Mapped "{[/movie/{movieId}],methods=[GET]}" onto protected com.gordeev.movieland.entity.Movie com.gordeev.movieland.controller.MovieController.getMovieById(int)
01-11-2018 23:35:34.560 [main] INFO     o.s.w.s.m.m.a.RequestMappingHandlerMapping.register - Mapped "{[/movie],methods=[GET]}" onto protected java.util.List<com.gordeev.movieland.entity.Movie> com.gordeev.movieland.controller.MovieController.getAllMovie(com.gordeev.movieland.vo.SortDirection,com.gordeev.movieland.vo.SortDirection)
01-11-2018 23:35:34.561 [main] INFO     o.s.w.s.m.m.a.RequestMappingHandlerMapping.register - Mapped "{[/movie/random],methods=[GET]}" onto protected java.util.List<com.gordeev.movieland.entity.Movie> com.gordeev.movieland.controller.MovieController.getThreeRandomMovie()
01-11-2018 23:35:34.562 [main] INFO     o.s.w.s.m.m.a.RequestMappingHandlerMapping.register - Mapped "{[/movie/genre/{genreId}],methods=[GET]}" onto protected java.util.List<com.gordeev.movieland.entity.Movie> com.gordeev.movieland.controller.MovieController.getMoviesByGenreId(int)
01-11-2018 23:35:34.572 [main] INFO     o.s.w.s.m.m.a.RequestMappingHandlerAdapter.initControllerAdviceCache - Looking for @ControllerAdvice: org.springframework.test.web.servlet.setup.StubWebApplicationContext@6d91790b
01-11-2018 23:35:34.587 [main] INFO     o.s.mock.web.MockServletContext.log - Initializing Spring FrameworkServlet ''
01-11-2018 23:35:34.587 [main] INFO     o.s.t.w.s.TestDispatcherServlet.initServletBean - FrameworkServlet '': initialization started
01-11-2018 23:35:34.588 [main] INFO     o.s.t.w.s.TestDispatcherServlet.initServletBean - FrameworkServlet '': initialization completed in 1 ms
01-11-2018 23:35:34.714 [main] INFO     c.g.movieland.dao.jdbc.JdbcMovieDao.getMoviesByIds - Start processing query to get movies with moviesIds: [1]
01-11-2018 23:35:34.730 [main] INFO     c.g.movieland.dao.jdbc.JdbcMovieDao.getMoviesByIds - Finish processing query to get movies with moviesIds: [1]. It took 15 ms
01-11-2018 23:35:34.731 [main] INFO     c.g.movieland.dao.jdbc.JdbcGenreDao.getGenresForMovies - Start processing query to get genres for movies with moviesIds: [1]
01-11-2018 23:35:34.739 [main] INFO     c.g.movieland.dao.jdbc.JdbcGenreDao.getGenresForMovies - Finish processing query to get genres for movies with moviesIds: [1]. It took 4 ms
01-11-2018 23:35:34.740 [main] INFO     c.g.m.dao.jdbc.JdbcCountryDao.getCountriesForMovies - Start processing query to get countries for movies with moviesIds: [1]
01-11-2018 23:35:34.743 [main] INFO     c.g.m.dao.jdbc.JdbcCountryDao.getCountriesForMovies - Finish processing query to get countries for movies with moviesIds: [1]. It took 2 ms
01-11-2018 23:35:34.744 [main] INFO     c.g.movieland.dao.jdbc.JdbcReviewDao.getReviews - Start processing query to get reviews with moviesId: 1
01-11-2018 23:35:34.748 [main] INFO     c.g.movieland.dao.jdbc.JdbcReviewDao.getReviews - Finish processing query to get reviews with moviesId: 1. It took 4 ms
01-11-2018 23:35:34.748 [main] INFO     c.g.movieland.dao.jdbc.JdbcUserDao.getUsersByIds - Start processing query to get users with userIds: [2, 3]
01-11-2018 23:35:34.759 [main] INFO     c.g.movieland.dao.jdbc.JdbcUserDao.getUsersByIds - Finish processing query to get users with userIds: [2, 3]. It took 10 ms
01-11-2018 23:35:35.070 [Thread-1] INFO     o.s.w.c.s.GenericWebApplicationContext.doClose - Closing org.springframework.web.context.support.GenericWebApplicationContext@c86b9e3: startup date [Thu Nov 01 23:35:32 EET 2018]; root of context hierarchy
01-11-2018 23:35:35.083 [Thread-1] INFO     o.s.j.d.e.EmbeddedDatabaseFactory.shutdownDatabase - Shutting down embedded database: url='jdbc:h2:mem:dataSource;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=false'
01-11-2018 23:36:30.302 [main] INFO     o.s.t.c.w.WebTestContextBootstrapper.getDefaultTestExecutionListenerClassNames - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
01-11-2018 23:36:30.332 [main] INFO     o.s.t.c.w.WebTestContextBootstrapper.getTestExecutionListeners - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@33cb5951, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@365c30cc, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@701fc37a, org.springframework.test.context.support.DirtiesContextTestExecutionListener@4148db48, org.springframework.test.context.transaction.TransactionalTestExecutionListener@282003e1, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@7fad8c79]
01-11-2018 23:36:31.024 [main] INFO     o.s.b.f.xml.XmlBeanDefinitionReader.loadBeanDefinitions - Loading XML bean definitions from class path resource [spring/test-context.xml]
01-11-2018 23:36:31.303 [main] INFO     o.s.b.f.xml.XmlBeanDefinitionReader.loadBeanDefinitions - Loading XML bean definitions from class path resource [spring/test-db-context.xml]
01-11-2018 23:36:31.697 [main] INFO     o.s.w.c.s.GenericWebApplicationContext.prepareRefresh - Refreshing org.springframework.web.context.support.GenericWebApplicationContext@c86b9e3: startup date [Thu Nov 01 23:36:31 EET 2018]; root of context hierarchy
01-11-2018 23:36:31.904 [main] INFO     o.s.c.a.ConfigurationClassBeanDefinitionReader.isOverriddenByExistingDefinition - Skipping bean definition for [BeanMethod:name=jdbcTemplate,declaringClass=com.gordeev.movieland.configuration.JdbcConfig]: a definition for bean 'jdbcTemplate' already exists. This top-level bean definition is considered as an override.
01-11-2018 23:36:31.905 [main] INFO     o.s.c.a.ConfigurationClassBeanDefinitionReader.isOverriddenByExistingDefinition - Skipping bean definition for [BeanMethod:name=namedJdbcTemplate,declaringClass=com.gordeev.movieland.configuration.JdbcConfig]: a definition for bean 'namedJdbcTemplate' already exists. This top-level bean definition is considered as an override.
01-11-2018 23:36:32.312 [main] INFO     o.s.j.d.e.EmbeddedDatabaseFactory.initDatabase - Starting embedded database: url='jdbc:h2:mem:dataSource;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=false', username='sa'
01-11-2018 23:36:32.557 [main] INFO     o.s.jdbc.datasource.init.ScriptUtils.executeSqlScript - Executing SQL script from class path resource [db/schema.sql]
01-11-2018 23:36:32.598 [main] INFO     o.s.jdbc.datasource.init.ScriptUtils.executeSqlScript - Executed SQL script from class path resource [db/schema.sql] in 39 ms.
01-11-2018 23:36:32.598 [main] INFO     o.s.jdbc.datasource.init.ScriptUtils.executeSqlScript - Executing SQL script from class path resource [db/data.sql]
01-11-2018 23:36:32.989 [main] INFO     o.s.jdbc.datasource.init.ScriptUtils.executeSqlScript - Executed SQL script from class path resource [db/data.sql] in 390 ms.
01-11-2018 23:36:33.087 [main] INFO     c.g.movieland.dao.jdbc.JdbcGenreDao.getAll - Start processing query to get all genres
01-11-2018 23:36:33.104 [main] INFO     c.g.movieland.dao.jdbc.JdbcGenreDao.getAll - Finish processing query to get all genres. It took 16 ms
01-11-2018 23:36:33.106 [main] INFO     c.g.movieland.dao.cache.GenreCache.invalidate - Update all genres in cache from dao
01-11-2018 23:36:33.425 [main] INFO     o.s.w.s.m.m.a.RequestMappingHandlerMapping.register - Mapped "{[/genre],methods=[GET]}" onto protected java.util.List<com.gordeev.movieland.entity.Genre> com.gordeev.movieland.controller.GenreController.getAllGenre()
01-11-2018 23:36:33.431 [main] INFO     o.s.w.s.m.m.a.RequestMappingHandlerMapping.register - Mapped "{[/movie/{movieId}],methods=[GET]}" onto protected com.gordeev.movieland.entity.Movie com.gordeev.movieland.controller.MovieController.getMovieById(int)
01-11-2018 23:36:33.432 [main] INFO     o.s.w.s.m.m.a.RequestMappingHandlerMapping.register - Mapped "{[/movie],methods=[GET]}" onto protected java.util.List<com.gordeev.movieland.entity.Movie> com.gordeev.movieland.controller.MovieController.getAllMovie(com.gordeev.movieland.vo.SortDirection,com.gordeev.movieland.vo.SortDirection)
01-11-2018 23:36:33.433 [main] INFO     o.s.w.s.m.m.a.RequestMappingHandlerMapping.register - Mapped "{[/movie/random],methods=[GET]}" onto protected java.util.List<com.gordeev.movieland.entity.Movie> com.gordeev.movieland.controller.MovieController.getThreeRandomMovie()
01-11-2018 23:36:33.434 [main] INFO     o.s.w.s.m.m.a.RequestMappingHandlerMapping.register - Mapped "{[/movie/genre/{genreId}],methods=[GET]}" onto protected java.util.List<com.gordeev.movieland.entity.Movie> com.gordeev.movieland.controller.MovieController.getMoviesByGenreId(int)
01-11-2018 23:36:33.703 [main] INFO     o.s.w.s.m.m.a.RequestMappingHandlerAdapter.initControllerAdviceCache - Looking for @ControllerAdvice: org.springframework.web.context.support.GenericWebApplicationContext@c86b9e3: startup date [Thu Nov 01 23:36:31 EET 2018]; root of context hierarchy
01-11-2018 23:36:34.024 [main] INFO     o.s.w.s.m.m.a.RequestMappingHandlerMapping.register - Mapped "{[/movie/{movieId}],methods=[GET]}" onto protected com.gordeev.movieland.entity.Movie com.gordeev.movieland.controller.MovieController.getMovieById(int)
01-11-2018 23:36:34.025 [main] INFO     o.s.w.s.m.m.a.RequestMappingHandlerMapping.register - Mapped "{[/movie],methods=[GET]}" onto protected java.util.List<com.gordeev.movieland.entity.Movie> com.gordeev.movieland.controller.MovieController.getAllMovie(com.gordeev.movieland.vo.SortDirection,com.gordeev.movieland.vo.SortDirection)
01-11-2018 23:36:34.026 [main] INFO     o.s.w.s.m.m.a.RequestMappingHandlerMapping.register - Mapped "{[/movie/random],methods=[GET]}" onto protected java.util.List<com.gordeev.movieland.entity.Movie> com.gordeev.movieland.controller.MovieController.getThreeRandomMovie()
01-11-2018 23:36:34.027 [main] INFO     o.s.w.s.m.m.a.RequestMappingHandlerMapping.register - Mapped "{[/movie/genre/{genreId}],methods=[GET]}" onto protected java.util.List<com.gordeev.movieland.entity.Movie> com.gordeev.movieland.controller.MovieController.getMoviesByGenreId(int)
01-11-2018 23:36:34.038 [main] INFO     o.s.w.s.m.m.a.RequestMappingHandlerAdapter.initControllerAdviceCache - Looking for @ControllerAdvice: org.springframework.test.web.servlet.setup.StubWebApplicationContext@6d91790b
01-11-2018 23:36:34.055 [main] INFO     o.s.mock.web.MockServletContext.log - Initializing Spring FrameworkServlet ''
01-11-2018 23:36:34.056 [main] INFO     o.s.t.w.s.TestDispatcherServlet.initServletBean - FrameworkServlet '': initialization started
01-11-2018 23:36:34.057 [main] INFO     o.s.t.w.s.TestDispatcherServlet.initServletBean - FrameworkServlet '': initialization completed in 1 ms
01-11-2018 23:36:34.198 [main] INFO     c.g.movieland.dao.jdbc.JdbcMovieDao.getMoviesByIds - Start processing query to get movies with moviesIds: [1]
01-11-2018 23:36:34.221 [main] INFO     c.g.movieland.dao.jdbc.JdbcMovieDao.getMoviesByIds - Finish processing query to get movies with moviesIds: [1]. It took 22 ms
01-11-2018 23:36:34.221 [main] INFO     c.g.movieland.dao.jdbc.JdbcGenreDao.getGenresForMovies - Start processing query to get genres for movies with moviesIds: [1]
01-11-2018 23:36:34.226 [main] INFO     c.g.movieland.dao.jdbc.JdbcGenreDao.getGenresForMovies - Finish processing query to get genres for movies with moviesIds: [1]. It took 4 ms
01-11-2018 23:36:34.227 [main] INFO     c.g.m.dao.jdbc.JdbcCountryDao.getCountriesForMovies - Start processing query to get countries for movies with moviesIds: [1]
01-11-2018 23:36:34.230 [main] INFO     c.g.m.dao.jdbc.JdbcCountryDao.getCountriesForMovies - Finish processing query to get countries for movies with moviesIds: [1]. It took 2 ms
01-11-2018 23:36:34.231 [main] INFO     c.g.movieland.dao.jdbc.JdbcReviewDao.getReviews - Start processing query to get reviews with moviesId: 1
01-11-2018 23:36:34.235 [main] INFO     c.g.movieland.dao.jdbc.JdbcReviewDao.getReviews - Finish processing query to get reviews with moviesId: 1. It took 3 ms
01-11-2018 23:36:34.236 [main] INFO     c.g.movieland.dao.jdbc.JdbcUserDao.getUsersByIds - Start processing query to get users with userIds: [2, 3]
01-11-2018 23:36:34.240 [main] INFO     c.g.movieland.dao.jdbc.JdbcUserDao.getUsersByIds - Finish processing query to get users with userIds: [2, 3]. It took 3 ms
01-11-2018 23:36:34.958 [Thread-1] INFO     o.s.w.c.s.GenericWebApplicationContext.doClose - Closing org.springframework.web.context.support.GenericWebApplicationContext@c86b9e3: startup date [Thu Nov 01 23:36:31 EET 2018]; root of context hierarchy
01-11-2018 23:36:34.970 [Thread-1] INFO     o.s.j.d.e.EmbeddedDatabaseFactory.shutdownDatabase - Shutting down embedded database: url='jdbc:h2:mem:dataSource;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=false'
01-11-2018 23:36:54.178 [main] INFO     o.s.t.c.w.WebTestContextBootstrapper.getDefaultTestExecutionListenerClassNames - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
01-11-2018 23:36:54.205 [main] INFO     o.s.t.c.w.WebTestContextBootstrapper.getTestExecutionListeners - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@33cb5951, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@365c30cc, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@701fc37a, org.springframework.test.context.support.DirtiesContextTestExecutionListener@4148db48, org.springframework.test.context.transaction.TransactionalTestExecutionListener@282003e1, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@7fad8c79]
01-11-2018 23:36:54.921 [main] INFO     o.s.b.f.xml.XmlBeanDefinitionReader.loadBeanDefinitions - Loading XML bean definitions from class path resource [spring/test-context.xml]
01-11-2018 23:36:55.186 [main] INFO     o.s.b.f.xml.XmlBeanDefinitionReader.loadBeanDefinitions - Loading XML bean definitions from class path resource [spring/test-db-context.xml]
01-11-2018 23:36:55.584 [main] INFO     o.s.w.c.s.GenericWebApplicationContext.prepareRefresh - Refreshing org.springframework.web.context.support.GenericWebApplicationContext@c86b9e3: startup date [Thu Nov 01 23:36:55 EET 2018]; root of context hierarchy
01-11-2018 23:36:55.786 [main] INFO     o.s.c.a.ConfigurationClassBeanDefinitionReader.isOverriddenByExistingDefinition - Skipping bean definition for [BeanMethod:name=jdbcTemplate,declaringClass=com.gordeev.movieland.configuration.JdbcConfig]: a definition for bean 'jdbcTemplate' already exists. This top-level bean definition is considered as an override.
01-11-2018 23:36:55.787 [main] INFO     o.s.c.a.ConfigurationClassBeanDefinitionReader.isOverriddenByExistingDefinition - Skipping bean definition for [BeanMethod:name=namedJdbcTemplate,declaringClass=com.gordeev.movieland.configuration.JdbcConfig]: a definition for bean 'namedJdbcTemplate' already exists. This top-level bean definition is considered as an override.
01-11-2018 23:36:56.238 [main] INFO     o.s.j.d.e.EmbeddedDatabaseFactory.initDatabase - Starting embedded database: url='jdbc:h2:mem:dataSource;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=false', username='sa'
01-11-2018 23:36:56.466 [main] INFO     o.s.jdbc.datasource.init.ScriptUtils.executeSqlScript - Executing SQL script from class path resource [db/schema.sql]
01-11-2018 23:36:56.509 [main] INFO     o.s.jdbc.datasource.init.ScriptUtils.executeSqlScript - Executed SQL script from class path resource [db/schema.sql] in 42 ms.
01-11-2018 23:36:56.510 [main] INFO     o.s.jdbc.datasource.init.ScriptUtils.executeSqlScript - Executing SQL script from class path resource [db/data.sql]
01-11-2018 23:36:56.832 [main] INFO     o.s.jdbc.datasource.init.ScriptUtils.executeSqlScript - Executed SQL script from class path resource [db/data.sql] in 321 ms.
01-11-2018 23:36:56.932 [main] INFO     c.g.movieland.dao.jdbc.JdbcGenreDao.getAll - Start processing query to get all genres
01-11-2018 23:36:56.946 [main] INFO     c.g.movieland.dao.jdbc.JdbcGenreDao.getAll - Finish processing query to get all genres. It took 14 ms
01-11-2018 23:36:56.949 [main] INFO     c.g.movieland.dao.cache.GenreCache.invalidate - Update all genres in cache from dao
01-11-2018 23:36:57.269 [main] INFO     o.s.w.s.m.m.a.RequestMappingHandlerMapping.register - Mapped "{[/genre],methods=[GET]}" onto protected java.util.List<com.gordeev.movieland.entity.Genre> com.gordeev.movieland.controller.GenreController.getAllGenre()
01-11-2018 23:36:57.276 [main] INFO     o.s.w.s.m.m.a.RequestMappingHandlerMapping.register - Mapped "{[/movie/{movieId}],methods=[GET]}" onto protected com.gordeev.movieland.entity.Movie com.gordeev.movieland.controller.MovieController.getMovieById(int)
01-11-2018 23:36:57.277 [main] INFO     o.s.w.s.m.m.a.RequestMappingHandlerMapping.register - Mapped "{[/movie/random],methods=[GET]}" onto protected java.util.List<com.gordeev.movieland.entity.Movie> com.gordeev.movieland.controller.MovieController.getThreeRandomMovie()
01-11-2018 23:36:57.282 [main] INFO     o.s.w.s.m.m.a.RequestMappingHandlerMapping.register - Mapped "{[/movie/genre/{genreId}],methods=[GET]}" onto protected java.util.List<com.gordeev.movieland.entity.Movie> com.gordeev.movieland.controller.MovieController.getMoviesByGenreId(int)
01-11-2018 23:36:57.284 [main] INFO     o.s.w.s.m.m.a.RequestMappingHandlerMapping.register - Mapped "{[/movie],methods=[GET]}" onto protected java.util.List<com.gordeev.movieland.entity.Movie> com.gordeev.movieland.controller.MovieController.getAllMovie(com.gordeev.movieland.vo.SortDirection,com.gordeev.movieland.vo.SortDirection)
01-11-2018 23:36:57.574 [main] INFO     o.s.w.s.m.m.a.RequestMappingHandlerAdapter.initControllerAdviceCache - Looking for @ControllerAdvice: org.springframework.web.context.support.GenericWebApplicationContext@c86b9e3: startup date [Thu Nov 01 23:36:55 EET 2018]; root of context hierarchy
01-11-2018 23:36:57.983 [main] INFO     o.s.w.s.m.m.a.RequestMappingHandlerMapping.register - Mapped "{[/movie/{movieId}],methods=[GET]}" onto protected com.gordeev.movieland.entity.Movie com.gordeev.movieland.controller.MovieController.getMovieById(int)
01-11-2018 23:36:57.984 [main] INFO     o.s.w.s.m.m.a.RequestMappingHandlerMapping.register - Mapped "{[/movie/random],methods=[GET]}" onto protected java.util.List<com.gordeev.movieland.entity.Movie> com.gordeev.movieland.controller.MovieController.getThreeRandomMovie()
01-11-2018 23:36:57.985 [main] INFO     o.s.w.s.m.m.a.RequestMappingHandlerMapping.register - Mapped "{[/movie/genre/{genreId}],methods=[GET]}" onto protected java.util.List<com.gordeev.movieland.entity.Movie> com.gordeev.movieland.controller.MovieController.getMoviesByGenreId(int)
01-11-2018 23:36:57.985 [main] INFO     o.s.w.s.m.m.a.RequestMappingHandlerMapping.register - Mapped "{[/movie],methods=[GET]}" onto protected java.util.List<com.gordeev.movieland.entity.Movie> com.gordeev.movieland.controller.MovieController.getAllMovie(com.gordeev.movieland.vo.SortDirection,com.gordeev.movieland.vo.SortDirection)
01-11-2018 23:36:57.995 [main] INFO     o.s.w.s.m.m.a.RequestMappingHandlerAdapter.initControllerAdviceCache - Looking for @ControllerAdvice: org.springframework.test.web.servlet.setup.StubWebApplicationContext@6d91790b
01-11-2018 23:36:58.016 [main] INFO     o.s.mock.web.MockServletContext.log - Initializing Spring FrameworkServlet ''
01-11-2018 23:36:58.017 [main] INFO     o.s.t.w.s.TestDispatcherServlet.initServletBean - FrameworkServlet '': initialization started
01-11-2018 23:36:58.018 [main] INFO     o.s.t.w.s.TestDispatcherServlet.initServletBean - FrameworkServlet '': initialization completed in 1 ms
01-11-2018 23:36:58.156 [main] INFO     c.g.movieland.dao.jdbc.JdbcMovieDao.getMoviesByIds - Start processing query to get movies with moviesIds: [1]
01-11-2018 23:36:58.180 [main] INFO     c.g.movieland.dao.jdbc.JdbcMovieDao.getMoviesByIds - Finish processing query to get movies with moviesIds: [1]. It took 23 ms
01-11-2018 23:36:58.181 [main] INFO     c.g.movieland.dao.jdbc.JdbcGenreDao.getGenresForMovies - Start processing query to get genres for movies with moviesIds: [1]
01-11-2018 23:36:58.185 [main] INFO     c.g.movieland.dao.jdbc.JdbcGenreDao.getGenresForMovies - Finish processing query to get genres for movies with moviesIds: [1]. It took 4 ms
01-11-2018 23:36:58.186 [main] INFO     c.g.m.dao.jdbc.JdbcCountryDao.getCountriesForMovies - Start processing query to get countries for movies with moviesIds: [1]
01-11-2018 23:36:58.196 [main] INFO     c.g.m.dao.jdbc.JdbcCountryDao.getCountriesForMovies - Finish processing query to get countries for movies with moviesIds: [1]. It took 9 ms
01-11-2018 23:36:58.197 [main] INFO     c.g.movieland.dao.jdbc.JdbcReviewDao.getReviews - Start processing query to get reviews with moviesId: 1
01-11-2018 23:36:58.204 [main] INFO     c.g.movieland.dao.jdbc.JdbcReviewDao.getReviews - Finish processing query to get reviews with moviesId: 1. It took 5 ms
01-11-2018 23:36:58.206 [main] INFO     c.g.movieland.dao.jdbc.JdbcUserDao.getUsersByIds - Start processing query to get users with userIds: [2, 3]
01-11-2018 23:36:58.214 [main] INFO     c.g.movieland.dao.jdbc.JdbcUserDao.getUsersByIds - Finish processing query to get users with userIds: [2, 3]. It took 3 ms
01-11-2018 23:36:58.434 [Thread-1] INFO     o.s.w.c.s.GenericWebApplicationContext.doClose - Closing org.springframework.web.context.support.GenericWebApplicationContext@c86b9e3: startup date [Thu Nov 01 23:36:55 EET 2018]; root of context hierarchy
01-11-2018 23:36:58.464 [Thread-1] INFO     o.s.j.d.e.EmbeddedDatabaseFactory.shutdownDatabase - Shutting down embedded database: url='jdbc:h2:mem:dataSource;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=false'
01-11-2018 23:37:16.599 [main] INFO     o.s.t.c.w.WebTestContextBootstrapper.getDefaultTestExecutionListenerClassNames - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
01-11-2018 23:37:16.633 [main] INFO     o.s.t.c.w.WebTestContextBootstrapper.getTestExecutionListeners - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@33cb5951, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@365c30cc, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@701fc37a, org.springframework.test.context.support.DirtiesContextTestExecutionListener@4148db48, org.springframework.test.context.transaction.TransactionalTestExecutionListener@282003e1, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@7fad8c79]
01-11-2018 23:37:17.334 [main] INFO     o.s.b.f.xml.XmlBeanDefinitionReader.loadBeanDefinitions - Loading XML bean definitions from class path resource [spring/test-context.xml]
01-11-2018 23:37:17.625 [main] INFO     o.s.b.f.xml.XmlBeanDefinitionReader.loadBeanDefinitions - Loading XML bean definitions from class path resource [spring/test-db-context.xml]
01-11-2018 23:37:18.083 [main] INFO     o.s.w.c.s.GenericWebApplicationContext.prepareRefresh - Refreshing org.springframework.web.context.support.GenericWebApplicationContext@c86b9e3: startup date [Thu Nov 01 23:37:18 EET 2018]; root of context hierarchy
01-11-2018 23:37:18.295 [main] INFO     o.s.c.a.ConfigurationClassBeanDefinitionReader.isOverriddenByExistingDefinition - Skipping bean definition for [BeanMethod:name=jdbcTemplate,declaringClass=com.gordeev.movieland.configuration.JdbcConfig]: a definition for bean 'jdbcTemplate' already exists. This top-level bean definition is considered as an override.
01-11-2018 23:37:18.296 [main] INFO     o.s.c.a.ConfigurationClassBeanDefinitionReader.isOverriddenByExistingDefinition - Skipping bean definition for [BeanMethod:name=namedJdbcTemplate,declaringClass=com.gordeev.movieland.configuration.JdbcConfig]: a definition for bean 'namedJdbcTemplate' already exists. This top-level bean definition is considered as an override.
01-11-2018 23:37:18.736 [main] INFO     o.s.j.d.e.EmbeddedDatabaseFactory.initDatabase - Starting embedded database: url='jdbc:h2:mem:dataSource;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=false', username='sa'
01-11-2018 23:37:18.992 [main] INFO     o.s.jdbc.datasource.init.ScriptUtils.executeSqlScript - Executing SQL script from class path resource [db/schema.sql]
01-11-2018 23:37:19.031 [main] INFO     o.s.jdbc.datasource.init.ScriptUtils.executeSqlScript - Executed SQL script from class path resource [db/schema.sql] in 38 ms.
01-11-2018 23:37:19.032 [main] INFO     o.s.jdbc.datasource.init.ScriptUtils.executeSqlScript - Executing SQL script from class path resource [db/data.sql]
01-11-2018 23:37:19.340 [main] INFO     o.s.jdbc.datasource.init.ScriptUtils.executeSqlScript - Executed SQL script from class path resource [db/data.sql] in 307 ms.
01-11-2018 23:37:19.457 [main] INFO     c.g.movieland.dao.jdbc.JdbcGenreDao.getAll - Start processing query to get all genres
01-11-2018 23:37:19.472 [main] INFO     c.g.movieland.dao.jdbc.JdbcGenreDao.getAll - Finish processing query to get all genres. It took 14 ms
01-11-2018 23:37:19.475 [main] INFO     c.g.movieland.dao.cache.GenreCache.invalidate - Update all genres in cache from dao
01-11-2018 23:37:19.793 [main] INFO     o.s.w.s.m.m.a.RequestMappingHandlerMapping.register - Mapped "{[/genre],methods=[GET]}" onto protected java.util.List<com.gordeev.movieland.entity.Genre> com.gordeev.movieland.controller.GenreController.getAllGenre()
01-11-2018 23:37:19.798 [main] INFO     o.s.w.s.m.m.a.RequestMappingHandlerMapping.register - Mapped "{[/movie/{movieId}],methods=[GET]}" onto protected com.gordeev.movieland.entity.Movie com.gordeev.movieland.controller.MovieController.getMovieById(int)
01-11-2018 23:37:19.799 [main] INFO     o.s.w.s.m.m.a.RequestMappingHandlerMapping.register - Mapped "{[/movie],methods=[GET]}" onto protected java.util.List<com.gordeev.movieland.entity.Movie> com.gordeev.movieland.controller.MovieController.getAllMovie(com.gordeev.movieland.vo.SortDirection,com.gordeev.movieland.vo.SortDirection)
01-11-2018 23:37:19.804 [main] INFO     o.s.w.s.m.m.a.RequestMappingHandlerMapping.register - Mapped "{[/movie/random],methods=[GET]}" onto protected java.util.List<com.gordeev.movieland.entity.Movie> com.gordeev.movieland.controller.MovieController.getThreeRandomMovie()
01-11-2018 23:37:19.805 [main] INFO     o.s.w.s.m.m.a.RequestMappingHandlerMapping.register - Mapped "{[/movie/genre/{genreId}],methods=[GET]}" onto protected java.util.List<com.gordeev.movieland.entity.Movie> com.gordeev.movieland.controller.MovieController.getMoviesByGenreId(int)
01-11-2018 23:37:20.127 [main] INFO     o.s.w.s.m.m.a.RequestMappingHandlerAdapter.initControllerAdviceCache - Looking for @ControllerAdvice: org.springframework.web.context.support.GenericWebApplicationContext@c86b9e3: startup date [Thu Nov 01 23:37:18 EET 2018]; root of context hierarchy
01-11-2018 23:37:20.535 [main] INFO     o.s.w.s.m.m.a.RequestMappingHandlerMapping.register - Mapped "{[/movie/{movieId}],methods=[GET]}" onto protected com.gordeev.movieland.entity.Movie com.gordeev.movieland.controller.MovieController.getMovieById(int)
01-11-2018 23:37:20.536 [main] INFO     o.s.w.s.m.m.a.RequestMappingHandlerMapping.register - Mapped "{[/movie],methods=[GET]}" onto protected java.util.List<com.gordeev.movieland.entity.Movie> com.gordeev.movieland.controller.MovieController.getAllMovie(com.gordeev.movieland.vo.SortDirection,com.gordeev.movieland.vo.SortDirection)
01-11-2018 23:37:20.537 [main] INFO     o.s.w.s.m.m.a.RequestMappingHandlerMapping.register - Mapped "{[/movie/random],methods=[GET]}" onto protected java.util.List<com.gordeev.movieland.entity.Movie> com.gordeev.movieland.controller.MovieController.getThreeRandomMovie()
01-11-2018 23:37:20.538 [main] INFO     o.s.w.s.m.m.a.RequestMappingHandlerMapping.register - Mapped "{[/movie/genre/{genreId}],methods=[GET]}" onto protected java.util.List<com.gordeev.movieland.entity.Movie> com.gordeev.movieland.controller.MovieController.getMoviesByGenreId(int)
01-11-2018 23:37:20.548 [main] INFO     o.s.w.s.m.m.a.RequestMappingHandlerAdapter.initControllerAdviceCache - Looking for @ControllerAdvice: org.springframework.test.web.servlet.setup.StubWebApplicationContext@6d91790b
01-11-2018 23:37:20.570 [main] INFO     o.s.mock.web.MockServletContext.log - Initializing Spring FrameworkServlet ''
01-11-2018 23:37:20.570 [main] INFO     o.s.t.w.s.TestDispatcherServlet.initServletBean - FrameworkServlet '': initialization started
01-11-2018 23:37:20.572 [main] INFO     o.s.t.w.s.TestDispatcherServlet.initServletBean - FrameworkServlet '': initialization completed in 1 ms
01-11-2018 23:37:20.711 [main] INFO     c.g.movieland.dao.jdbc.JdbcMovieDao.getMoviesByIds - Start processing query to get movies with moviesIds: [1]
01-11-2018 23:37:20.731 [main] INFO     c.g.movieland.dao.jdbc.JdbcMovieDao.getMoviesByIds - Finish processing query to get movies with moviesIds: [1]. It took 18 ms
01-11-2018 23:37:20.731 [main] INFO     c.g.movieland.dao.jdbc.JdbcGenreDao.getGenresForMovies - Start processing query to get genres for movies with moviesIds: [1]
01-11-2018 23:37:20.736 [main] INFO     c.g.movieland.dao.jdbc.JdbcGenreDao.getGenresForMovies - Finish processing query to get genres for movies with moviesIds: [1]. It took 4 ms
01-11-2018 23:37:20.737 [main] INFO     c.g.m.dao.jdbc.JdbcCountryDao.getCountriesForMovies - Start processing query to get countries for movies with moviesIds: [1]
01-11-2018 23:37:20.740 [main] INFO     c.g.m.dao.jdbc.JdbcCountryDao.getCountriesForMovies - Finish processing query to get countries for movies with moviesIds: [1]. It took 2 ms
01-11-2018 23:37:20.743 [main] INFO     c.g.movieland.dao.jdbc.JdbcReviewDao.getReviews - Start processing query to get reviews with moviesId: 1
01-11-2018 23:37:20.755 [main] INFO     c.g.movieland.dao.jdbc.JdbcReviewDao.getReviews - Finish processing query to get reviews with moviesId: 1. It took 11 ms
01-11-2018 23:37:20.755 [main] INFO     c.g.movieland.dao.jdbc.JdbcUserDao.getUsersByIds - Start processing query to get users with userIds: [2, 3]
01-11-2018 23:37:20.759 [main] INFO     c.g.movieland.dao.jdbc.JdbcUserDao.getUsersByIds - Finish processing query to get users with userIds: [2, 3]. It took 3 ms
01-11-2018 23:37:21.070 [Thread-1] INFO     o.s.w.c.s.GenericWebApplicationContext.doClose - Closing org.springframework.web.context.support.GenericWebApplicationContext@c86b9e3: startup date [Thu Nov 01 23:37:18 EET 2018]; root of context hierarchy
01-11-2018 23:37:21.081 [Thread-1] INFO     o.s.j.d.e.EmbeddedDatabaseFactory.shutdownDatabase - Shutting down embedded database: url='jdbc:h2:mem:dataSource;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=false'
01-11-2018 23:37:58.505 [main] INFO     o.s.t.c.w.WebTestContextBootstrapper.getDefaultTestExecutionListenerClassNames - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
01-11-2018 23:37:58.529 [main] INFO     o.s.t.c.w.WebTestContextBootstrapper.getTestExecutionListeners - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@33cb5951, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@365c30cc, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@701fc37a, org.springframework.test.context.support.DirtiesContextTestExecutionListener@4148db48, org.springframework.test.context.transaction.TransactionalTestExecutionListener@282003e1, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@7fad8c79]
01-11-2018 23:37:59.278 [main] INFO     o.s.b.f.xml.XmlBeanDefinitionReader.loadBeanDefinitions - Loading XML bean definitions from class path resource [spring/test-context.xml]
01-11-2018 23:37:59.503 [main] INFO     o.s.b.f.xml.XmlBeanDefinitionReader.loadBeanDefinitions - Loading XML bean definitions from class path resource [spring/test-db-context.xml]
01-11-2018 23:37:59.932 [main] INFO     o.s.w.c.s.GenericWebApplicationContext.prepareRefresh - Refreshing org.springframework.web.context.support.GenericWebApplicationContext@c86b9e3: startup date [Thu Nov 01 23:37:59 EET 2018]; root of context hierarchy
01-11-2018 23:38:00.132 [main] INFO     o.s.c.a.ConfigurationClassBeanDefinitionReader.isOverriddenByExistingDefinition - Skipping bean definition for [BeanMethod:name=jdbcTemplate,declaringClass=com.gordeev.movieland.configuration.JdbcConfig]: a definition for bean 'jdbcTemplate' already exists. This top-level bean definition is considered as an override.
01-11-2018 23:38:00.133 [main] INFO     o.s.c.a.ConfigurationClassBeanDefinitionReader.isOverriddenByExistingDefinition - Skipping bean definition for [BeanMethod:name=namedJdbcTemplate,declaringClass=com.gordeev.movieland.configuration.JdbcConfig]: a definition for bean 'namedJdbcTemplate' already exists. This top-level bean definition is considered as an override.
01-11-2018 23:38:00.535 [main] INFO     o.s.j.d.e.EmbeddedDatabaseFactory.initDatabase - Starting embedded database: url='jdbc:h2:mem:dataSource;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=false', username='sa'
01-11-2018 23:38:00.769 [main] INFO     o.s.jdbc.datasource.init.ScriptUtils.executeSqlScript - Executing SQL script from class path resource [db/schema.sql]
01-11-2018 23:38:00.803 [main] INFO     o.s.jdbc.datasource.init.ScriptUtils.executeSqlScript - Executed SQL script from class path resource [db/schema.sql] in 33 ms.
01-11-2018 23:38:00.804 [main] INFO     o.s.jdbc.datasource.init.ScriptUtils.executeSqlScript - Executing SQL script from class path resource [db/data.sql]
01-11-2018 23:38:01.109 [main] INFO     o.s.jdbc.datasource.init.ScriptUtils.executeSqlScript - Executed SQL script from class path resource [db/data.sql] in 305 ms.
01-11-2018 23:38:01.196 [main] INFO     c.g.movieland.dao.jdbc.JdbcGenreDao.getAll - Start processing query to get all genres
01-11-2018 23:38:01.212 [main] INFO     c.g.movieland.dao.jdbc.JdbcGenreDao.getAll - Finish processing query to get all genres. It took 15 ms
01-11-2018 23:38:01.214 [main] INFO     c.g.movieland.dao.cache.GenreCache.invalidate - Update all genres in cache from dao
01-11-2018 23:38:01.557 [main] INFO     o.s.w.s.m.m.a.RequestMappingHandlerMapping.register - Mapped "{[/genre],methods=[GET]}" onto protected java.util.List<com.gordeev.movieland.entity.Genre> com.gordeev.movieland.controller.GenreController.getAllGenre()
01-11-2018 23:38:01.562 [main] INFO     o.s.w.s.m.m.a.RequestMappingHandlerMapping.register - Mapped "{[/movie/{movieId}],methods=[GET]}" onto protected com.gordeev.movieland.entity.Movie com.gordeev.movieland.controller.MovieController.getMovieById(int)
01-11-2018 23:38:01.564 [main] INFO     o.s.w.s.m.m.a.RequestMappingHandlerMapping.register - Mapped "{[/movie],methods=[GET]}" onto protected java.util.List<com.gordeev.movieland.entity.Movie> com.gordeev.movieland.controller.MovieController.getAllMovie(com.gordeev.movieland.vo.SortDirection,com.gordeev.movieland.vo.SortDirection)
01-11-2018 23:38:01.568 [main] INFO     o.s.w.s.m.m.a.RequestMappingHandlerMapping.register - Mapped "{[/movie/random],methods=[GET]}" onto protected java.util.List<com.gordeev.movieland.entity.Movie> com.gordeev.movieland.controller.MovieController.getThreeRandomMovie()
01-11-2018 23:38:01.570 [main] INFO     o.s.w.s.m.m.a.RequestMappingHandlerMapping.register - Mapped "{[/movie/genre/{genreId}],methods=[GET]}" onto protected java.util.List<com.gordeev.movieland.entity.Movie> com.gordeev.movieland.controller.MovieController.getMoviesByGenreId(int)
01-11-2018 23:38:01.887 [main] INFO     o.s.w.s.m.m.a.RequestMappingHandlerAdapter.initControllerAdviceCache - Looking for @ControllerAdvice: org.springframework.web.context.support.GenericWebApplicationContext@c86b9e3: startup date [Thu Nov 01 23:37:59 EET 2018]; root of context hierarchy
01-11-2018 23:38:02.267 [main] INFO     o.s.w.s.m.m.a.RequestMappingHandlerMapping.register - Mapped "{[/movie/{movieId}],methods=[GET]}" onto protected com.gordeev.movieland.entity.Movie com.gordeev.movieland.controller.MovieController.getMovieById(int)
01-11-2018 23:38:02.268 [main] INFO     o.s.w.s.m.m.a.RequestMappingHandlerMapping.register - Mapped "{[/movie],methods=[GET]}" onto protected java.util.List<com.gordeev.movieland.entity.Movie> com.gordeev.movieland.controller.MovieController.getAllMovie(com.gordeev.movieland.vo.SortDirection,com.gordeev.movieland.vo.SortDirection)
01-11-2018 23:38:02.269 [main] INFO     o.s.w.s.m.m.a.RequestMappingHandlerMapping.register - Mapped "{[/movie/random],methods=[GET]}" onto protected java.util.List<com.gordeev.movieland.entity.Movie> com.gordeev.movieland.controller.MovieController.getThreeRandomMovie()
01-11-2018 23:38:02.270 [main] INFO     o.s.w.s.m.m.a.RequestMappingHandlerMapping.register - Mapped "{[/movie/genre/{genreId}],methods=[GET]}" onto protected java.util.List<com.gordeev.movieland.entity.Movie> com.gordeev.movieland.controller.MovieController.getMoviesByGenreId(int)
01-11-2018 23:38:02.279 [main] INFO     o.s.w.s.m.m.a.RequestMappingHandlerAdapter.initControllerAdviceCache - Looking for @ControllerAdvice: org.springframework.test.web.servlet.setup.StubWebApplicationContext@6d91790b
01-11-2018 23:38:02.298 [main] INFO     o.s.mock.web.MockServletContext.log - Initializing Spring FrameworkServlet ''
01-11-2018 23:38:02.298 [main] INFO     o.s.t.w.s.TestDispatcherServlet.initServletBean - FrameworkServlet '': initialization started
01-11-2018 23:38:02.299 [main] INFO     o.s.t.w.s.TestDispatcherServlet.initServletBean - FrameworkServlet '': initialization completed in 1 ms
01-11-2018 23:38:02.435 [main] INFO     c.g.movieland.dao.jdbc.JdbcMovieDao.getMoviesByIds - Start processing query to get movies with moviesIds: [1]
01-11-2018 23:38:02.453 [main] INFO     c.g.movieland.dao.jdbc.JdbcMovieDao.getMoviesByIds - Finish processing query to get movies with moviesIds: [1]. It took 17 ms
01-11-2018 23:38:02.454 [main] INFO     c.g.movieland.dao.jdbc.JdbcGenreDao.getGenresForMovies - Start processing query to get genres for movies with moviesIds: [1]
01-11-2018 23:38:02.460 [main] INFO     c.g.movieland.dao.jdbc.JdbcGenreDao.getGenresForMovies - Finish processing query to get genres for movies with moviesIds: [1]. It took 5 ms
01-11-2018 23:38:02.461 [main] INFO     c.g.m.dao.jdbc.JdbcCountryDao.getCountriesForMovies - Start processing query to get countries for movies with moviesIds: [1]
01-11-2018 23:38:02.463 [main] INFO     c.g.m.dao.jdbc.JdbcCountryDao.getCountriesForMovies - Finish processing query to get countries for movies with moviesIds: [1]. It took 1 ms
01-11-2018 23:38:02.464 [main] INFO     c.g.movieland.dao.jdbc.JdbcReviewDao.getReviews - Start processing query to get reviews with moviesId: 1
01-11-2018 23:38:02.468 [main] INFO     c.g.movieland.dao.jdbc.JdbcReviewDao.getReviews - Finish processing query to get reviews with moviesId: 1. It took 3 ms
01-11-2018 23:38:02.469 [main] INFO     c.g.movieland.dao.jdbc.JdbcUserDao.getUsersByIds - Start processing query to get users with userIds: [2, 3]
01-11-2018 23:38:02.472 [main] INFO     c.g.movieland.dao.jdbc.JdbcUserDao.getUsersByIds - Finish processing query to get users with userIds: [2, 3]. It took 3 ms
01-11-2018 23:38:02.779 [Thread-1] INFO     o.s.w.c.s.GenericWebApplicationContext.doClose - Closing org.springframework.web.context.support.GenericWebApplicationContext@c86b9e3: startup date [Thu Nov 01 23:37:59 EET 2018]; root of context hierarchy
01-11-2018 23:38:02.799 [Thread-1] INFO     o.s.j.d.e.EmbeddedDatabaseFactory.shutdownDatabase - Shutting down embedded database: url='jdbc:h2:mem:dataSource;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=false'
01-11-2018 23:39:50.491 [main] INFO     o.s.t.c.w.WebTestContextBootstrapper.getDefaultTestExecutionListenerClassNames - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
01-11-2018 23:39:50.524 [main] INFO     o.s.t.c.w.WebTestContextBootstrapper.getTestExecutionListeners - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@33cb5951, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@365c30cc, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@701fc37a, org.springframework.test.context.support.DirtiesContextTestExecutionListener@4148db48, org.springframework.test.context.transaction.TransactionalTestExecutionListener@282003e1, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@7fad8c79]
01-11-2018 23:39:51.236 [main] INFO     o.s.b.f.xml.XmlBeanDefinitionReader.loadBeanDefinitions - Loading XML bean definitions from class path resource [spring/test-context.xml]
01-11-2018 23:39:51.538 [main] INFO     o.s.b.f.xml.XmlBeanDefinitionReader.loadBeanDefinitions - Loading XML bean definitions from class path resource [spring/test-db-context.xml]
01-11-2018 23:39:51.900 [main] INFO     o.s.w.c.s.GenericWebApplicationContext.prepareRefresh - Refreshing org.springframework.web.context.support.GenericWebApplicationContext@c86b9e3: startup date [Thu Nov 01 23:39:51 EET 2018]; root of context hierarchy
01-11-2018 23:39:52.087 [main] INFO     o.s.c.a.ConfigurationClassBeanDefinitionReader.isOverriddenByExistingDefinition - Skipping bean definition for [BeanMethod:name=jdbcTemplate,declaringClass=com.gordeev.movieland.configuration.JdbcConfig]: a definition for bean 'jdbcTemplate' already exists. This top-level bean definition is considered as an override.
01-11-2018 23:39:52.088 [main] INFO     o.s.c.a.ConfigurationClassBeanDefinitionReader.isOverriddenByExistingDefinition - Skipping bean definition for [BeanMethod:name=namedJdbcTemplate,declaringClass=com.gordeev.movieland.configuration.JdbcConfig]: a definition for bean 'namedJdbcTemplate' already exists. This top-level bean definition is considered as an override.
01-11-2018 23:39:52.530 [main] INFO     o.s.j.d.e.EmbeddedDatabaseFactory.initDatabase - Starting embedded database: url='jdbc:h2:mem:dataSource;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=false', username='sa'
01-11-2018 23:39:52.760 [main] INFO     o.s.jdbc.datasource.init.ScriptUtils.executeSqlScript - Executing SQL script from class path resource [db/schema.sql]
01-11-2018 23:39:52.794 [main] INFO     o.s.jdbc.datasource.init.ScriptUtils.executeSqlScript - Executed SQL script from class path resource [db/schema.sql] in 34 ms.
01-11-2018 23:39:52.795 [main] INFO     o.s.jdbc.datasource.init.ScriptUtils.executeSqlScript - Executing SQL script from class path resource [db/data.sql]
01-11-2018 23:39:53.180 [main] INFO     o.s.jdbc.datasource.init.ScriptUtils.executeSqlScript - Executed SQL script from class path resource [db/data.sql] in 385 ms.
01-11-2018 23:39:53.304 [main] INFO     c.g.movieland.dao.jdbc.JdbcGenreDao.getAll - Start processing query to get all genres
01-11-2018 23:39:53.315 [main] INFO     c.g.movieland.dao.jdbc.JdbcGenreDao.getAll - Finish processing query to get all genres. It took 10 ms
01-11-2018 23:39:53.318 [main] INFO     c.g.movieland.dao.cache.GenreCache.invalidate - Update all genres in cache from dao
01-11-2018 23:39:53.617 [main] INFO     o.s.w.s.m.m.a.RequestMappingHandlerMapping.register - Mapped "{[/genre],methods=[GET]}" onto protected java.util.List<com.gordeev.movieland.entity.Genre> com.gordeev.movieland.controller.GenreController.getAllGenre()
01-11-2018 23:39:53.622 [main] INFO     o.s.w.s.m.m.a.RequestMappingHandlerMapping.register - Mapped "{[/movie/{movieId}],methods=[GET]}" onto protected com.gordeev.movieland.entity.Movie com.gordeev.movieland.controller.MovieController.getMovieById(int)
01-11-2018 23:39:53.623 [main] INFO     o.s.w.s.m.m.a.RequestMappingHandlerMapping.register - Mapped "{[/movie],methods=[GET]}" onto protected java.util.List<com.gordeev.movieland.entity.Movie> com.gordeev.movieland.controller.MovieController.getAllMovie(com.gordeev.movieland.vo.SortDirection,com.gordeev.movieland.vo.SortDirection)
01-11-2018 23:39:53.624 [main] INFO     o.s.w.s.m.m.a.RequestMappingHandlerMapping.register - Mapped "{[/movie/random],methods=[GET]}" onto protected java.util.List<com.gordeev.movieland.entity.Movie> com.gordeev.movieland.controller.MovieController.getThreeRandomMovie()
01-11-2018 23:39:53.625 [main] INFO     o.s.w.s.m.m.a.RequestMappingHandlerMapping.register - Mapped "{[/movie/genre/{genreId}],methods=[GET]}" onto protected java.util.List<com.gordeev.movieland.entity.Movie> com.gordeev.movieland.controller.MovieController.getMoviesByGenreId(int)
01-11-2018 23:39:54.013 [main] INFO     o.s.w.s.m.m.a.RequestMappingHandlerAdapter.initControllerAdviceCache - Looking for @ControllerAdvice: org.springframework.web.context.support.GenericWebApplicationContext@c86b9e3: startup date [Thu Nov 01 23:39:51 EET 2018]; root of context hierarchy
01-11-2018 23:39:54.430 [main] INFO     o.s.w.s.m.m.a.RequestMappingHandlerMapping.register - Mapped "{[/movie/{movieId}],methods=[GET]}" onto protected com.gordeev.movieland.entity.Movie com.gordeev.movieland.controller.MovieController.getMovieById(int)
01-11-2018 23:39:54.432 [main] INFO     o.s.w.s.m.m.a.RequestMappingHandlerMapping.register - Mapped "{[/movie],methods=[GET]}" onto protected java.util.List<com.gordeev.movieland.entity.Movie> com.gordeev.movieland.controller.MovieController.getAllMovie(com.gordeev.movieland.vo.SortDirection,com.gordeev.movieland.vo.SortDirection)
01-11-2018 23:39:54.433 [main] INFO     o.s.w.s.m.m.a.RequestMappingHandlerMapping.register - Mapped "{[/movie/random],methods=[GET]}" onto protected java.util.List<com.gordeev.movieland.entity.Movie> com.gordeev.movieland.controller.MovieController.getThreeRandomMovie()
01-11-2018 23:39:54.434 [main] INFO     o.s.w.s.m.m.a.RequestMappingHandlerMapping.register - Mapped "{[/movie/genre/{genreId}],methods=[GET]}" onto protected java.util.List<com.gordeev.movieland.entity.Movie> com.gordeev.movieland.controller.MovieController.getMoviesByGenreId(int)
01-11-2018 23:39:54.444 [main] INFO     o.s.w.s.m.m.a.RequestMappingHandlerAdapter.initControllerAdviceCache - Looking for @ControllerAdvice: org.springframework.test.web.servlet.setup.StubWebApplicationContext@6d91790b
01-11-2018 23:39:54.464 [main] INFO     o.s.mock.web.MockServletContext.log - Initializing Spring FrameworkServlet ''
01-11-2018 23:39:54.464 [main] INFO     o.s.t.w.s.TestDispatcherServlet.initServletBean - FrameworkServlet '': initialization started
01-11-2018 23:39:54.466 [main] INFO     o.s.t.w.s.TestDispatcherServlet.initServletBean - FrameworkServlet '': initialization completed in 0 ms
01-11-2018 23:39:54.598 [main] INFO     c.g.movieland.dao.jdbc.JdbcMovieDao.getMoviesByIds - Start processing query to get movies with moviesIds: [1]
01-11-2018 23:39:54.618 [main] INFO     c.g.movieland.dao.jdbc.JdbcMovieDao.getMoviesByIds - Finish processing query to get movies with moviesIds: [1]. It took 20 ms
01-11-2018 23:39:54.619 [main] INFO     c.g.movieland.dao.jdbc.JdbcGenreDao.getGenresForMovies - Start processing query to get genres for movies with moviesIds: [1]
01-11-2018 23:39:54.623 [main] INFO     c.g.movieland.dao.jdbc.JdbcGenreDao.getGenresForMovies - Finish processing query to get genres for movies with moviesIds: [1]. It took 3 ms
01-11-2018 23:39:54.624 [main] INFO     c.g.m.dao.jdbc.JdbcCountryDao.getCountriesForMovies - Start processing query to get countries for movies with moviesIds: [1]
01-11-2018 23:39:54.628 [main] INFO     c.g.m.dao.jdbc.JdbcCountryDao.getCountriesForMovies - Finish processing query to get countries for movies with moviesIds: [1]. It took 3 ms
01-11-2018 23:39:54.628 [main] INFO     c.g.movieland.dao.jdbc.JdbcReviewDao.getReviews - Start processing query to get reviews with moviesId: 1
01-11-2018 23:39:54.632 [main] INFO     c.g.movieland.dao.jdbc.JdbcReviewDao.getReviews - Finish processing query to get reviews with moviesId: 1. It took 3 ms
01-11-2018 23:39:54.633 [main] INFO     c.g.movieland.dao.jdbc.JdbcUserDao.getUsersByIds - Start processing query to get users with userIds: [2, 3]
01-11-2018 23:39:54.660 [main] INFO     c.g.movieland.dao.jdbc.JdbcUserDao.getUsersByIds - Finish processing query to get users with userIds: [2, 3]. It took 27 ms
01-11-2018 23:39:55.016 [Thread-1] INFO     o.s.w.c.s.GenericWebApplicationContext.doClose - Closing org.springframework.web.context.support.GenericWebApplicationContext@c86b9e3: startup date [Thu Nov 01 23:39:51 EET 2018]; root of context hierarchy
01-11-2018 23:39:55.036 [Thread-1] INFO     o.s.j.d.e.EmbeddedDatabaseFactory.shutdownDatabase - Shutting down embedded database: url='jdbc:h2:mem:dataSource;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=false'
01-11-2018 23:41:13.105 [main] INFO     o.s.t.c.w.WebTestContextBootstrapper.getDefaultTestExecutionListenerClassNames - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
01-11-2018 23:41:13.138 [main] INFO     o.s.t.c.w.WebTestContextBootstrapper.getTestExecutionListeners - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@33cb5951, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@365c30cc, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@701fc37a, org.springframework.test.context.support.DirtiesContextTestExecutionListener@4148db48, org.springframework.test.context.transaction.TransactionalTestExecutionListener@282003e1, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@7fad8c79]
01-11-2018 23:41:13.904 [main] INFO     o.s.b.f.xml.XmlBeanDefinitionReader.loadBeanDefinitions - Loading XML bean definitions from class path resource [spring/test-context.xml]
01-11-2018 23:41:14.280 [main] INFO     o.s.b.f.xml.XmlBeanDefinitionReader.loadBeanDefinitions - Loading XML bean definitions from class path resource [spring/test-db-context.xml]
01-11-2018 23:41:14.636 [main] INFO     o.s.w.c.s.GenericWebApplicationContext.prepareRefresh - Refreshing org.springframework.web.context.support.GenericWebApplicationContext@c86b9e3: startup date [Thu Nov 01 23:41:14 EET 2018]; root of context hierarchy
01-11-2018 23:41:14.839 [main] INFO     o.s.c.a.ConfigurationClassBeanDefinitionReader.isOverriddenByExistingDefinition - Skipping bean definition for [BeanMethod:name=jdbcTemplate,declaringClass=com.gordeev.movieland.configuration.JdbcConfig]: a definition for bean 'jdbcTemplate' already exists. This top-level bean definition is considered as an override.
01-11-2018 23:41:14.840 [main] INFO     o.s.c.a.ConfigurationClassBeanDefinitionReader.isOverriddenByExistingDefinition - Skipping bean definition for [BeanMethod:name=namedJdbcTemplate,declaringClass=com.gordeev.movieland.configuration.JdbcConfig]: a definition for bean 'namedJdbcTemplate' already exists. This top-level bean definition is considered as an override.
01-11-2018 23:41:15.270 [main] INFO     o.s.j.d.e.EmbeddedDatabaseFactory.initDatabase - Starting embedded database: url='jdbc:h2:mem:dataSource;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=false', username='sa'
01-11-2018 23:41:15.487 [main] INFO     o.s.jdbc.datasource.init.ScriptUtils.executeSqlScript - Executing SQL script from class path resource [db/schema.sql]
01-11-2018 23:41:15.524 [main] INFO     o.s.jdbc.datasource.init.ScriptUtils.executeSqlScript - Executed SQL script from class path resource [db/schema.sql] in 36 ms.
01-11-2018 23:41:15.525 [main] INFO     o.s.jdbc.datasource.init.ScriptUtils.executeSqlScript - Executing SQL script from class path resource [db/data.sql]
01-11-2018 23:41:15.843 [main] INFO     o.s.jdbc.datasource.init.ScriptUtils.executeSqlScript - Executed SQL script from class path resource [db/data.sql] in 318 ms.
01-11-2018 23:41:15.939 [main] INFO     c.g.movieland.dao.jdbc.JdbcGenreDao.getAll - Start processing query to get all genres
01-11-2018 23:41:15.951 [main] INFO     c.g.movieland.dao.jdbc.JdbcGenreDao.getAll - Finish processing query to get all genres. It took 11 ms
01-11-2018 23:41:15.954 [main] INFO     c.g.movieland.dao.cache.GenreCache.invalidate - Update all genres in cache from dao
01-11-2018 23:41:16.249 [main] INFO     o.s.w.s.m.m.a.RequestMappingHandlerMapping.register - Mapped "{[/genre],methods=[GET]}" onto protected java.util.List<com.gordeev.movieland.entity.Genre> com.gordeev.movieland.controller.GenreController.getAllGenre()
01-11-2018 23:41:16.254 [main] INFO     o.s.w.s.m.m.a.RequestMappingHandlerMapping.register - Mapped "{[/movie/{movieId}],methods=[GET]}" onto protected com.gordeev.movieland.entity.Movie com.gordeev.movieland.controller.MovieController.getMovieById(int)
01-11-2018 23:41:16.255 [main] INFO     o.s.w.s.m.m.a.RequestMappingHandlerMapping.register - Mapped "{[/movie/genre/{genreId}],methods=[GET]}" onto protected java.util.List<com.gordeev.movieland.entity.Movie> com.gordeev.movieland.controller.MovieController.getMoviesByGenreId(int)
01-11-2018 23:41:16.256 [main] INFO     o.s.w.s.m.m.a.RequestMappingHandlerMapping.register - Mapped "{[/movie],methods=[GET]}" onto protected java.util.List<com.gordeev.movieland.entity.Movie> com.gordeev.movieland.controller.MovieController.getAllMovie(com.gordeev.movieland.vo.SortDirection,com.gordeev.movieland.vo.SortDirection)
01-11-2018 23:41:16.257 [main] INFO     o.s.w.s.m.m.a.RequestMappingHandlerMapping.register - Mapped "{[/movie/random],methods=[GET]}" onto protected java.util.List<com.gordeev.movieland.entity.Movie> com.gordeev.movieland.controller.MovieController.getThreeRandomMovie()
01-11-2018 23:41:16.508 [main] INFO     o.s.w.s.m.m.a.RequestMappingHandlerAdapter.initControllerAdviceCache - Looking for @ControllerAdvice: org.springframework.web.context.support.GenericWebApplicationContext@c86b9e3: startup date [Thu Nov 01 23:41:14 EET 2018]; root of context hierarchy
01-11-2018 23:41:16.853 [main] INFO     o.s.w.s.m.m.a.RequestMappingHandlerMapping.register - Mapped "{[/movie/{movieId}],methods=[GET]}" onto protected com.gordeev.movieland.entity.Movie com.gordeev.movieland.controller.MovieController.getMovieById(int)
01-11-2018 23:41:16.854 [main] INFO     o.s.w.s.m.m.a.RequestMappingHandlerMapping.register - Mapped "{[/movie/genre/{genreId}],methods=[GET]}" onto protected java.util.List<com.gordeev.movieland.entity.Movie> com.gordeev.movieland.controller.MovieController.getMoviesByGenreId(int)
01-11-2018 23:41:16.855 [main] INFO     o.s.w.s.m.m.a.RequestMappingHandlerMapping.register - Mapped "{[/movie],methods=[GET]}" onto protected java.util.List<com.gordeev.movieland.entity.Movie> com.gordeev.movieland.controller.MovieController.getAllMovie(com.gordeev.movieland.vo.SortDirection,com.gordeev.movieland.vo.SortDirection)
01-11-2018 23:41:16.856 [main] INFO     o.s.w.s.m.m.a.RequestMappingHandlerMapping.register - Mapped "{[/movie/random],methods=[GET]}" onto protected java.util.List<com.gordeev.movieland.entity.Movie> com.gordeev.movieland.controller.MovieController.getThreeRandomMovie()
01-11-2018 23:41:16.866 [main] INFO     o.s.w.s.m.m.a.RequestMappingHandlerAdapter.initControllerAdviceCache - Looking for @ControllerAdvice: org.springframework.test.web.servlet.setup.StubWebApplicationContext@6d91790b
01-11-2018 23:41:16.884 [main] INFO     o.s.mock.web.MockServletContext.log - Initializing Spring FrameworkServlet ''
01-11-2018 23:41:16.885 [main] INFO     o.s.t.w.s.TestDispatcherServlet.initServletBean - FrameworkServlet '': initialization started
01-11-2018 23:41:16.887 [main] INFO     o.s.t.w.s.TestDispatcherServlet.initServletBean - FrameworkServlet '': initialization completed in 2 ms
01-11-2018 23:41:17.010 [main] INFO     c.g.movieland.dao.jdbc.JdbcMovieDao.getMoviesByIds - Start processing query to get movies with moviesIds: [1]
01-11-2018 23:41:17.024 [main] INFO     c.g.movieland.dao.jdbc.JdbcMovieDao.getMoviesByIds - Finish processing query to get movies with moviesIds: [1]. It took 13 ms
01-11-2018 23:41:17.025 [main] INFO     c.g.movieland.dao.jdbc.JdbcGenreDao.getGenresForMovies - Start processing query to get genres for movies with moviesIds: [1]
01-11-2018 23:41:17.032 [main] INFO     c.g.movieland.dao.jdbc.JdbcGenreDao.getGenresForMovies - Finish processing query to get genres for movies with moviesIds: [1]. It took 3 ms
01-11-2018 23:41:17.034 [main] INFO     c.g.m.dao.jdbc.JdbcCountryDao.getCountriesForMovies - Start processing query to get countries for movies with moviesIds: [1]
01-11-2018 23:41:17.036 [main] INFO     c.g.m.dao.jdbc.JdbcCountryDao.getCountriesForMovies - Finish processing query to get countries for movies with moviesIds: [1]. It took 2 ms
01-11-2018 23:41:17.037 [main] INFO     c.g.movieland.dao.jdbc.JdbcReviewDao.getReviews - Start processing query to get reviews with moviesId: 1
01-11-2018 23:41:17.041 [main] INFO     c.g.movieland.dao.jdbc.JdbcReviewDao.getReviews - Finish processing query to get reviews with moviesId: 1. It took 4 ms
01-11-2018 23:41:17.042 [main] INFO     c.g.movieland.dao.jdbc.JdbcUserDao.getUsersByIds - Start processing query to get users with userIds: [2, 3]
01-11-2018 23:41:17.045 [main] INFO     c.g.movieland.dao.jdbc.JdbcUserDao.getUsersByIds - Finish processing query to get users with userIds: [2, 3]. It took 3 ms
01-11-2018 23:41:17.351 [Thread-1] INFO     o.s.w.c.s.GenericWebApplicationContext.doClose - Closing org.springframework.web.context.support.GenericWebApplicationContext@c86b9e3: startup date [Thu Nov 01 23:41:14 EET 2018]; root of context hierarchy
01-11-2018 23:41:17.358 [Thread-1] INFO     o.s.j.d.e.EmbeddedDatabaseFactory.shutdownDatabase - Shutting down embedded database: url='jdbc:h2:mem:dataSource;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=false'
01-11-2018 23:41:48.722 [main] INFO     o.s.t.c.w.WebTestContextBootstrapper.getDefaultTestExecutionListenerClassNames - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
01-11-2018 23:41:48.749 [main] INFO     o.s.t.c.w.WebTestContextBootstrapper.getTestExecutionListeners - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@33cb5951, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@365c30cc, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@701fc37a, org.springframework.test.context.support.DirtiesContextTestExecutionListener@4148db48, org.springframework.test.context.transaction.TransactionalTestExecutionListener@282003e1, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@7fad8c79]
01-11-2018 23:41:49.421 [main] INFO     o.s.b.f.xml.XmlBeanDefinitionReader.loadBeanDefinitions - Loading XML bean definitions from class path resource [spring/test-context.xml]
01-11-2018 23:41:49.762 [main] INFO     o.s.b.f.xml.XmlBeanDefinitionReader.loadBeanDefinitions - Loading XML bean definitions from class path resource [spring/test-db-context.xml]
01-11-2018 23:41:50.137 [main] INFO     o.s.w.c.s.GenericWebApplicationContext.prepareRefresh - Refreshing org.springframework.web.context.support.GenericWebApplicationContext@c86b9e3: startup date [Thu Nov 01 23:41:50 EET 2018]; root of context hierarchy
01-11-2018 23:41:50.380 [main] INFO     o.s.c.a.ConfigurationClassBeanDefinitionReader.isOverriddenByExistingDefinition - Skipping bean definition for [BeanMethod:name=jdbcTemplate,declaringClass=com.gordeev.movieland.configuration.JdbcConfig]: a definition for bean 'jdbcTemplate' already exists. This top-level bean definition is considered as an override.
01-11-2018 23:41:50.381 [main] INFO     o.s.c.a.ConfigurationClassBeanDefinitionReader.isOverriddenByExistingDefinition - Skipping bean definition for [BeanMethod:name=namedJdbcTemplate,declaringClass=com.gordeev.movieland.configuration.JdbcConfig]: a definition for bean 'namedJdbcTemplate' already exists. This top-level bean definition is considered as an override.
01-11-2018 23:41:50.972 [main] INFO     o.s.j.d.e.EmbeddedDatabaseFactory.initDatabase - Starting embedded database: url='jdbc:h2:mem:dataSource;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=false', username='sa'
01-11-2018 23:41:51.320 [main] INFO     o.s.jdbc.datasource.init.ScriptUtils.executeSqlScript - Executing SQL script from class path resource [db/schema.sql]
01-11-2018 23:41:51.376 [main] INFO     o.s.jdbc.datasource.init.ScriptUtils.executeSqlScript - Executed SQL script from class path resource [db/schema.sql] in 55 ms.
01-11-2018 23:41:51.376 [main] INFO     o.s.jdbc.datasource.init.ScriptUtils.executeSqlScript - Executing SQL script from class path resource [db/data.sql]
01-11-2018 23:41:51.743 [main] INFO     o.s.jdbc.datasource.init.ScriptUtils.executeSqlScript - Executed SQL script from class path resource [db/data.sql] in 365 ms.
01-11-2018 23:41:51.839 [main] INFO     c.g.movieland.dao.jdbc.JdbcGenreDao.getAll - Start processing query to get all genres
01-11-2018 23:41:51.853 [main] INFO     c.g.movieland.dao.jdbc.JdbcGenreDao.getAll - Finish processing query to get all genres. It took 14 ms
01-11-2018 23:41:51.856 [main] INFO     c.g.movieland.dao.cache.GenreCache.invalidate - Update all genres in cache from dao
01-11-2018 23:41:52.162 [main] INFO     o.s.w.s.m.m.a.RequestMappingHandlerMapping.register - Mapped "{[/genre],methods=[GET]}" onto protected java.util.List<com.gordeev.movieland.entity.Genre> com.gordeev.movieland.controller.GenreController.getAllGenre()
01-11-2018 23:41:52.167 [main] INFO     o.s.w.s.m.m.a.RequestMappingHandlerMapping.register - Mapped "{[/movie/{movieId}],methods=[GET]}" onto protected com.gordeev.movieland.entity.Movie com.gordeev.movieland.controller.MovieController.getMovieById(int)
01-11-2018 23:41:52.168 [main] INFO     o.s.w.s.m.m.a.RequestMappingHandlerMapping.register - Mapped "{[/movie],methods=[GET]}" onto protected java.util.List<com.gordeev.movieland.entity.Movie> com.gordeev.movieland.controller.MovieController.getAllMovie(com.gordeev.movieland.vo.SortDirection,com.gordeev.movieland.vo.SortDirection)
01-11-2018 23:41:52.169 [main] INFO     o.s.w.s.m.m.a.RequestMappingHandlerMapping.register - Mapped "{[/movie/random],methods=[GET]}" onto protected java.util.List<com.gordeev.movieland.entity.Movie> com.gordeev.movieland.controller.MovieController.getThreeRandomMovie()
01-11-2018 23:41:52.170 [main] INFO     o.s.w.s.m.m.a.RequestMappingHandlerMapping.register - Mapped "{[/movie/genre/{genreId}],methods=[GET]}" onto protected java.util.List<com.gordeev.movieland.entity.Movie> com.gordeev.movieland.controller.MovieController.getMoviesByGenreId(int)
01-11-2018 23:41:52.489 [main] INFO     o.s.w.s.m.m.a.RequestMappingHandlerAdapter.initControllerAdviceCache - Looking for @ControllerAdvice: org.springframework.web.context.support.GenericWebApplicationContext@c86b9e3: startup date [Thu Nov 01 23:41:50 EET 2018]; root of context hierarchy
01-11-2018 23:41:52.866 [main] INFO     o.s.w.s.m.m.a.RequestMappingHandlerMapping.register - Mapped "{[/movie/{movieId}],methods=[GET]}" onto protected com.gordeev.movieland.entity.Movie com.gordeev.movieland.controller.MovieController.getMovieById(int)
01-11-2018 23:41:52.867 [main] INFO     o.s.w.s.m.m.a.RequestMappingHandlerMapping.register - Mapped "{[/movie],methods=[GET]}" onto protected java.util.List<com.gordeev.movieland.entity.Movie> com.gordeev.movieland.controller.MovieController.getAllMovie(com.gordeev.movieland.vo.SortDirection,com.gordeev.movieland.vo.SortDirection)
01-11-2018 23:41:52.868 [main] INFO     o.s.w.s.m.m.a.RequestMappingHandlerMapping.register - Mapped "{[/movie/random],methods=[GET]}" onto protected java.util.List<com.gordeev.movieland.entity.Movie> com.gordeev.movieland.controller.MovieController.getThreeRandomMovie()
01-11-2018 23:41:52.869 [main] INFO     o.s.w.s.m.m.a.RequestMappingHandlerMapping.register - Mapped "{[/movie/genre/{genreId}],methods=[GET]}" onto protected java.util.List<com.gordeev.movieland.entity.Movie> com.gordeev.movieland.controller.MovieController.getMoviesByGenreId(int)
01-11-2018 23:41:52.880 [main] INFO     o.s.w.s.m.m.a.RequestMappingHandlerAdapter.initControllerAdviceCache - Looking for @ControllerAdvice: org.springframework.test.web.servlet.setup.StubWebApplicationContext@6d91790b
01-11-2018 23:41:52.899 [main] INFO     o.s.mock.web.MockServletContext.log - Initializing Spring FrameworkServlet ''
01-11-2018 23:41:52.900 [main] INFO     o.s.t.w.s.TestDispatcherServlet.initServletBean - FrameworkServlet '': initialization started
01-11-2018 23:41:52.901 [main] INFO     o.s.t.w.s.TestDispatcherServlet.initServletBean - FrameworkServlet '': initialization completed in 1 ms
01-11-2018 23:41:53.034 [main] INFO     c.g.movieland.dao.jdbc.JdbcMovieDao.getMoviesByIds - Start processing query to get movies with moviesIds: [1]
01-11-2018 23:41:53.052 [main] INFO     c.g.movieland.dao.jdbc.JdbcMovieDao.getMoviesByIds - Finish processing query to get movies with moviesIds: [1]. It took 18 ms
01-11-2018 23:41:53.053 [main] INFO     c.g.movieland.dao.jdbc.JdbcGenreDao.getGenresForMovies - Start processing query to get genres for movies with moviesIds: [1]
01-11-2018 23:41:53.057 [main] INFO     c.g.movieland.dao.jdbc.JdbcGenreDao.getGenresForMovies - Finish processing query to get genres for movies with moviesIds: [1]. It took 4 ms
01-11-2018 23:41:53.058 [main] INFO     c.g.m.dao.jdbc.JdbcCountryDao.getCountriesForMovies - Start processing query to get countries for movies with moviesIds: [1]
01-11-2018 23:41:53.060 [main] INFO     c.g.m.dao.jdbc.JdbcCountryDao.getCountriesForMovies - Finish processing query to get countries for movies with moviesIds: [1]. It took 2 ms
01-11-2018 23:41:53.061 [main] INFO     c.g.movieland.dao.jdbc.JdbcReviewDao.getReviews - Start processing query to get reviews with moviesId: 1
01-11-2018 23:41:53.065 [main] INFO     c.g.movieland.dao.jdbc.JdbcReviewDao.getReviews - Finish processing query to get reviews with moviesId: 1. It took 4 ms
01-11-2018 23:41:53.065 [main] INFO     c.g.movieland.dao.jdbc.JdbcUserDao.getUsersByIds - Start processing query to get users with userIds: [2, 3]
01-11-2018 23:41:53.068 [main] INFO     c.g.movieland.dao.jdbc.JdbcUserDao.getUsersByIds - Finish processing query to get users with userIds: [2, 3]. It took 2 ms
01-11-2018 23:41:53.389 [Thread-1] INFO     o.s.w.c.s.GenericWebApplicationContext.doClose - Closing org.springframework.web.context.support.GenericWebApplicationContext@c86b9e3: startup date [Thu Nov 01 23:41:50 EET 2018]; root of context hierarchy
01-11-2018 23:41:53.401 [Thread-1] INFO     o.s.j.d.e.EmbeddedDatabaseFactory.shutdownDatabase - Shutting down embedded database: url='jdbc:h2:mem:dataSource;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=false'
01-11-2018 23:42:53.031 [main] INFO     o.s.t.c.w.WebTestContextBootstrapper.getDefaultTestExecutionListenerClassNames - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
01-11-2018 23:42:53.088 [main] INFO     o.s.t.c.w.WebTestContextBootstrapper.getTestExecutionListeners - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@33cb5951, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@365c30cc, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@701fc37a, org.springframework.test.context.support.DirtiesContextTestExecutionListener@4148db48, org.springframework.test.context.transaction.TransactionalTestExecutionListener@282003e1, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@7fad8c79]
01-11-2018 23:42:53.828 [main] INFO     o.s.b.f.xml.XmlBeanDefinitionReader.loadBeanDefinitions - Loading XML bean definitions from class path resource [spring/test-context.xml]
01-11-2018 23:42:54.081 [main] INFO     o.s.b.f.xml.XmlBeanDefinitionReader.loadBeanDefinitions - Loading XML bean definitions from class path resource [spring/test-db-context.xml]
01-11-2018 23:42:54.440 [main] INFO     o.s.w.c.s.GenericWebApplicationContext.prepareRefresh - Refreshing org.springframework.web.context.support.GenericWebApplicationContext@c86b9e3: startup date [Thu Nov 01 23:42:54 EET 2018]; root of context hierarchy
01-11-2018 23:42:54.637 [main] INFO     o.s.c.a.ConfigurationClassBeanDefinitionReader.isOverriddenByExistingDefinition - Skipping bean definition for [BeanMethod:name=jdbcTemplate,declaringClass=com.gordeev.movieland.configuration.JdbcConfig]: a definition for bean 'jdbcTemplate' already exists. This top-level bean definition is considered as an override.
01-11-2018 23:42:54.638 [main] INFO     o.s.c.a.ConfigurationClassBeanDefinitionReader.isOverriddenByExistingDefinition - Skipping bean definition for [BeanMethod:name=namedJdbcTemplate,declaringClass=com.gordeev.movieland.configuration.JdbcConfig]: a definition for bean 'namedJdbcTemplate' already exists. This top-level bean definition is considered as an override.
01-11-2018 23:42:55.136 [main] INFO     o.s.j.d.e.EmbeddedDatabaseFactory.initDatabase - Starting embedded database: url='jdbc:h2:mem:dataSource;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=false', username='sa'
01-11-2018 23:42:55.418 [main] INFO     o.s.jdbc.datasource.init.ScriptUtils.executeSqlScript - Executing SQL script from class path resource [db/schema.sql]
01-11-2018 23:42:55.462 [main] INFO     o.s.jdbc.datasource.init.ScriptUtils.executeSqlScript - Executed SQL script from class path resource [db/schema.sql] in 43 ms.
01-11-2018 23:42:55.463 [main] INFO     o.s.jdbc.datasource.init.ScriptUtils.executeSqlScript - Executing SQL script from class path resource [db/data.sql]
01-11-2018 23:42:55.860 [main] INFO     o.s.jdbc.datasource.init.ScriptUtils.executeSqlScript - Executed SQL script from class path resource [db/data.sql] in 397 ms.
01-11-2018 23:42:55.956 [main] INFO     c.g.movieland.dao.jdbc.JdbcGenreDao.getAll - Start processing query to get all genres
01-11-2018 23:42:55.972 [main] INFO     c.g.movieland.dao.jdbc.JdbcGenreDao.getAll - Finish processing query to get all genres. It took 14 ms
01-11-2018 23:42:55.974 [main] INFO     c.g.movieland.dao.cache.GenreCache.invalidate - Update all genres in cache from dao
01-11-2018 23:42:56.315 [main] INFO     o.s.w.s.m.m.a.RequestMappingHandlerMapping.register - Mapped "{[/genre],methods=[GET]}" onto protected java.util.List<com.gordeev.movieland.entity.Genre> com.gordeev.movieland.controller.GenreController.getAllGenre()
01-11-2018 23:42:56.319 [main] INFO     o.s.w.s.m.m.a.RequestMappingHandlerMapping.register - Mapped "{[/movie/{movieId}],methods=[GET]}" onto protected com.gordeev.movieland.entity.Movie com.gordeev.movieland.controller.MovieController.getMovieById(int)
01-11-2018 23:42:56.321 [main] INFO     o.s.w.s.m.m.a.RequestMappingHandlerMapping.register - Mapped "{[/movie/random],methods=[GET]}" onto protected java.util.List<com.gordeev.movieland.entity.Movie> com.gordeev.movieland.controller.MovieController.getThreeRandomMovie()
01-11-2018 23:42:56.322 [main] INFO     o.s.w.s.m.m.a.RequestMappingHandlerMapping.register - Mapped "{[/movie/genre/{genreId}],methods=[GET]}" onto protected java.util.List<com.gordeev.movieland.entity.Movie> com.gordeev.movieland.controller.MovieController.getMoviesByGenreId(int)
01-11-2018 23:42:56.323 [main] INFO     o.s.w.s.m.m.a.RequestMappingHandlerMapping.register - Mapped "{[/movie],methods=[GET]}" onto protected java.util.List<com.gordeev.movieland.entity.Movie> com.gordeev.movieland.controller.MovieController.getAllMovie(com.gordeev.movieland.vo.SortDirection,com.gordeev.movieland.vo.SortDirection)
01-11-2018 23:42:56.592 [main] INFO     o.s.w.s.m.m.a.RequestMappingHandlerAdapter.initControllerAdviceCache - Looking for @ControllerAdvice: org.springframework.web.context.support.GenericWebApplicationContext@c86b9e3: startup date [Thu Nov 01 23:42:54 EET 2018]; root of context hierarchy
01-11-2018 23:42:56.920 [main] INFO     o.s.w.s.m.m.a.RequestMappingHandlerMapping.register - Mapped "{[/movie/{movieId}],methods=[GET]}" onto protected com.gordeev.movieland.entity.Movie com.gordeev.movieland.controller.MovieController.getMovieById(int)
01-11-2018 23:42:56.921 [main] INFO     o.s.w.s.m.m.a.RequestMappingHandlerMapping.register - Mapped "{[/movie/random],methods=[GET]}" onto protected java.util.List<com.gordeev.movieland.entity.Movie> com.gordeev.movieland.controller.MovieController.getThreeRandomMovie()
01-11-2018 23:42:56.922 [main] INFO     o.s.w.s.m.m.a.RequestMappingHandlerMapping.register - Mapped "{[/movie/genre/{genreId}],methods=[GET]}" onto protected java.util.List<com.gordeev.movieland.entity.Movie> com.gordeev.movieland.controller.MovieController.getMoviesByGenreId(int)
01-11-2018 23:42:56.923 [main] INFO     o.s.w.s.m.m.a.RequestMappingHandlerMapping.register - Mapped "{[/movie],methods=[GET]}" onto protected java.util.List<com.gordeev.movieland.entity.Movie> com.gordeev.movieland.controller.MovieController.getAllMovie(com.gordeev.movieland.vo.SortDirection,com.gordeev.movieland.vo.SortDirection)
01-11-2018 23:42:56.933 [main] INFO     o.s.w.s.m.m.a.RequestMappingHandlerAdapter.initControllerAdviceCache - Looking for @ControllerAdvice: org.springframework.test.web.servlet.setup.StubWebApplicationContext@6d91790b
01-11-2018 23:42:56.950 [main] INFO     o.s.mock.web.MockServletContext.log - Initializing Spring FrameworkServlet ''
01-11-2018 23:42:56.951 [main] INFO     o.s.t.w.s.TestDispatcherServlet.initServletBean - FrameworkServlet '': initialization started
01-11-2018 23:42:56.952 [main] INFO     o.s.t.w.s.TestDispatcherServlet.initServletBean - FrameworkServlet '': initialization completed in 1 ms
01-11-2018 23:42:57.103 [main] INFO     c.g.movieland.dao.jdbc.JdbcMovieDao.getMoviesByIds - Start processing query to get movies with moviesIds: [1]
01-11-2018 23:42:57.119 [main] INFO     c.g.movieland.dao.jdbc.JdbcMovieDao.getMoviesByIds - Finish processing query to get movies with moviesIds: [1]. It took 16 ms
01-11-2018 23:42:57.120 [main] INFO     c.g.movieland.dao.jdbc.JdbcGenreDao.getGenresForMovies - Start processing query to get genres for movies with moviesIds: [1]
01-11-2018 23:42:57.138 [main] INFO     c.g.movieland.dao.jdbc.JdbcGenreDao.getGenresForMovies - Finish processing query to get genres for movies with moviesIds: [1]. It took 14 ms
01-11-2018 23:42:57.140 [main] INFO     c.g.m.dao.jdbc.JdbcCountryDao.getCountriesForMovies - Start processing query to get countries for movies with moviesIds: [1]
01-11-2018 23:42:57.143 [main] INFO     c.g.m.dao.jdbc.JdbcCountryDao.getCountriesForMovies - Finish processing query to get countries for movies with moviesIds: [1]. It took 3 ms
01-11-2018 23:42:57.144 [main] INFO     c.g.movieland.dao.jdbc.JdbcReviewDao.getReviews - Start processing query to get reviews with moviesId: 1
01-11-2018 23:42:57.148 [main] INFO     c.g.movieland.dao.jdbc.JdbcReviewDao.getReviews - Finish processing query to get reviews with moviesId: 1. It took 4 ms
01-11-2018 23:42:57.149 [main] INFO     c.g.movieland.dao.jdbc.JdbcUserDao.getUsersByIds - Start processing query to get users with userIds: [2, 3]
01-11-2018 23:42:57.152 [main] INFO     c.g.movieland.dao.jdbc.JdbcUserDao.getUsersByIds - Finish processing query to get users with userIds: [2, 3]. It took 3 ms
01-11-2018 23:42:57.491 [Thread-1] INFO     o.s.w.c.s.GenericWebApplicationContext.doClose - Closing org.springframework.web.context.support.GenericWebApplicationContext@c86b9e3: startup date [Thu Nov 01 23:42:54 EET 2018]; root of context hierarchy
01-11-2018 23:42:57.501 [Thread-1] INFO     o.s.j.d.e.EmbeddedDatabaseFactory.shutdownDatabase - Shutting down embedded database: url='jdbc:h2:mem:dataSource;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=false'
